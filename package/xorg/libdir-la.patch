--- xc/lib/Xft/ltmain.sh.orig	2004-04-23 12:43:42.000000000 -0600
+++ xc/lib/Xft/ltmain.sh	2007-01-13 15:04:20.000000000 -0700
@@ -548,7 +548,7 @@
 	if test -z "$tagname"; then
 	  $echo "$modename: unable to infer tagged configuration"
 	  $echo "$modename: specify a tag with \`--tag'" 1>&2
-	  exit 1
+	  #exit 1
 #        else
 #          $echo "$modename: using $tagname tagged configuration"
 	fi
@@ -1652,7 +1652,7 @@
 	if test -z "$tagname"; then
 	  $echo "$modename: unable to infer tagged configuration"
 	  $echo "$modename: specify a tag with \`--tag'" 1>&2
-	  exit 1
+	  #exit 1
 #       else
 #         $echo "$modename: using $tagname tagged configuration"
 	fi
@@ -5362,10 +5362,13 @@
 	  # At present, this check doesn't affect windows .dll's that
 	  # are installed into $libdir/../bin (currently, that works fine)
 	  # but it's something to keep an eye on.
-	  if test "$inst_prefix_dir" = "$destdir"; then
-	    $echo "$modename: error: cannot install \`$file' to a directory not ending in $libdir" 1>&2
-	    exit 1
-	  fi
+	  #
+	  # This breaks install into our staging area.  -PB
+	  # 
+	  #if test "$inst_prefix_dir" = "$destdir"; then
+	  #  $echo "$modename: error: cannot install \`$file' to a directory not ending in $libdir" 1>&2
+	  #  exit 1
+	  #fi
 
 	  if test -n "$inst_prefix_dir"; then
 	    # Stick the inst_prefix_dir data into the link command.
--- xc/extras/fontconfig/ltmain.sh.orig	2004-04-23 12:43:42.000000000 -0600
+++ xc/extras/fontconfig/ltmain.sh	2007-01-13 15:04:20.000000000 -0700
@@ -548,7 +548,7 @@
 	if test -z "$tagname"; then
 	  $echo "$modename: unable to infer tagged configuration"
 	  $echo "$modename: specify a tag with \`--tag'" 1>&2
-	  exit 1
+	  #exit 1
 #        else
 #          $echo "$modename: using $tagname tagged configuration"
 	fi
@@ -1652,7 +1652,7 @@
 	if test -z "$tagname"; then
 	  $echo "$modename: unable to infer tagged configuration"
 	  $echo "$modename: specify a tag with \`--tag'" 1>&2
-	  exit 1
+	  #exit 1
 #       else
 #         $echo "$modename: using $tagname tagged configuration"
 	fi
@@ -5362,10 +5362,13 @@
 	  # At present, this check doesn't affect windows .dll's that
 	  # are installed into $libdir/../bin (currently, that works fine)
 	  # but it's something to keep an eye on.
-	  if test "$inst_prefix_dir" = "$destdir"; then
-	    $echo "$modename: error: cannot install \`$file' to a directory not ending in $libdir" 1>&2
-	    exit 1
-	  fi
+	  #
+	  # This breaks install into our staging area.  -PB
+	  # 
+	  #if test "$inst_prefix_dir" = "$destdir"; then
+	  #  $echo "$modename: error: cannot install \`$file' to a directory not ending in $libdir" 1>&2
+	  #  exit 1
+	  #fi
 
 	  if test -n "$inst_prefix_dir"; then
 	    # Stick the inst_prefix_dir data into the link command.
--- xc/extras/freetype2/builds/unix/ltmain.sh.orig	2007-01-13 15:05:47.000000000 -0700
+++ xc/extras/freetype2/builds/unix/ltmain.sh	2007-01-13 15:07:55.000000000 -0700
@@ -226,8 +226,9 @@
 	# line option must be used.
 	if test -z "$tagname"; then
 	  $echo "$modename: unable to infer tagged configuration"
-	  $echo "$modename: specify a tag with \`--tag'" 1>&2
-	  exit $EXIT_FAILURE
+	  $echo "$modename: defaulting to \`CC'"
+	  $echo "$modename: if this is not correct, specify a tag with \`--tag'"
+#	  exit $EXIT_FAILURE
 #        else
 #          $echo "$modename: using $tagname tagged configuration"
 	fi
@@ -2147,8 +2148,14 @@
 	    absdir="$abs_ladir"
 	    libdir="$abs_ladir"
 	  else
-	    dir="$libdir"
-	    absdir="$libdir"
+            # Adding 'libdir' from the .la file to our library search paths
+            # breaks crosscompilation horribly.  We cheat here and don't add
+            # it, instead adding the path where we found the .la.  -CL
+	    dir="$abs_ladir"
+	    absdir="$abs_ladir"
+	    libdir="$abs_ladir"
+	    #dir="$libdir"
+	    #absdir="$libdir"
 	  fi
 	else
 	  dir="$ladir/$objdir"
@@ -2615,6 +2622,16 @@
 		esac
 		if grep "^installed=no" $deplib > /dev/null; then
 		  path="$absdir/$objdir"
+#		This interferes with crosscompilation. -CL
+#		else
+#		  eval libdir=`${SED} -n -e 's/^libdir=\(.*\)$/\1/p' $deplib`
+#		  if test -z "$libdir"; then
+#		    $echo "$modename: \`$deplib' is not a valid libtool archive" 1>&2
+#		    exit 1
+#		  fi
+#		  if test "$absdir" != "$libdir"; then
+#		    $echo "$modename: warning: \`$deplib' seems to be moved" 1>&2
+#		  fi
 		else
 		  eval libdir=`${SED} -n -e 's/^libdir=\(.*\)$/\1/p' $deplib`
 		  if test -z "$libdir"; then
@@ -5165,6 +5182,10 @@
 	    # Replace all uninstalled libtool libraries with the installed ones
 	    newdependency_libs=
 	    for deplib in $dependency_libs; do
+              # Replacing uninstalled with installed can easily break crosscompilation,
+              # since the installed path is generally the wrong architecture.  -CL
+              newdependency_libs="$newdependency_libs $deplib"
+              continue
 	      case $deplib in
 	      *.la)
 		name=`$echo "X$deplib" | $Xsed -e 's%^.*/%%'`
@@ -5483,10 +5504,13 @@
 	  # At present, this check doesn't affect windows .dll's that
 	  # are installed into $libdir/../bin (currently, that works fine)
 	  # but it's something to keep an eye on.
-	  if test "$inst_prefix_dir" = "$destdir"; then
-	    $echo "$modename: error: cannot install \`$file' to a directory not ending in $libdir" 1>&2
-	    exit $EXIT_FAILURE
-	  fi
+	  #
+	  # This breaks install into our staging area.  -PB
+	  # 
+	  # if test "$inst_prefix_dir" = "$destdir"; then
+	  #   $echo "$modename: error: cannot install \`$file' to a directory not ending in $libdir" 1>&2
+	  #   exit $EXIT_FAILURE
+	  # fi
 
 	  if test -n "$inst_prefix_dir"; then
 	    # Stick the inst_prefix_dir data into the link command.
