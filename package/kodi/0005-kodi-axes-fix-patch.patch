diff --git a/xbmc/input/SDLJoystick.cpp b/xbmc/input/SDLJoystick.cpp
index 24730d3..f93db12 100644
--- a/xbmc/input/SDLJoystick.cpp
+++ b/xbmc/input/SDLJoystick.cpp
@@ -189,8 +189,13 @@ void CJoystick::Update()
   if (m_AxisIdx >= 0)
   {
     MapAxis(m_AxisIdx, joy, axisNum);
-    // CLog::Log(LOGDEBUG, "Joystick %d Axis %d Amount %d", JoystickIndex(joy), axisNum + 1, m_Axes[m_AxisIdx].val);
+    if(m_pressTicksAxisN != m_AxisIdx) {
+      m_pressTicksAxis = SDL_GetTicks();
+    }
+  } else {
+    m_pressTicksAxis = 0;
   }
+  m_pressTicksAxisN = m_AxisIdx;
 
   if (hatIdx == -1 && m_HatIdx != -1)
   {
@@ -310,6 +315,21 @@ bool CJoystick::GetAxis(std::string &joyName, int& id) const
   MapAxis(m_AxisIdx, joy, id);
   joyName = std::string(SDL_JoystickName(joy));
 
+  static uint32_t lastPressTicksAxis = 0;
+  // allow it if it is the first press
+  if (lastPressTicksAxis < m_pressTicksAxis)
+  {
+    lastPressTicksAxis = m_pressTicksAxis;
+    return true;
+  }
+  uint32_t nowTicks = SDL_GetTicks();
+  if (nowTicks - m_pressTicksAxis < 500) // 500ms delay before we repeat
+    return false;
+  if (nowTicks - lastPressTicksAxis < 100) // 100ms delay before successive repeats
+    return false;
+
+  lastPressTicksAxis = nowTicks;
+
   return true;
 }
 
@@ -322,6 +342,8 @@ bool CJoystick::GetAxes(std::list<std::pair<std::string, int> >& axes, bool cons
   SDL_Joystick *joy;
   int axisId;
 
+  static uint32_t lastPressTicksAxis = 0;
+
   for (size_t i = 0; i < m_Axes.size(); ++i)
   {
     int deadzone = m_Axes[i].trigger ? 0 : m_DeadzoneRange;
@@ -329,7 +351,23 @@ bool CJoystick::GetAxes(std::list<std::pair<std::string, int> >& axes, bool cons
     if (consider_still || abs(amount) > deadzone)
     {
       MapAxis(i, joy, axisId);
-      ret.push_back(std::pair<std::string, int>(SDL_JoystickName(joy), axisId));
+
+      uint32_t nowTicks = SDL_GetTicks();
+      // allow it if it is the first press
+      if(axisId == m_AxisIdx) {
+	if (lastPressTicksAxis < m_pressTicksAxis) {
+	  lastPressTicksAxis = m_pressTicksAxis;
+	  ret.push_back(std::pair<std::string, int>(SDL_JoystickName(joy), axisId));
+	} else {
+	  uint32_t nowTicks = SDL_GetTicks();
+	  if(nowTicks - m_pressTicksAxis >= 500) { // 500ms delay before we repeat
+	    if(nowTicks - lastPressTicksAxis >= 100) { // 100ms delay before successive repeats
+	      lastPressTicksAxis = nowTicks;
+	      ret.push_back(std::pair<std::string, int>(SDL_JoystickName(joy), axisId));
+	    }
+	  }
+	}
+      }
     }
   }
   axes = ret;
diff --git a/xbmc/input/SDLJoystick.h b/xbmc/input/SDLJoystick.h
index 7faa108..38681c2 100644
--- a/xbmc/input/SDLJoystick.h
+++ b/xbmc/input/SDLJoystick.h
@@ -118,6 +118,8 @@ private:
   bool m_joystickEnabled;
   uint32_t m_pressTicksButton;
   uint32_t m_pressTicksHat;
+  uint32_t m_pressTicksAxis;
+  int m_pressTicksAxisN;
   std::map<int, SDL_Joystick*> m_Joysticks;
 };
 
