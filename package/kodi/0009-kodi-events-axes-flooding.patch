--- a/xbmc/input/InputManager.cpp	2015-10-19 08:31:15.000000000 +0200
+++ b/xbmc/input/InputManager.cpp	2016-03-21 23:03:25.531095456 +0100
@@ -128,6 +128,8 @@
   int keymapId, joyId;
   m_Joystick.Update();
   std::string joyName;
+  bool res = false;
+  
   if (m_Joystick.GetButton(joyName, joyId))
   {
     g_application.ResetSystemIdleTimer();
@@ -148,7 +150,9 @@
     {
       CAction action(actionID, 1.0f, 0.0f, actionName);
       m_Mouse.SetActive(false);
-      return ExecuteInputAction(action);
+      if(res == false) {
+        res = ExecuteInputAction(action);
+      }
     }
   }
   std::list<std::pair<std::string, int> > usedAxes;
@@ -188,7 +192,9 @@
         compoundReturn |= ExecuteInputAction(action);
       }
     }
-    return compoundReturn;
+    if(res == false) {
+      res = compoundReturn;
+    }
   }
   int position = 0;
   if (m_Joystick.GetHat(joyName, joyId, position))
@@ -201,7 +207,7 @@
     if (g_application.WakeUpScreenSaverAndDPMS())
     {
       m_Joystick.Reset();
-      return true;
+      res = true;
     }
 
     int actionID;
@@ -213,12 +219,16 @@
     if (keymapId && CButtonTranslator::GetInstance().TranslateJoystickString(windowId, joyName, keymapId, JACTIVE_HAT, actionID, actionName, fullrange))
     {
       CAction action(actionID, 1.0f, 0.0f, actionName);
+      bool hatres;
       m_Mouse.SetActive(false);
-      return ExecuteInputAction(action);
+      hatres = ExecuteInputAction(action);
+      if(res == false) {
+	res = hatres;
+      }
     }
   }
 #endif
-  return false;
+  return res;
 }
 
 bool CInputManager::ProcessRemote(int windowId)
