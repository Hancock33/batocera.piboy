diff --git a/configure.ac b/configure.ac
index d5e76ee..a387bfd 100644
--- a/configure.ac
+++ b/configure.ac
@@ -684,7 +684,6 @@ case $host in
   arm*-*-linux-gnu*|arm*-*-linux-uclibc*)
      ARCH="arm"
      use_arch="arm"
-     use_joystick=no
      use_neon=yes
      use_gles=yes
      use_gl=no
@@ -1293,7 +1292,6 @@ fi
   if test "$use_joystick" != "no"; then
     PKG_CHECK_MODULES([SDL2], [sdl2],
       [AC_DEFINE([SDL_VERSION],[2],["SDL major version"])
-       AC_DEFINE([HAVE_SDL],[1],["Define to 1 if using sdl"])
        INCLUDES="$INCLUDES $SDL2_CFLAGS"; LIBS="$LIBS $SDL2_LIBS"; use_joystick="yes"],
       [if test "$use_joystick" = "yes"; then
         AC_MSG_ERROR($sdl_joystick_not_found)
diff --git a/xbmc/input/SDLJoystick.cpp b/xbmc/input/SDLJoystick.cpp
index 5d910a3..b86d016 100644
--- a/xbmc/input/SDLJoystick.cpp
+++ b/xbmc/input/SDLJoystick.cpp
@@ -68,6 +68,13 @@ void CJoystick::Initialize()
   SetDeadzone(g_advancedSettings.m_controllerDeadzone);
 
   // joysticks will be loaded once SDL sees them
+#ifdef HAS_SDL_JOYSTICK
+#ifndef HAS_SDL
+  for(int i=0; i<SDL_NumJoysticks(); i++) {
+    AddJoystick(i);
+  }
+#endif
+#endif
 }
 
 void CJoystick::AddJoystick(int joyIndex)
diff --git a/xbmc/input/linux/LinuxInputDevices.cpp b/xbmc/input/linux/LinuxInputDevices.cpp
index 32a3b46..da814b6 100644
--- a/xbmc/input/linux/LinuxInputDevices.cpp
+++ b/xbmc/input/linux/LinuxInputDevices.cpp
@@ -960,6 +960,23 @@ bool CLinuxInputDevices::CheckDevice(const char *device)
   if (fd < 0)
     return false;
 
+  // let others handle joysticks
+  unsigned long evbit[NBITS(EV_MAX)] = { 0 };
+  unsigned long keybit[NBITS(KEY_MAX)] = { 0 };
+  unsigned long absbit[NBITS(ABS_MAX)] = { 0 };
+
+  if (!((ioctl(fd, EVIOCGBIT(0, sizeof(evbit)), evbit) < 0) ||
+	(ioctl(fd, EVIOCGBIT(EV_KEY, sizeof(keybit)), keybit) < 0) ||
+	(ioctl(fd, EVIOCGBIT(EV_ABS, sizeof(absbit)), absbit) < 0))) {
+    if (test_bit(EV_KEY, evbit) && test_bit(EV_ABS, evbit) &&
+	test_bit(ABS_X, absbit) && test_bit(ABS_Y, absbit)) {
+      CLog::Log(LOGNOTICE, "Avoiding joystick as normal input device - %s\n", device);
+      close(fd);
+      return false;
+    }
+  }
+  //
+
   if (ioctl(fd, EVIOCGRAB, 1) && errno != EINVAL)
   {
     close(fd);
