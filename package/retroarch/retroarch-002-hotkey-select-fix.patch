diff --git a/input/input_driver.c b/input/input_driver.c
index 5f0d9da..6840c78 100644
--- a/input/input_driver.c
+++ b/input/input_driver.c
@@ -101,6 +101,9 @@ static const input_driver_t *current_input;
 static void *current_input_data;
 static turbo_buttons_t input_driver_turbo_btns;
 
+unsigned hotkey_counter = 0;
+#define HOTKEY_DELAY 10 // number of frames required to trigger the hotkey
+
 /**
  * input_driver_find_handle:
  * @idx                : index of driver to get handle to.
@@ -525,7 +528,7 @@ int16_t input_state(unsigned port, unsigned device,
  *
  * Checks if 'hotkey enable' key is pressed.
  **/
-static bool check_input_driver_block_hotkey(bool enable_hotkey)
+static unsigned check_input_driver_block_hotkey(bool enable_hotkey)
 {
    bool use_hotkey_enable;
    settings_t *settings          = config_get_ptr();
@@ -560,7 +563,13 @@ static bool check_input_driver_block_hotkey(bool enable_hotkey)
 
    /* If we hold ENABLE_HOTKEY button, block all libretro input to allow
     * hotkeys to be bound to same keys as RetroPad. */
-   return (use_hotkey_enable && enable_hotkey);
+
+   if (use_hotkey_enable && enable_hotkey)
+      hotkey_counter++;
+   else
+      hotkey_counter = 0;
+
+   return hotkey_counter;
 }
 
 /**
@@ -591,7 +600,7 @@ retro_input_t input_keys_pressed(void)
 
    key = RARCH_ENABLE_HOTKEY;
    
-   if (check_input_driver_block_hotkey(input_driver_ctl(RARCH_INPUT_CTL_KEY_PRESSED, &key)))
+   if (check_input_driver_block_hotkey(input_driver_ctl(RARCH_INPUT_CTL_KEY_PRESSED, &key)) > HOTKEY_DELAY )
       input_driver_ctl(RARCH_INPUT_CTL_SET_LIBRETRO_INPUT_BLOCKED, NULL);
    else
       input_driver_ctl(RARCH_INPUT_CTL_UNSET_LIBRETRO_INPUT_BLOCKED, NULL);
