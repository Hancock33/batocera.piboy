diff --git a/source/common/platform/posix/sdl/i_main.cpp b/source/common/platform/posix/sdl/i_main.cpp
index 4f29bb76e..e780af5d2 100644
--- a/source/common/platform/posix/sdl/i_main.cpp
+++ b/source/common/platform/posix/sdl/i_main.cpp
@@ -176,23 +176,7 @@ int main (int argc, char **argv)
 
 	Args = new FArgs(argc, argv);
 
-#ifdef PROGDIR
-	progdir = PROGDIR;
-#else
-	char program[PATH_MAX];
-	if (realpath (argv[0], program) == NULL)
-		strcpy (program, argv[0]);
-	char *slash = strrchr (program, '/');
-	if (slash != NULL)
-	{
-		*(slash + 1) = '\0';
-		progdir = program;
-	}
-	else
-	{
-		progdir = "./";
-	}
-#endif
+	progdir = "/usr/share/raze/";
 
 	I_StartupJoysticks();
 
diff --git a/source/common/platform/posix/unix/i_specialpaths.cpp b/source/common/platform/posix/unix/i_specialpaths.cpp
index 112e92ee7..6993f94e5 100644
--- a/source/common/platform/posix/unix/i_specialpaths.cpp
+++ b/source/common/platform/posix/unix/i_specialpaths.cpp
@@ -45,59 +45,7 @@
 
 FString GetUserFile (const char *file)
 {
-	FString path;
-	struct stat info;
-
-	path = NicePath("$HOME/" GAME_DIR "/");
-
-	if (stat (path.GetChars(), &info) == -1)
-	{
-		struct stat extrainfo;
-
-		// Sanity check for $HOME/.config
-		FString configPath = NicePath("$HOME/.config/");
-		if (stat (configPath.GetChars(), &extrainfo) == -1)
-		{
-			if (mkdir (configPath.GetChars(), S_IRUSR | S_IWUSR | S_IXUSR) == -1)
-			{
-				I_FatalError ("Failed to create $HOME/.config directory:\n%s", strerror(errno));
-			}
-		}
-		else if (!S_ISDIR(extrainfo.st_mode))
-		{
-			I_FatalError ("$HOME/.config must be a directory");
-		}
-
-		// This can be removed after a release or two
-		// Transfer the old zdoom directory to the new location
-		bool moved = false;
-		FString oldpath = NicePath("$HOME/." GAMENAMELOWERCASE "/");
-		if (stat (oldpath.GetChars(), &extrainfo) != -1)
-		{
-			if (rename(oldpath.GetChars(), path.GetChars()) == -1)
-			{
-				I_Error ("Failed to move old " GAMENAMELOWERCASE " directory (%s) to new location (%s).",
-					oldpath.GetChars(), path.GetChars());
-			}
-			else
-				moved = true;
-		}
-
-		if (!moved && mkdir (path.GetChars(), S_IRUSR | S_IWUSR | S_IXUSR) == -1)
-		{
-			I_FatalError ("Failed to create %s directory:\n%s",
-				path.GetChars(), strerror (errno));
-		}
-	}
-	else
-	{
-		if (!S_ISDIR(info.st_mode))
-		{
-			I_FatalError ("%s must be a directory", path.GetChars());
-		}
-	}
-	path += file;
-	return path;
+	return FString("/userdata/saves/raze/") + file;
 }
 
 //===========================================================================
@@ -112,7 +60,7 @@ FString M_GetAppDataPath(bool create)
 {
 	// Don't use GAME_DIR and such so that ZDoom and its child ports can
 	// share the node cache.
-	FString path = NicePath("$HOME/.config/" GAMENAMELOWERCASE);
+	FString path = NicePath("/userdata/saves/raze");
 	if (create)
 	{
 		CreatePath(path.GetChars());
@@ -132,7 +80,7 @@ FString M_GetCachePath(bool create)
 {
 	// Don't use GAME_DIR and such so that ZDoom and its child ports can
 	// share the node cache.
-	FString path = NicePath("$HOME/.config/zdoom/cache");
+	FString path = NicePath("/userdata/saves/raze/cache");
 	if (create)
 	{
 		CreatePath(path.GetChars());
@@ -150,7 +98,7 @@ FString M_GetCachePath(bool create)
 
 FString M_GetAutoexecPath()
 {
-	return GetUserFile("autoexec.cfg");
+	return FString("/userdata/system/configs/raze/autoexec.cfg");
 }
 
 //===========================================================================
@@ -165,7 +113,7 @@ FString M_GetAutoexecPath()
 
 FString M_GetConfigPath(bool for_reading)
 {
-	return GetUserFile(GAMENAMELOWERCASE ".ini");
+	return FString("/userdata/system/configs/raze/raze.ini");
 }
 
 //===========================================================================
@@ -178,7 +126,7 @@ FString M_GetConfigPath(bool for_reading)
 
 FString M_GetScreenshotsPath()
 {
-	return NicePath("$HOME/" GAME_DIR "/screenshots/");
+	return FString("/userdata/screenshots/");
 }
 
 //===========================================================================
@@ -204,7 +152,7 @@ FString M_GetSavegamesPath()
 
 FString M_GetDocumentsPath()
 {
-	return NicePath("$HOME/" GAME_DIR "/");
+	return FString("/userdata/saves/raze/");
 }
 
 //===========================================================================
diff --git a/source/core/gameconfigfile.cpp b/source/core/gameconfigfile.cpp
index a135419d7..0b735e7a5 100644
--- a/source/core/gameconfigfile.cpp
+++ b/source/core/gameconfigfile.cpp
@@ -156,6 +156,7 @@ FGameConfigFile::FGameConfigFile ()
 		SetValueForKey ("Path", "/usr/local/share/games/jfduke3d", true);
 		SetValueForKey ("Path", "/usr/local/share/games/eduke32", true);
 		SetValueForKey ("Path", "/usr/local/share/games/nblood", true);
+		SetValueForKey ("Path", "/usr/share/raze", true);
 #endif
 	}
 
diff --git a/source/core/gamecontrol.cpp b/source/core/gamecontrol.cpp
index 62241abb0..978256363 100644
--- a/source/core/gamecontrol.cpp
+++ b/source/core/gamecontrol.cpp
@@ -1037,7 +1037,7 @@ int RunGame()
 	FString logfile = Args->TakeValue("+logfile");
 
 	// As long as this engine is still in prerelease mode let's always write a log file.
-	if (logfile.IsEmpty()) logfile.Format("%s" GAMENAMELOWERCASE ".log", M_GetDocumentsPath().GetChars());
+	if (logfile.IsEmpty()) logfile.Format("/userdata/system/logs/raze.log");
 
 	if (logfile.IsNotEmpty())
 	{
