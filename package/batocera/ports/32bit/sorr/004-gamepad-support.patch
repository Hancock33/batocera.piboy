diff --git a/modules/libjoy/libjoy.c b/modules/libjoy/libjoy.c
index 0350d31..d12c3d9 100644
--- a/modules/libjoy/libjoy.c
+++ b/modules/libjoy/libjoy.c
@@ -60,12 +60,16 @@
 
 /* --------------------------------------------------------------------------- */
 
-#define MAX_JOYS    32
+#define MAX_JOYS    4
 
+int libjoy_get_button_specific( int joy, int button );
+int libjoy_get_position_specific( int joy, int axis );
+int libjoy_get_hat_specific( int joy, int hat );
 static int _max_joys = 0;
-static SDL_Joystick * _joysticks[MAX_JOYS];
 static int _selected_joystick = -1;
 
+static SDL_GameController *controllers[MAX_JOYS];
+
 /* --------------------------------------------------------------------------- */
 /* libjoy_num ()                                                               */
 /* Returns the number of joysticks present in the system                       */
@@ -73,7 +77,7 @@ static int _selected_joystick = -1;
 
 int libjoy_num( void )
 {
-    return _max_joys ;
+    return _max_joys;
 }
 
 /* --------------------------------------------------------------------------- */
@@ -84,7 +88,7 @@ int libjoy_num( void )
 int libjoy_name( int joy )
 {
     int result;
-    result = string_new( SDL_JoystickNameForIndex( joy ) );
+    result = string_new( SDL_GameControllerName( controllers[joy] ) );
     string_use( result );
     return result;
 }
@@ -106,14 +110,7 @@ int libjoy_select( int joy )
 
 int libjoy_buttons( void )
 {
-    if ( _selected_joystick >= 0 && _selected_joystick < _max_joys )
-    {
-#ifdef TARGET_CAANOO
-        if ( _selected_joystick == 0 ) return 21;
-#endif
-        return SDL_JoystickNumButtons( _joysticks[ _selected_joystick ] ) ;
-    }
-    return 0 ;
+    return SDL_CONTROLLER_BUTTON_MAX;
 }
 
 /* --------------------------------------------------------------------------- */
@@ -123,11 +120,7 @@ int libjoy_buttons( void )
 
 int libjoy_axes( void )
 {
-    if ( _selected_joystick >= 0 && _selected_joystick < _max_joys )
-    {
-        return SDL_JoystickNumAxes( _joysticks[ _selected_joystick ] ) ;
-    }
-    return 0 ;
+    return 4;
 }
 
 /* --------------------------------------------------------------------------- */
@@ -137,44 +130,7 @@ int libjoy_axes( void )
 
 int libjoy_get_button( int button )
 {
-    if ( _selected_joystick >= 0 && _selected_joystick < _max_joys )
-    {
-#ifdef TARGET_CAANOO
-        if ( _selected_joystick == 0 )
-        {
-            int vax;
-
-            switch ( button )
-            {
-                case    1: /* UPLF                  */  return ( SDL_JoystickGetAxis( _joysticks[ 0 ], 1 ) < -16384 && SDL_JoystickGetAxis( _joysticks[ 0 ], 0 ) < -16384 );
-                case    3: /* DWLF                  */  return ( SDL_JoystickGetAxis( _joysticks[ 0 ], 1 ) >  16384 && SDL_JoystickGetAxis( _joysticks[ 0 ], 0 ) < -16384 );
-                case    5: /* DWRT                  */  return ( SDL_JoystickGetAxis( _joysticks[ 0 ], 1 ) >  16384 && SDL_JoystickGetAxis( _joysticks[ 0 ], 0 ) >  16384 );
-                case    7: /* UPRT                  */  return ( SDL_JoystickGetAxis( _joysticks[ 0 ], 1 ) < -16384 && SDL_JoystickGetAxis( _joysticks[ 0 ], 0 ) >  16384 );
-                case    0: /* UP                    */  vax = SDL_JoystickGetAxis( _joysticks[ 0 ], 0 ) ; return ( SDL_JoystickGetAxis( _joysticks[ 0 ], 1 ) < -16384 && ABS( vax ) < 16384 );
-                case    4: /* DW                    */  vax = SDL_JoystickGetAxis( _joysticks[ 0 ], 0 ) ; return ( SDL_JoystickGetAxis( _joysticks[ 0 ], 1 ) >  16384 && ABS( vax ) < 16384 );
-                case    2: /* LF                    */  vax = SDL_JoystickGetAxis( _joysticks[ 0 ], 1 ) ; return ( SDL_JoystickGetAxis( _joysticks[ 0 ], 0 ) < -16384 && ABS( vax ) < 16384 );
-                case    6: /* RT                    */  vax = SDL_JoystickGetAxis( _joysticks[ 0 ], 1 ) ; return ( SDL_JoystickGetAxis( _joysticks[ 0 ], 0 ) >  16384 && ABS( vax ) < 16384 );
-
-                case    8:  /* MENU->HOME           */  return ( SDL_JoystickGetButton( _joysticks[ 0 ], 6 ) );
-                case    9:  /* SELECT->HELP-II      */  return ( SDL_JoystickGetButton( _joysticks[ 0 ], 9 ) );
-                case    10: /* L                    */  return ( SDL_JoystickGetButton( _joysticks[ 0 ], 4 ) );
-                case    11: /* R                    */  return ( SDL_JoystickGetButton( _joysticks[ 0 ], 5 ) );
-                case    12: /* A                    */  return ( SDL_JoystickGetButton( _joysticks[ 0 ], 0 ) );
-                case    13: /* B                    */  return ( SDL_JoystickGetButton( _joysticks[ 0 ], 2 ) );
-                case    14: /* X                    */  return ( SDL_JoystickGetButton( _joysticks[ 0 ], 1 ) );
-                case    15: /* Y                    */  return ( SDL_JoystickGetButton( _joysticks[ 0 ], 3 ) );
-                case    16: /* VOLUP                */  return ( 0 );
-                case    17: /* VOLDOWN              */  return ( 0 );
-                case    18: /* CLICK                */  return ( SDL_JoystickGetButton( _joysticks[ 0 ], 10 ) );
-                case    19: /* POWER-LOCK  (CAANOO) */  return ( SDL_JoystickGetButton( _joysticks[ 0 ], 7 ) ); /* Only Caanoo */
-                case    20: /* HELP-I      (CAANOO) */  return ( SDL_JoystickGetButton( _joysticks[ 0 ], 8 ) ); /* Only Caanoo */
-                default:                                return ( 0 );
-            }
-        }
-#endif
-        return SDL_JoystickGetButton( _joysticks[ _selected_joystick ], button ) ;
-    }
-    return 0 ;
+    return libjoy_get_button_specific( button, _selected_joystick );
 }
 
 /* --------------------------------------------------------------------------- */
@@ -184,11 +140,7 @@ int libjoy_get_button( int button )
 
 int libjoy_get_position( int axis )
 {
-    if ( _selected_joystick >= 0 && _selected_joystick < _max_joys )
-    {
-        return SDL_JoystickGetAxis( _joysticks[ _selected_joystick ], axis ) ;
-    }
-    return 0 ;
+    return libjoy_get_position_specific( axis, _selected_joystick );
 }
 
 /* --------------------------------------------------------------------------- */
@@ -200,7 +152,7 @@ int libjoy_hats( void )
 {
     if ( _selected_joystick >= 0 && _selected_joystick < _max_joys )
     {
-        return SDL_JoystickNumHats( _joysticks[ _selected_joystick ] ) ;
+        return 1;
     }
     return 0 ;
 }
@@ -212,11 +164,7 @@ int libjoy_hats( void )
 
 int libjoy_balls( void )
 {
-    if ( _selected_joystick >= 0 && _selected_joystick < _max_joys )
-    {
-        return SDL_JoystickNumBalls( _joysticks[ _selected_joystick ] ) ;
-    }
-    return 0 ;
+    return 0;
 }
 
 /* --------------------------------------------------------------------------- */
@@ -226,14 +174,7 @@ int libjoy_balls( void )
 
 int libjoy_get_hat( int hat )
 {
-    if ( _selected_joystick >= 0 && _selected_joystick < _max_joys )
-    {
-        if ( hat >= 0 && hat <= SDL_JoystickNumHats( _joysticks[ _selected_joystick ] ) )
-        {
-            return SDL_JoystickGetHat( _joysticks[ _selected_joystick ], hat ) ;
-        }
-    }
-    return 0 ;
+    return libjoy_get_hat_specific( hat, _selected_joystick );
 }
 
 /* --------------------------------------------------------------------------- */
@@ -243,29 +184,14 @@ int libjoy_get_hat( int hat )
 
 int libjoy_get_ball( int ball, int * dx, int * dy )
 {
-    if ( _selected_joystick >= 0 && _selected_joystick < _max_joys )
-    {
-        if ( ball >= 0 && ball <= SDL_JoystickNumBalls( _joysticks[ball] ) )
-        {
-            return SDL_JoystickGetBall( _joysticks[ _selected_joystick ], ball, dx, dy ) ;
-        }
-    }
-    return -1 ;
+    return -1;
 }
 
 /* --------------------------------------------------------------------------- */
 
 int libjoy_get_accel( int * x, int * y, int * z )
 {
-#ifdef TARGET_CAANOO
-    if ( _selected_joystick == 0 )
-    {
-        KIONIX_ACCEL_read_LPF_g( x, y, z );
-    }
-    return 0;
-#else
     return -1;
-#endif
 }
 
 /* --------------------------------------------------------------------------- */
@@ -281,10 +207,7 @@ int libjoy_buttons_specific( int joy )
 {
     if ( joy >= 0 && joy < _max_joys )
     {
-#ifdef TARGET_CAANOO
-        if ( joy == 0 ) return 21;
-#endif
-        return SDL_JoystickNumButtons( _joysticks[ joy ] ) ;
+        return 12;
     }
     return 0 ;
 }
@@ -298,7 +221,7 @@ int libjoy_axes_specific( int joy )
 {
     if ( joy >= 0 && joy < _max_joys )
     {
-        return SDL_JoystickNumAxes( _joysticks[ joy ] ) ;
+        return 4;
     }
     return 0 ;
 }
@@ -312,46 +235,20 @@ int libjoy_get_button_specific( int joy, int button )
 {
     if ( joy >= 0 && joy < _max_joys )
     {
-#ifdef TARGET_CAANOO
-        if ( button >= 0 && ( ( joy == 0 && button <= 21 ) || ( joy != 0 && SDL_JoystickNumButtons( _joysticks[ joy ] ) ) ) )
-#else
-        if ( button >= 0 && button <= SDL_JoystickNumButtons( _joysticks[ joy ] ) )
-#endif
+        switch ( button )
         {
-#ifdef TARGET_CAANOO
-            if ( joy == 0 )
-            {
-                int vax;
-
-                switch ( button )
-                {
-                    case    1: /* UPLF                  */  return ( SDL_JoystickGetAxis( _joysticks[ 0 ], 1 ) < -16384 && SDL_JoystickGetAxis( _joysticks[ 0 ], 0 ) < -16384 );
-                    case    3: /* DWLF                  */  return ( SDL_JoystickGetAxis( _joysticks[ 0 ], 1 ) >  16384 && SDL_JoystickGetAxis( _joysticks[ 0 ], 0 ) < -16384 );
-                    case    5: /* DWRT                  */  return ( SDL_JoystickGetAxis( _joysticks[ 0 ], 1 ) >  16384 && SDL_JoystickGetAxis( _joysticks[ 0 ], 0 ) >  16384 );
-                    case    7: /* UPRT                  */  return ( SDL_JoystickGetAxis( _joysticks[ 0 ], 1 ) < -16384 && SDL_JoystickGetAxis( _joysticks[ 0 ], 0 ) >  16384 );
-                    case    0: /* UP                    */  vax = SDL_JoystickGetAxis( _joysticks[ 0 ], 0 ) ; return ( SDL_JoystickGetAxis( _joysticks[ 0 ], 1 ) < -16384 && ABS( vax ) < 16384 );
-                    case    4: /* DW                    */  vax = SDL_JoystickGetAxis( _joysticks[ 0 ], 0 ) ; return ( SDL_JoystickGetAxis( _joysticks[ 0 ], 1 ) >  16384 && ABS( vax ) < 16384 );
-                    case    2: /* LF                    */  vax = SDL_JoystickGetAxis( _joysticks[ 0 ], 1 ) ; return ( SDL_JoystickGetAxis( _joysticks[ 0 ], 0 ) < -16384 && ABS( vax ) < 16384 );
-                    case    6: /* RT                    */  vax = SDL_JoystickGetAxis( _joysticks[ 0 ], 1 ) ; return ( SDL_JoystickGetAxis( _joysticks[ 0 ], 0 ) >  16384 && ABS( vax ) < 16384 );
-
-                    case    8:  /* MENU->HOME           */  return ( SDL_JoystickGetButton( _joysticks[ 0 ], 6 ) );
-                    case    9:  /* SELECT->HELP-II      */  return ( SDL_JoystickGetButton( _joysticks[ 0 ], 9 ) );
-                    case    10: /* L                    */  return ( SDL_JoystickGetButton( _joysticks[ 0 ], 4 ) );
-                    case    11: /* R                    */  return ( SDL_JoystickGetButton( _joysticks[ 0 ], 5 ) );
-                    case    12: /* A                    */  return ( SDL_JoystickGetButton( _joysticks[ 0 ], 0 ) );
-                    case    13: /* B                    */  return ( SDL_JoystickGetButton( _joysticks[ 0 ], 2 ) );
-                    case    14: /* X                    */  return ( SDL_JoystickGetButton( _joysticks[ 0 ], 1 ) );
-                    case    15: /* Y                    */  return ( SDL_JoystickGetButton( _joysticks[ 0 ], 3 ) );
-                    case    16: /* VOLUP                */  return ( 0 );
-                    case    17: /* VOLDOWN              */  return ( 0 );
-                    case    18: /* CLICK                */  return ( SDL_JoystickGetButton( _joysticks[ 0 ], 10 ) );
-                    case    19: /* POWER-LOCK  (CAANOO) */  return ( SDL_JoystickGetButton( _joysticks[ 0 ], 7 ) ); /* Only Caanoo */
-                    case    20: /* HELP-I      (CAANOO) */  return ( SDL_JoystickGetButton( _joysticks[ 0 ], 8 ) ); /* Only Caanoo */
-                    default:                                return ( 0 );
-                }
-            }
-#endif
-            return SDL_JoystickGetButton( _joysticks[ joy ], button ) ;
+            case  0: return SDL_GameControllerGetButton( controllers[joy], SDL_CONTROLLER_BUTTON_A );
+            case  1: return SDL_GameControllerGetButton( controllers[joy], SDL_CONTROLLER_BUTTON_B );
+            case  2: return SDL_GameControllerGetButton( controllers[joy], SDL_CONTROLLER_BUTTON_X );
+            case  3: return SDL_GameControllerGetButton( controllers[joy], SDL_CONTROLLER_BUTTON_Y );
+            case  4: return SDL_GameControllerGetButton( controllers[joy], SDL_CONTROLLER_BUTTON_LEFTSHOULDER );
+            case  5: return SDL_GameControllerGetButton( controllers[joy], SDL_CONTROLLER_BUTTON_RIGHTSHOULDER );
+            case  6: return SDL_GameControllerGetButton( controllers[joy], SDL_CONTROLLER_BUTTON_BACK );
+            case  7: return SDL_GameControllerGetButton( controllers[joy], SDL_CONTROLLER_BUTTON_START );
+            case  8: return SDL_GameControllerGetButton( controllers[joy], SDL_CONTROLLER_BUTTON_LEFTSTICK );
+            case  9: return SDL_GameControllerGetButton( controllers[joy], SDL_CONTROLLER_BUTTON_RIGHTSTICK );
+            case 10: return SDL_GameControllerGetAxis( controllers[joy], SDL_CONTROLLER_AXIS_TRIGGERLEFT ) > 8000;
+            case 11: return SDL_GameControllerGetAxis( controllers[joy], SDL_CONTROLLER_AXIS_TRIGGERRIGHT ) > 8000;
         }
     }
     return 0 ;
@@ -366,10 +263,10 @@ int libjoy_get_position_specific( int joy, int axis )
 {
     if ( joy >= 0 && joy < _max_joys )
     {
-        if ( axis >= 0 && axis <= SDL_JoystickNumAxes( _joysticks[ joy ] ) )
-        {
-            return SDL_JoystickGetAxis( _joysticks[ joy ], axis ) ;
-        }
+        if (axis < 0 || axis >= 4)
+            return 0;
+
+        return SDL_GameControllerGetAxis( controllers[ joy ], axis ) ;
     }
     return 0 ;
 }
@@ -386,7 +283,7 @@ int libjoy_hats_specific( int joy )
 {
     if ( joy >= 0 && joy < _max_joys )
     {
-        return SDL_JoystickNumHats( _joysticks[ joy ] ) ;
+        return 1;
     }
     return 0 ;
 }
@@ -398,11 +295,7 @@ int libjoy_hats_specific( int joy )
 
 int libjoy_balls_specific( int joy )
 {
-    if ( joy >= 0 && joy < _max_joys )
-    {
-        return SDL_JoystickNumBalls( _joysticks[ joy ] ) ;
-    }
-    return 0 ;
+    return 0;
 }
 
 /* --------------------------------------------------------------------------- */
@@ -412,14 +305,22 @@ int libjoy_balls_specific( int joy )
 
 int libjoy_get_hat_specific( int joy, int hat )
 {
+    int u, d, l, r;
+    if ( hat != 0 )
+        return 0;
     if ( joy >= 0 && joy < _max_joys )
     {
-        if ( hat >= 0 && hat <= SDL_JoystickNumHats( _joysticks[ joy ] ) )
+        if ( hat == 0 )
         {
-            return SDL_JoystickGetHat( _joysticks[ joy ], hat ) ;
+            u = SDL_HAT_UP    * SDL_GameControllerGetButton( controllers[joy], SDL_CONTROLLER_BUTTON_DPAD_UP );
+            d = SDL_HAT_DOWN  * SDL_GameControllerGetButton( controllers[joy], SDL_CONTROLLER_BUTTON_DPAD_DOWN );
+            l = SDL_HAT_LEFT  * SDL_GameControllerGetButton( controllers[joy], SDL_CONTROLLER_BUTTON_DPAD_LEFT );
+            r = SDL_HAT_RIGHT * SDL_GameControllerGetButton( controllers[joy], SDL_CONTROLLER_BUTTON_DPAD_RIGHT );
+            return u | d | l | r;
         }
     }
     return 0 ;
+
 }
 
 /* --------------------------------------------------------------------------- */
@@ -429,27 +330,13 @@ int libjoy_get_hat_specific( int joy, int hat )
 
 int libjoy_get_ball_specific( int joy, int ball, int * dx, int * dy )
 {
-    if ( joy >= 0 && joy < _max_joys )
-    {
-        if ( ball >= 0 && ball <= SDL_JoystickNumBalls( _joysticks[ joy ] ) )
-        {
-            return SDL_JoystickGetBall( _joysticks[ joy ], ball, dx, dy ) ;
-        }
-    }
-    return -1 ;
+    return -1;
 }
 
 /* --------------------------------------------------------------------------- */
 
 int libjoy_get_accel_specific( int joy, int * x, int * y, int * z )
 {
-#ifdef TARGET_CAANOO
-    if ( joy == 0 )
-    {
-        KIONIX_ACCEL_read_LPF_g( x, y, z );
-        return 0;
-    }
-#endif
     return -1;
 }
 
@@ -476,13 +363,27 @@ void  __bgdexport( libjoy, module_initialize )()
 {
     int i;
 
-    if ( !SDL_WasInit( SDL_INIT_JOYSTICK ) )
+    if ( !SDL_WasInit( SDL_INIT_GAMECONTROLLER ) )
     {
-        SDL_InitSubSystem( SDL_INIT_JOYSTICK );
+        SDL_InitSubSystem( SDL_INIT_GAMECONTROLLER );
         SDL_JoystickEventState( SDL_ENABLE ) ;
     }
 
     /* Open all joysticks */
+    for ( i = 0; i < SDL_NumJoysticks(); i++ )
+    {
+        if ( !SDL_IsGameController(i) )
+            continue;
+        
+        controllers[_max_joys] = SDL_GameControllerOpen(i);
+        if (controllers[_max_joys])
+            _max_joys++;
+        else
+            printf( "[JOY] Failed to open joystick '%i'", i );
+    }
+
+    SDL_GameControllerUpdate();
+#if 0
     if (( _max_joys = SDL_NumJoysticks() ) > MAX_JOYS )
     {
         printf( "[JOY] Warning: maximum number of joysticks exceeded (%i>%i)", _max_joys, MAX_JOYS );
@@ -496,17 +397,6 @@ void  __bgdexport( libjoy, module_initialize )()
     }
 
     SDL_JoystickUpdate() ;
-
-#ifdef TARGET_CAANOO
-    KIONIX_ACCEL_init();
-
-    if ( KIONIX_ACCEL_get_device_type() != DEVICE_TYPE_KIONIX_KXTF9 ) KIONIX_ACCEL_deinit();
-
-    KXTF9_set_G_range(2);
-    KXTF9_set_resolution(12);
-    KXTF9_set_lpf_odr(400);
-
-    KIONIX_ACCEL_enable_outputs();
 #endif
 }
 
@@ -521,9 +411,9 @@ void  __bgdexport( libjoy, module_finalize )()
 #endif
 
     for ( i = 0; i < _max_joys; i++ )
-        if ( _joysticks[ i ] ) SDL_JoystickClose( _joysticks[ i ] ) ;
+        if ( controllers[ i ] ) SDL_GameControllerClose( controllers[ i ] ) ;
 
-    if ( SDL_WasInit( SDL_INIT_JOYSTICK ) ) SDL_QuitSubSystem( SDL_INIT_JOYSTICK );
+    if ( SDL_WasInit( SDL_INIT_GAMECONTROLLER ) ) SDL_QuitSubSystem( SDL_INIT_GAMECONTROLLER );
 
 }
 
