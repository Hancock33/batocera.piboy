diff --git a/src/gameconfigfile.cpp b/src/gameconfigfile.cpp
index 177cb76e51..4cdd131f52 100644
--- a/src/gameconfigfile.cpp
+++ b/src/gameconfigfile.cpp
@@ -129,6 +129,7 @@ FGameConfigFile::FGameConfigFile ()
 		SetSection ("IWADSearch.Directories", true);
 		SetValueForKey ("Path", ".", true);
 		SetValueForKey ("Path", "$DOOMWADDIR", true);
+		SetValueForKey ("Path", "/userdata/roms/ports/doom", true);
 #ifdef __APPLE__
 		SetValueForKey ("Path", user_docs, true);
 		SetValueForKey ("Path", user_app_support, true);
@@ -165,7 +166,7 @@ FGameConfigFile::FGameConfigFile ()
 		SetValueForKey ("Path", SHARE_DIR, true);
 		SetValueForKey ("Path", "/usr/local/share/doom", true);
 		SetValueForKey ("Path", "/usr/local/share/games/doom", true);
-		SetValueForKey ("Path", "/usr/share/doom", true);
+		SetValueForKey ("Path", "/usr/share/lzdoom", true);
 		SetValueForKey ("Path", "/usr/share/games/doom", true);
 #endif
 		SetValueForKey ("Path", "$DOOMWADDIR", true);
@@ -190,12 +191,14 @@ FGameConfigFile::FGameConfigFile ()
 #else
 		SetValueForKey("Path", "$HOME/" GAME_DIR "/soundfonts", true);
 		SetValueForKey("Path", "$HOME/" GAME_DIR "/fm_banks", true);
-		SetValueForKey("Path", "/usr/local/share/doom/soundfonts", true);
+		SetValueForKey("Path", "/usr/share/soundfonts", true);
 		SetValueForKey("Path", "/usr/local/share/doom/fm_banks", true);
 		SetValueForKey("Path", "/usr/local/share/games/doom/soundfonts", true);
 		SetValueForKey("Path", "/usr/local/share/games/doom/fm_banks", true);
-		SetValueForKey("Path", "/usr/share/doom/soundfonts", true);
-		SetValueForKey("Path", "/usr/share/doom/fm_banks", true);
+		SetValueForKey("Path", "/usr/share/lzdoom/soundfonts", true);
+		SetValueForKey("Path", "/usr/share/lzdoom/fm_banks", true);
+		SetValueForKey("Path", "/userdata/system/configs/lzdoom/soundfonts", true);
+		SetValueForKey("Path", "/userdata/system/configs/lzdoom/fm_banks", true);
 		SetValueForKey("Path", "/usr/share/games/doom/soundfonts", true);
 		SetValueForKey("Path", "/usr/share/games/doom/fm_banks", true);
 #endif
diff --git a/src/posix/sdl/i_main.cpp b/src/posix/sdl/i_main.cpp
index 4ae6166fef..0a629fbb56 100644
--- a/src/posix/sdl/i_main.cpp
+++ b/src/posix/sdl/i_main.cpp
@@ -189,20 +189,8 @@ int main (int argc, char **argv)
 	Args = new FArgs(argc, argv);
 
 	// Should we even be doing anything with progdir on Unix systems?
-	char program[PATH_MAX];
-	if (realpath (argv[0], program) == NULL)
-		strcpy (program, argv[0]);
-	char *slash = strrchr (program, '/');
-	if (slash != NULL)
-	{
-		*(slash + 1) = '\0';
-		progdir = program;
-	}
-	else
-	{
-		progdir = "./";
-	}
-	
+	progdir = "/usr/share/lzdoom/";
+
 	I_StartupJoysticks();
 
 	const int result = D_DoomMain();
diff --git a/src/posix/unix/i_specialpaths.cpp b/src/posix/unix/i_specialpaths.cpp
index 60cc12fcf8..978869b26c 100644
--- a/src/posix/unix/i_specialpaths.cpp
+++ b/src/posix/unix/i_specialpaths.cpp
@@ -43,59 +43,7 @@
 
 FString GetUserFile (const char *file)
 {
-	FString path;
-	struct stat info;
-
-	path = NicePath("$HOME/" GAME_DIR "/");
-
-	if (stat (path, &info) == -1)
-	{
-		struct stat extrainfo;
-
-		// Sanity check for $HOME/.config
-		FString configPath = NicePath("$HOME/.config/");
-		if (stat (configPath, &extrainfo) == -1)
-		{
-			if (mkdir (configPath, S_IRUSR | S_IWUSR | S_IXUSR) == -1)
-			{
-				I_FatalError ("Failed to create $HOME/.config directory:\n%s", strerror(errno));
-			}
-		}
-		else if (!S_ISDIR(extrainfo.st_mode))
-		{
-			I_FatalError ("$HOME/.config must be a directory");
-		}
-
-		// This can be removed after a release or two
-		// Transfer the old zdoom directory to the new location
-		bool moved = false;
-		FString oldpath = NicePath("$HOME/." GAMENAMELOWERCASE "/");
-		if (stat (oldpath, &extrainfo) != -1)
-		{
-			if (rename(oldpath, path) == -1)
-			{
-				I_Error ("Failed to move old " GAMENAMELOWERCASE " directory (%s) to new location (%s).",
-					oldpath.GetChars(), path.GetChars());
-			}
-			else
-				moved = true;
-		}
-
-		if (!moved && mkdir (path, S_IRUSR | S_IWUSR | S_IXUSR) == -1)
-		{
-			I_FatalError ("Failed to create %s directory:\n%s",
-				path.GetChars(), strerror (errno));
-		}
-	}
-	else
-	{
-		if (!S_ISDIR(info.st_mode))
-		{
-			I_FatalError ("%s must be a directory", path.GetChars());
-		}
-	}
-	path += file;
-	return path;
+	return FString("/userdata/saves/lzdoom/") + file;
 }
 
 //===========================================================================
@@ -110,7 +58,7 @@ FString M_GetAppDataPath(bool create)
 {
 	// Don't use GAME_DIR and such so that ZDoom and its child ports can
 	// share the node cache.
-	FString path = NicePath("$HOME/.config/" GAMENAMELOWERCASE);
+	FString path = NicePath("/userdata/saves/lzdoom");
 	if (create)
 	{
 		CreatePath(path);
@@ -130,7 +78,7 @@ FString M_GetCachePath(bool create)
 {
 	// Don't use GAME_DIR and such so that ZDoom and its child ports can
 	// share the node cache.
-	FString path = NicePath("$HOME/.config/zdoom/cache");
+	FString path = NicePath("/userdata/saves/lzdoom/cache");
 	if (create)
 	{
 		CreatePath(path);
@@ -148,7 +96,7 @@ FString M_GetCachePath(bool create)
 
 FString M_GetAutoexecPath()
 {
-	return GetUserFile("autoexec.cfg");
+	return FString("/userdata/system/configs/lzdoom/autoexec.cfg");
 }
 
 //===========================================================================
@@ -190,7 +138,7 @@ FString M_GetCajunPath(const char *botfilename)
 
 FString M_GetConfigPath(bool for_reading)
 {
-	return GetUserFile(GAMENAMELOWERCASE ".ini");
+	return FString("/userdata/system/configs/lzdoom/lzdoom.ini");
 }
 
 //===========================================================================
@@ -203,7 +151,7 @@ FString M_GetConfigPath(bool for_reading)
 
 FString M_GetScreenshotsPath()
 {
-	return NicePath("$HOME/" GAME_DIR "/screenshots/");
+	return FString("/userdata/screenshots/");
 }
 
 //===========================================================================
@@ -216,7 +164,7 @@ FString M_GetScreenshotsPath()
 
 FString M_GetSavegamesPath()
 {
-	return NicePath("$HOME/" GAME_DIR);
+	return FString("/userdata/saves/lzdoom/");
 }
 
 //===========================================================================
@@ -229,5 +177,5 @@ FString M_GetSavegamesPath()
 
 FString M_GetDocumentsPath()
 {
-	return NicePath("$HOME/" GAME_DIR);
+	return M_GetSavegamesPath();
 }
