diff -Naur avp-20170505.orig/src/oglfunc.h avp-20170505/src/oglfunc.h
--- avp-20170505.orig/src/oglfunc.h	2017-01-30 04:19:55.000000000 +0000
+++ avp-20170505/src/oglfunc.h	2022-02-13 09:44:42.482216548 +0000
@@ -12,7 +12,6 @@
 
 // OpenGL compatibility
 typedef GLclampf GLclampd;
-typedef GLfloat GLdouble;
 
 #else
 #include "SDL_opengl.h"
diff -Naur avp-20170505.orig/src/opengl.h avp-20170505/src/opengl.h
--- avp-20170505.orig/src/opengl.h	2017-01-30 04:19:55.000000000 +0000
+++ avp-20170505/src/opengl.h	2022-02-13 09:41:47.373077662 +0000
@@ -14,6 +14,8 @@
 #define OPENGL_COLOR0_ATTRIB_BITINDEX (1 << OPENGL_COLOR0_ATTRIB_INDEX)
 #define OPENGL_COLOR1_ATTRIB_BITINDEX (1 << OPENGL_COLOR1_ATTRIB_INDEX)
 
+extern int WaterFallBase;
+
 enum AVP_SHADER_PROGRAM {
 	AVP_SHADER_PROGRAM_DEFAULT,
 	AVP_SHADER_PROGRAM_NO_SECONDARY,
diff -Naur avp-20170505.orig/src/opengl.h.orig avp-20170505/src/opengl.h.orig
--- avp-20170505.orig/src/opengl.h.orig	1970-01-01 01:00:00.000000000 +0100
+++ avp-20170505/src/opengl.h.orig	2017-01-30 04:19:55.000000000 +0000
@@ -0,0 +1,47 @@
+#ifndef AVP_OPENGL_H
+#define AVP_OPENGL_H
+
+#include "kshape.h"
+
+
+#define OPENGL_VERTEX_ATTRIB_INDEX 0
+#define OPENGL_TEXCOORD_ATTRIB_INDEX 1
+#define OPENGL_COLOR0_ATTRIB_INDEX 2
+#define OPENGL_COLOR1_ATTRIB_INDEX 3
+
+#define OPENGL_VERTEX_ATTRIB_BITINDEX (1 << OPENGL_VERTEX_ATTRIB_INDEX)
+#define OPENGL_TEXCOORD_ATTRIB_BITINDEX (1 << OPENGL_TEXCOORD_ATTRIB_INDEX)
+#define OPENGL_COLOR0_ATTRIB_BITINDEX (1 << OPENGL_COLOR0_ATTRIB_INDEX)
+#define OPENGL_COLOR1_ATTRIB_BITINDEX (1 << OPENGL_COLOR1_ATTRIB_INDEX)
+
+enum AVP_SHADER_PROGRAM {
+	AVP_SHADER_PROGRAM_DEFAULT,
+	AVP_SHADER_PROGRAM_NO_SECONDARY,
+	AVP_SHADER_PROGRAM_NO_TEXTURE,
+	AVP_SHADER_PROGRAM_NO_DISCARD,
+	AVP_SHADER_PROGRAM_NO_SECONDARY_NO_DISCARD,
+	AVP_SHADER_PROGRAM_NO_COLOR_NO_DISCARD,
+	AVP_SHADER_PROGRAM_MAX
+};
+
+void SelectProgram(enum AVP_SHADER_PROGRAM program);
+void DrawFullscreenTexture(int texureObject);
+
+void InitOpenGL(int firsttime);
+void ThisFramesRenderingHasBegun();
+void ThisFramesRenderingHasFinished();
+void D3D_SkyPolygon_Output(POLYHEADER *inputPolyPtr, RENDERVERTEX *renderVerticesPtr);
+void D3D_DrawBackdrop();
+void D3D_FadeDownScreen(int brightness, int colour);
+void RenderString(char *stringPtr, int x, int y, int colour);
+void RenderStringCentred(char *stringPtr, int centreX, int y, int colour);
+void RenderStringVertically(char *stringPtr, int centreX, int bottomY, int colour);
+void D3D_DecalSystem_Setup();
+void D3D_DecalSystem_End();
+void SecondFlushD3DZBuffer();
+void D3D_PlayerDamagedOverlay(int intensity);
+void D3D_PredatorScreenInversionOverlay();
+void D3D_ScreenInversionOverlay();
+void D3D_DrawColourBar(int yTop, int yBottom, int rScale, int gScale, int bScale);
+
+#endif
diff -Naur avp-20170505.orig/src/stubs.c avp-20170505/src/stubs.c
--- avp-20170505.orig/src/stubs.c	2017-01-30 04:19:55.000000000 +0000
+++ avp-20170505/src/stubs.c	2022-02-13 09:41:47.373077662 +0000
@@ -109,7 +109,6 @@
 int NumberOfLandscapePolygons;
 int FMVParticleColour;
 int WireFrameMode;
-int WaterFallBase;
 
 void InitDrawTest()
 {
