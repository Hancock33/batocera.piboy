diff --git a/SamTFE/Sources/CMakeLists.txt b/SamTFE/Sources/CMakeLists.txt
index 1fcf029..5f42630 100644
--- a/SamTFE/Sources/CMakeLists.txt
+++ b/SamTFE/Sources/CMakeLists.txt
@@ -151,10 +151,10 @@ if(CMAKE_SYSTEM_NAME STREQUAL "Linux" OR CMAKE_SYSTEM_NAME MATCHES "GNU")
     message(STATUS "Set GNU Linux TRUE")
     set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wno-reorder -Wno-unused-but-set-variable -Wno-maybe-uninitialized -Wno-class-memaccess -Wno-unused-function")
     if(CMAKE_OS_NAME STREQUAL "Gentoo" AND USE_SYSTEM_INSTALL)
-      set(RPATH_SETTINGS "-rpath=/var/tmp/portage")
+      #set(RPATH_SETTINGS "-rpath=/var/tmp/portage")
       message(STATUS "Build for Gentoo with '-rpath=/var/tmp/portage'")
     else()
-      set(RPATH_SETTINGS "-rpath,$ORIGIN")
+      #set(RPATH_SETTINGS "-rpath,$ORIGIN")
     endif()
 endif()
 if(CMAKE_SYSTEM_NAME STREQUAL "FreeBSD" OR CMAKE_SYSTEM_NAME STREQUAL "OpenBSD" OR CMAKE_SYSTEM_NAME STREQUAL "NetBSD")
@@ -163,27 +163,27 @@ if(CMAKE_SYSTEM_NAME STREQUAL "FreeBSD" OR CMAKE_SYSTEM_NAME STREQUAL "OpenBSD"
     if(CMAKE_GENERATOR STREQUAL "Unix Makefiles")                                  # for local instal
       if(CMAKE_SYSTEM_PROCESSOR MATCHES "i386|i686|x86|amd64|AMD64" AND CMAKE_SIZEOF_VOID_P EQUAL 4)
         if(USE_ASM)
-          set(RPATH_SETTINGS "-z,notext,-rpath,$ORIGIN")
+          #set(RPATH_SETTINGS "-z,notext,-rpath,$ORIGIN")
           message(STATUS "Arch i386 using -Wl,-z,notext LD flags")
         else()
-          set(RPATH_SETTINGS "-rpath,$ORIGIN")
+          #set(RPATH_SETTINGS "-rpath,$ORIGIN")
           message(STATUS "Arch i386 portable C instead of all ASM")
         endif()
       else()
-        set(RPATH_SETTINGS "-rpath,$ORIGIN")
+        #set(RPATH_SETTINGS "-rpath,$ORIGIN")
       endif()
       message(STATUS "Using cmake generator 'Unix Makefiles'")
     elseif(CMAKE_GENERATOR STREQUAL "Ninja")                                       # defalt for install to the system
       if(CMAKE_SYSTEM_PROCESSOR MATCHES "i386|i686|x86|amd64|AMD64" AND CMAKE_SIZEOF_VOID_P EQUAL 4)
         if(USE_ASM)
-          set(RPATH_SETTINGS "-z,notext,-rpath=/tmp")
+          #set(RPATH_SETTINGS "-z,notext,-rpath=/tmp")
           message(STATUS "Arch i386 using -Wl,-z,notext LD flags")
         else()
-          set(RPATH_SETTINGS "-rpath=/tmp")
+          #set(RPATH_SETTINGS "-rpath=/tmp")
           message(STATUS "Arch i386 portable C instead of all ASM")
         endif()
       else()
-        set(RPATH_SETTINGS "-rpath=/tmp")
+        #set(RPATH_SETTINGS "-rpath=/tmp")
       endif()  
       message(STATUS "Using cmake generator 'Ninja'")
     else()
@@ -194,10 +194,10 @@ endif()
 if(APPLE)
     set(MACOSX TRUE)
     if(CMAKE_GENERATOR STREQUAL "Unix Makefiles")
-      set(RPATH_SETTINGS "-rpath,$ORIGIN")
+      #set(RPATH_SETTINGS "-rpath,$ORIGIN")
       message(STATUS "Using cmake generator 'Unix Makefiles'")
     elseif(CMAKE_GENERATOR STREQUAL "Ninja")
-      set(RPATH_SETTINGS "-rpath=/tmp")     
+      #set(RPATH_SETTINGS "-rpath=/tmp")     
       message(STATUS "Using cmake generator 'Ninja'")
     else()
         message(FATAL_ERROR "Unknown cmake generator")
@@ -1508,13 +1508,13 @@ if(RPI4)
 endif()
 
 if(FREEBSD OR MACOSX)
- set_target_properties(${ENGINELIB} PROPERTIES ENABLE_EXPORTS ON LINK_FLAGS "-Wl,${RPATH_SETTINGS}")
+ #set_target_properties(${ENGINELIB} PROPERTIES ENABLE_EXPORTS ON LINK_FLAGS "-Wl,${RPATH_SETTINGS}")
 else()
  if(USE_SYSTEM_VULKAN)
    target_link_libraries(${ENGINELIB} vulkan)
-   set_target_properties(${ENGINELIB} PROPERTIES ENABLE_EXPORTS ON LINK_FLAGS "-Wl,-lvulkan,${RPATH_SETTINGS}")
+   #set_target_properties(${ENGINELIB} PROPERTIES ENABLE_EXPORTS ON LINK_FLAGS "-Wl,-lvulkan,${RPATH_SETTINGS}")
  else()
-   set_target_properties(${ENGINELIB} PROPERTIES ENABLE_EXPORTS ON LINK_FLAGS "-Wl,${RPATH_SETTINGS}")
+   #set_target_properties(${ENGINELIB} PROPERTIES ENABLE_EXPORTS ON LINK_FLAGS "-Wl,${RPATH_SETTINGS}")
  endif()
 endif()
 
@@ -1610,14 +1610,14 @@ if(MACOSX)
 endif()
 
 if(LINUX)
-    set_target_properties(SeriousSam${MP} PROPERTIES LINK_FLAGS "-Wl,${RPATH_SETTINGS}")
+    #set_target_properties(SeriousSam${MP} PROPERTIES LINK_FLAGS "-Wl,${RPATH_SETTINGS}")
     target_link_libraries(SeriousSam${MP} "m")
     target_link_libraries(SeriousSam${MP} "dl")
     target_link_libraries(SeriousSam${MP} "pthread")
     target_link_libraries(SeriousSam${MP} ${SDL2_LIBRARY})
     target_link_libraries(SeriousSam${MP} ${ZLIB_LIBRARIES})
     if(BUILD_DEDICATED_SERVER)
-        set_target_properties(DedicatedServer${MP} PROPERTIES LINK_FLAGS "-Wl,${RPATH_SETTINGS}")
+        #set_target_properties(DedicatedServer${MP} PROPERTIES LINK_FLAGS "-Wl,${RPATH_SETTINGS}")
         target_link_libraries(DedicatedServer${MP} "m")
         target_link_libraries(DedicatedServer${MP} "dl")
         target_link_libraries(DedicatedServer${MP} "pthread")
@@ -1625,7 +1625,7 @@ if(LINUX)
         target_link_libraries(DedicatedServer${MP} ${ZLIB_LIBRARIES})
     endif()
     if(BUILD_MAKEFONT)
-        set_target_properties(MakeFONT${MP} PROPERTIES LINK_FLAGS "-Wl,${RPATH_SETTINGS}")
+        #set_target_properties(MakeFONT${MP} PROPERTIES LINK_FLAGS "-Wl,${RPATH_SETTINGS}")
         target_link_libraries(MakeFONT${MP} "m")
         target_link_libraries(MakeFONT${MP} "dl")
         target_link_libraries(MakeFONT${MP} "pthread")
diff --git a/SamTSE/Sources/CMakeLists.txt b/SamTSE/Sources/CMakeLists.txt
index 6cb9f08..207c665 100644
--- a/SamTSE/Sources/CMakeLists.txt
+++ b/SamTSE/Sources/CMakeLists.txt
@@ -151,10 +151,10 @@ if(CMAKE_SYSTEM_NAME STREQUAL "Linux" OR CMAKE_SYSTEM_NAME MATCHES "GNU")
     message(STATUS "Set GNU Linux TRUE")
     set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wno-reorder -Wno-unused-but-set-variable -Wno-maybe-uninitialized -Wno-class-memaccess -Wno-unused-function")
     if(CMAKE_OS_NAME STREQUAL "Gentoo" AND USE_SYSTEM_INSTALL)
-      set(RPATH_SETTINGS "-rpath=/var/tmp/portage")
+      #set(RPATH_SETTINGS "-rpath=/var/tmp/portage")
       message(STATUS "Build for Gentoo with '-rpath=/var/tmp/portage'")
     else()
-      set(RPATH_SETTINGS "-rpath,$ORIGIN")
+      #set(RPATH_SETTINGS "-rpath,$ORIGIN")
     endif()
 endif()
 if(CMAKE_SYSTEM_NAME STREQUAL "FreeBSD" OR CMAKE_SYSTEM_NAME STREQUAL "OpenBSD" OR CMAKE_SYSTEM_NAME STREQUAL "NetBSD")
@@ -163,27 +163,27 @@ if(CMAKE_SYSTEM_NAME STREQUAL "FreeBSD" OR CMAKE_SYSTEM_NAME STREQUAL "OpenBSD"
     if(CMAKE_GENERATOR STREQUAL "Unix Makefiles")                                  # for local instal
       if(CMAKE_SYSTEM_PROCESSOR MATCHES "i386|i686|x86|amd64|AMD64" AND CMAKE_SIZEOF_VOID_P EQUAL 4)
         if(USE_ASM)
-          set(RPATH_SETTINGS "-z,notext,-rpath,$ORIGIN")
+          #set(RPATH_SETTINGS "-z,notext,-rpath,$ORIGIN")
           message(STATUS "Arch i386 using -Wl,-z,notext LD flags")
         else()
-          set(RPATH_SETTINGS "-rpath,$ORIGIN")
+          #set(RPATH_SETTINGS "-rpath,$ORIGIN")
           message(STATUS "Arch i386 portable C instead of all ASM")
         endif()
       else()
-        set(RPATH_SETTINGS "-rpath,$ORIGIN")
+        #set(RPATH_SETTINGS "-rpath,$ORIGIN")
       endif()
       message(STATUS "Using cmake generator 'Unix Makefiles'")
     elseif(CMAKE_GENERATOR STREQUAL "Ninja")                                       # defalt for install to the system
       if(CMAKE_SYSTEM_PROCESSOR MATCHES "i386|i686|x86|amd64|AMD64" AND CMAKE_SIZEOF_VOID_P EQUAL 4)
         if(USE_ASM)
-          set(RPATH_SETTINGS "-z,notext,-rpath=/tmp")
+          #set(RPATH_SETTINGS "-z,notext,-rpath=/tmp")
           message(STATUS "Arch i386 using -Wl,-z,notext LD flags")
         else()
-          set(RPATH_SETTINGS "-rpath=/tmp")
+          #set(RPATH_SETTINGS "-rpath=/tmp")
           message(STATUS "Arch i386 portable C instead of all ASM")
         endif()
       else()
-        set(RPATH_SETTINGS "-rpath=/tmp")
+        #set(RPATH_SETTINGS "-rpath=/tmp")
       endif()  
       message(STATUS "Using cmake generator 'Ninja'")
     else()
@@ -194,10 +194,10 @@ endif()
 if(APPLE)
     set(MACOSX TRUE)
     if(CMAKE_GENERATOR STREQUAL "Unix Makefiles")
-      set(RPATH_SETTINGS "-rpath,$ORIGIN")
+      #set(RPATH_SETTINGS "-rpath,$ORIGIN")
       message(STATUS "Using cmake generator 'Unix Makefiles'")
     elseif(CMAKE_GENERATOR STREQUAL "Ninja")
-      set(RPATH_SETTINGS "-rpath=/tmp")     
+      #set(RPATH_SETTINGS "-rpath=/tmp")     
       message(STATUS "Using cmake generator 'Ninja'")
     else()
         message(FATAL_ERROR "Unknown cmake generator")
@@ -1508,13 +1508,13 @@ if(RPI4)
 endif()
 
 if(FREEBSD OR MACOSX)
- set_target_properties(${ENGINELIB} PROPERTIES ENABLE_EXPORTS ON LINK_FLAGS "-Wl,${RPATH_SETTINGS}")
+ #set_target_properties(${ENGINELIB} PROPERTIES ENABLE_EXPORTS ON LINK_FLAGS "-Wl,${RPATH_SETTINGS}")
 else()
  if(USE_SYSTEM_VULKAN)
    target_link_libraries(${ENGINELIB} vulkan)
-   set_target_properties(${ENGINELIB} PROPERTIES ENABLE_EXPORTS ON LINK_FLAGS "-Wl,-lvulkan,${RPATH_SETTINGS}")
+   #set_target_properties(${ENGINELIB} PROPERTIES ENABLE_EXPORTS ON LINK_FLAGS "-Wl,-lvulkan,${RPATH_SETTINGS}")
  else()
-   set_target_properties(${ENGINELIB} PROPERTIES ENABLE_EXPORTS ON LINK_FLAGS "-Wl,${RPATH_SETTINGS}")
+   #set_target_properties(${ENGINELIB} PROPERTIES ENABLE_EXPORTS ON LINK_FLAGS "-Wl,${RPATH_SETTINGS}")
  endif()
 endif()
 
@@ -1610,14 +1610,14 @@ if(MACOSX)
 endif()
 
 if(LINUX)
-    set_target_properties(SeriousSam${MP} PROPERTIES LINK_FLAGS "-Wl,${RPATH_SETTINGS}")
+    #set_target_properties(SeriousSam${MP} PROPERTIES LINK_FLAGS "-Wl,${RPATH_SETTINGS}")
     target_link_libraries(SeriousSam${MP} "m")
     target_link_libraries(SeriousSam${MP} "dl")
     target_link_libraries(SeriousSam${MP} "pthread")
     target_link_libraries(SeriousSam${MP} ${SDL2_LIBRARY})
     target_link_libraries(SeriousSam${MP} ${ZLIB_LIBRARIES})
     if(BUILD_DEDICATED_SERVER)
-        set_target_properties(DedicatedServer${MP} PROPERTIES LINK_FLAGS "-Wl,${RPATH_SETTINGS}")
+        #set_target_properties(DedicatedServer${MP} PROPERTIES LINK_FLAGS "-Wl,${RPATH_SETTINGS}")
         target_link_libraries(DedicatedServer${MP} "m")
         target_link_libraries(DedicatedServer${MP} "dl")
         target_link_libraries(DedicatedServer${MP} "pthread")
@@ -1625,7 +1625,7 @@ if(LINUX)
         target_link_libraries(DedicatedServer${MP} ${ZLIB_LIBRARIES})
     endif()
     if(BUILD_MAKEFONT)
-        set_target_properties(MakeFONT${MP} PROPERTIES LINK_FLAGS "-Wl,${RPATH_SETTINGS}")
+        #set_target_properties(MakeFONT${MP} PROPERTIES LINK_FLAGS "-Wl,${RPATH_SETTINGS}")
         target_link_libraries(MakeFONT${MP} "m")
         target_link_libraries(MakeFONT${MP} "dl")
         target_link_libraries(MakeFONT${MP} "pthread")
