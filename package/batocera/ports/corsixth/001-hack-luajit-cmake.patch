diff --git a/CorsixTH/CMakeLists.txt b/CorsixTH/CMakeLists.txt
index 85856df3..4da54d70 100644
--- a/CorsixTH/CMakeLists.txt
+++ b/CorsixTH/CMakeLists.txt
@@ -132,28 +132,7 @@ if(MSVC AND USE_VCPKG_DEPS)
   target_link_libraries(CorsixTH_lib lua)
   target_link_libraries(CorsixTH lua)
 else()
-  find_package(Lua REQUIRED)
-  if(Lua_FOUND OR LUA_FOUND)
-    target_link_libraries(CorsixTH ${LUA_LIBRARY})
-    include_directories(${LUA_INCLUDE_DIR})
-    # Special link flags needed on macOS 64bit, according to: http://luajit.org/install.html
-    # If these are not specified, luaL_newstate() returns NULL and we get this:
-    #   Fatal error starting CorsixTH: Cannot open Lua state.
-    if(APPLE AND LUA_LIBRARIES MATCHES "libluajit" AND CMAKE_SIZEOF_VOID_P EQUAL 8)
-      target_link_libraries(CorsixTH "-pagezero_size 10000" "-image_base 100000000")
-    endif()
-    if(LUA_LIBRARIES MATCHES "libluajit")
-      message("  LuaJIT${LUA_VERSION_MAJOR}.${LUA_VERSION_MINOR} found")
-    else()
-      message("  Lua${LUA_VERSION_MAJOR}.${LUA_VERSION_MINOR} found")
-      if(WITH_LUAJIT)
-        message("    Did you want to use LuaJIT? Please specify the path")
-      endif()
-      unset(WITH_LUAJIT CACHE)
-    endif()
-  else()
-    message(FATAL_ERROR "Error: Lua library not found, it is required to build")
-  endif()
+    target_link_libraries(CorsixTH luajit-5.1)
 endif()
 
 # Add threading library
