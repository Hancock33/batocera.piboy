diff --git a/client/CMT.cpp b/client/CMT.cpp
index 13b31c89f..e640bb4cd 100644
--- a/client/CMT.cpp
+++ b/client/CMT.cpp
@@ -191,6 +191,10 @@ int main(int argc, char * argv[])
 		("serverport", po::value<si64>(), "override port specified in config file")
 		("saveprefix", po::value<std::string>(), "prefix for auto save files")
 		("savefrequency", po::value<si64>(), "limit auto save creation to each N days")
+		("video-fullscreen", po::value<bool>(), "Full Screen")
+		("video-realFullscreen", po::value<bool>(), "Real Full Screen")
+		("video-width", po::value<int>(), "Video Width")
+		("video-height", po::value<int>(), "Video Height")
 		("lobby", "parameters address, port, uuid to connect ro remote lobby session")
 		("lobby-address", po::value<std::string>(), "address to remote lobby")
 		("lobby-port", po::value<ui16>(), "port to remote lobby")
@@ -650,7 +654,7 @@ static bool recreateWindow(int w, int h, int bpp, bool fullscreen, int displayIn
 #endif
 
 	bool bufOnScreen = (screenBuf == screen);
-	bool realFullscreen = settings["video"]["realFullscreen"].Bool();
+	bool realFullscreen = vm["video-realFullscreen"].as<bool>();
 
 	/* match best rendering resolution */
 	int renderWidth = 0, renderHeight = 0;
@@ -894,6 +898,13 @@ static bool recreateWindow(int w, int h, int bpp, bool fullscreen, int displayIn
 //used only once during initialization
 static void setScreenRes(int w, int h, int bpp, bool fullscreen, int displayIndex, bool resetVideo)
 {
+	if(vm.count("video-width"))
+		w = vm["video-width"].as<int>();
+	if(vm.count("video-height"))
+		h = vm["video-height"].as<int>();
+	if(vm.count("video-fullscreen"))
+		fullscreen = vm["video-fullscreen"].as<bool>();
+
 	if(!recreateWindow(w, h, bpp, fullscreen, displayIndex))
 	{
 		throw std::runtime_error("Requested screen resolution is not available\n");
