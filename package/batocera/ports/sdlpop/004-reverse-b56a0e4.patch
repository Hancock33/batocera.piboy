diff -Naur SDLPoP-98a3ac7a660e030b39388c9ff6e11d5395c48022.orig/src/seg000.c SDLPoP-98a3ac7a660e030b39388c9ff6e11d5395c48022/src/seg000.c
--- SDLPoP-98a3ac7a660e030b39388c9ff6e11d5395c48022.orig/src/seg000.c	2021-09-04 15:31:51.000000000 +0100
+++ SDLPoP-98a3ac7a660e030b39388c9ff6e11d5395c48022/src/seg000.c	2021-09-11 11:05:43.529204040 +0100
@@ -93,6 +93,8 @@
 	char sprintf_temp[100];
 	int i;
 
+	dathandle = open_dat("PRINCE.DAT", 0);
+
 	/*video_mode =*/ parse_grmode();
 
 	init_timer(BASE_FPS);
@@ -116,9 +118,6 @@
 	init_record_replay();
 #endif
 
-	// I moved this after init_copyprot_dialog(), so open_dat() can show an error dialog if needed.
-	dathandle = open_dat("PRINCE.DAT", 0);
-
 	if (cheats_enabled
 		#ifdef USE_REPLAY
 		|| recording
diff -Naur SDLPoP-98a3ac7a660e030b39388c9ff6e11d5395c48022.orig/src/seg009.c SDLPoP-98a3ac7a660e030b39388c9ff6e11d5395c48022/src/seg009.c
--- SDLPoP-98a3ac7a660e030b39388c9ff6e11d5395c48022.orig/src/seg009.c	2021-09-04 15:31:51.000000000 +0100
+++ SDLPoP-98a3ac7a660e030b39388c9ff6e11d5395c48022/src/seg009.c	2021-09-11 11:13:41.181249818 +0100
@@ -398,9 +398,7 @@
 		pointer->handle = fp;
 		pointer->dat_table = dat_table;
 	} else if (optional == 0) {
-		// showmessage will crash if we call if before certain things are initialized!
-		// Solution: In pop_main(), I moved the first open_dat() call after init_copyprot_dialog().
-		// /*
+        /* // showmessage will crash if we call if before certain things are initialized!
 		// There is no DAT file, verify whether the corresponding directory exists.
 		char filename_no_ext[POP_MAX_PATH];
 		// strip the .DAT file extension from the filename (use folders simply named TITLE, KID, VPALACE, etc.)
@@ -409,20 +407,20 @@
 		if (len >= 5 && filename_no_ext[len-4] == '.') {
 			filename_no_ext[len-4] = '\0'; // terminate, so ".DAT" is deleted from the filename
 		}
-		char foldername[POP_MAX_PATH];
-		snprintf_check(foldername,sizeof(foldername),"data/%s",filename_no_ext);
-		const char* data_path = locate_file(foldername);
+		char filename[POP_MAX_PATH];
+		snprintf_check(filename,sizeof(filename),"data/%s",filename_no_ext);
+		const char* data_path = locate_file(filename);
 		struct stat path_stat;
 		int result = stat(data_path, &path_stat);
 		if (result != 0 || !S_ISDIR(path_stat.st_mode)) {
 			char error_message[256];
-			snprintf_check(error_message, sizeof(error_message), "Cannot find a required data file: %s or folder: %s\nPress any key to quit.", filename, foldername);
+			snprintf_check(error_message, sizeof(error_message), "Cannot find a required data file: %s\nPress any key to quit.", filename);
 			if (onscreen_surface_ != NULL && copyprot_dialog != NULL) { // otherwise showmessage will crash
 				showmessage(error_message, 1, &key_test_quit);
 				quit(1);
 			}
 		}
-		// */
+		*/
 	}
 out:
 	// stub
@@ -463,7 +461,7 @@
 			char error_message[256];
 			// Unfortunately we don't know at this point which data file is missing. So we use the name of the last opened DAT file.
 			// It's also possible that the DAT file exists and it just doesn't contain the needed resource.
-			snprintf_check(error_message, sizeof(error_message), "Can't load sprites from resource %d.\nThe last opened data file is: %s\nPress any key to quit.", resource, dat_chain_ptr->filename);
+			snprintf_check(error_message, sizeof(error_message), "Cannot find a required data file: %s\nMake sure that the data/ folder exists.\nPress any key to quit.", dat_chain_ptr->filename);
 			showmessage(error_message, 1, &key_test_quit);
 			quit(1);
 		}