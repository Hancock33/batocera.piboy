diff --git a/src/io/controls.cpp b/src/io/controls.cpp
index 9d134d4..0e79195 100644
--- a/src/io/controls.cpp
+++ b/src/io/controls.cpp
@@ -32,62 +32,17 @@
 #define DEFAULT_KEY_DOWN                (SDLK_DOWN)
 #define DEFAULT_KEY_LEFT                (SDLK_LEFT)
 #define DEFAULT_KEY_RIGHT               (SDLK_RIGHT)
-#if defined (_WIN32)
-    #define DEFAULT_KEY_JUMP            (SDLK_RALT)
-    #define DEFAULT_KEY_SWIM            (SDLK_RALT)
-    #define DEFAULT_KEY_FIRE            (SDLK_SPACE)
-    #define DEFAULT_KEY_CHANGE          (SDLK_RCTRL)
-    #define DEFAULT_KEY_ENTER           (SDLK_RETURN)
-    #define DEFAULT_KEY_ESCAPE          (SDLK_ESCAPE)
-    #define DEFAULT_KEY_STATS           (SDLK_F9)
-    #define DEFAULT_KEY_PAUSE           (SDLK_p)
-    #define DEFAULT_KEY_YES             (SDLK_y)
-    #define DEFAULT_KEY_NO              (SDLK_n)
-#elif defined(DINGOO)
-    #define DEFAULT_KEY_JUMP            (SDLK_LCTRL)
-    #define DEFAULT_KEY_SWIM            (SDLK_LCTRL)
-    #define DEFAULT_KEY_FIRE            (SDLK_LALT)
-    #define DEFAULT_KEY_CHANGE          (SDLK_LSHIFT)
-    #define DEFAULT_KEY_ENTER           (SDLK_LCTRL)
-    #define DEFAULT_KEY_ESCAPE          (SDLK_ESCAPE)
-    #define DEFAULT_KEY_STATS           (SDLK_TAB)
-    #define DEFAULT_KEY_PAUSE           (SDLK_RETURN)
-    #define DEFAULT_KEY_YES             (SDLK_LCTRL)
-    #define DEFAULT_KEY_NO              (SDLK_LALT)
-#elif defined (ANDROID)
-    #define DEFAULT_KEY_JUMP            (SDLK_SPACE)
-    #define DEFAULT_KEY_SWIM            (SDLK_SPACE)
-    #define DEFAULT_KEY_FIRE            (SDLK_LALT)
-    #define DEFAULT_KEY_CHANGE          (SDLK_RETURN)
-    #define DEFAULT_KEY_ENTER           (SDLK_SPACE)
-    #define DEFAULT_KEY_ESCAPE          (SDLK_ESCAPE)
-    #define DEFAULT_KEY_STATS           (SDLK_F9)
-    #define DEFAULT_KEY_PAUSE           (SDLK_p)
-    #define DEFAULT_KEY_YES             (SDLK_y)
-    #define DEFAULT_KEY_NO              (SDLK_n)
-#elif defined(GAMESHELL)
-    #define DEFAULT_KEY_JUMP            (SDLK_j)      /* A button */
-    #define DEFAULT_KEY_SWIM            (SDLK_j)      /* A button */
-    #define DEFAULT_KEY_FIRE            (SDLK_k)      /* B button */
-    #define DEFAULT_KEY_CHANGE          (SDLK_o)      /* Y button */
-    #define DEFAULT_KEY_ENTER           (SDLK_RETURN) /* START button */
-    #define DEFAULT_KEY_ESCAPE          (SDLK_ESCAPE) /* MENU button */
-    #define DEFAULT_KEY_STATS           (SDLK_SPACE)  /* SELECT button */
-    #define DEFAULT_KEY_PAUSE           (SDLK_p)
-    #define DEFAULT_KEY_YES             (SDLK_y)
-    #define DEFAULT_KEY_NO              (SDLK_n)
-#else
-    #define DEFAULT_KEY_JUMP            (SDLK_SPACE)
-    #define DEFAULT_KEY_SWIM            (SDLK_SPACE)
-    #define DEFAULT_KEY_FIRE            (SDLK_LALT)
-    #define DEFAULT_KEY_CHANGE          (SDLK_RCTRL)
-    #define DEFAULT_KEY_ENTER           (SDLK_RETURN)
-    #define DEFAULT_KEY_ESCAPE          (SDLK_ESCAPE)
-    #define DEFAULT_KEY_STATS           (SDLK_F9)
-    #define DEFAULT_KEY_PAUSE           (SDLK_p)
-    #define DEFAULT_KEY_YES             (SDLK_y)
-    #define DEFAULT_KEY_NO              (SDLK_n)
-#endif
+
+#define DEFAULT_KEY_JUMP                (SDLK_RALT)
+#define DEFAULT_KEY_SWIM                (SDLK_RALT)
+#define DEFAULT_KEY_FIRE                (SDLK_SPACE)
+#define DEFAULT_KEY_CHANGE              (SDLK_RCTRL)
+#define DEFAULT_KEY_ENTER               (SDLK_RETURN)
+#define DEFAULT_KEY_ESCAPE              (SDLK_ESCAPE)
+#define DEFAULT_KEY_STATS               (SDLK_F9)
+#define DEFAULT_KEY_PAUSE               (SDLK_p)
+#define DEFAULT_KEY_YES                 (SDLK_y)
+#define DEFAULT_KEY_NO                  (SDLK_n)
 
 /* These are optional */
 #define DEFAULT_KEY_BLASTER             (SDLK_1)
@@ -96,114 +51,6 @@
 #define DEFAULT_KEY_BOUNCER             (SDLK_4)
 #define DEFAULT_KEY_TNT                 (SDLK_5)
 
-#if defined(GP2X) || defined(WIZ)
-    #define DEFAULT_BUTTON_UP           (0)
-    #define DEFAULT_BUTTON_DOWN         (4)
-    #define DEFAULT_BUTTON_LEFT         (2)
-    #define DEFAULT_BUTTON_RIGHT        (6)
-    #define DEFAULT_BUTTON_JUMP         (12)    /* A */
-    #define DEFAULT_BUTTON_SWIM         (12)    /* A */
-    #define DEFAULT_BUTTON_FIRE         (14)    /* X */
-    #define DEFAULT_BUTTON_CHANGE       (15)    /* Y */
-    #define DEFAULT_BUTTON_ESCAPE       (10)    /* L */
-    #define DEFAULT_BUTTON_ENTER        (11)    /* R */
-    #define DEFAULT_BUTTON_PAUSE        (8)     /* Start */
-    #define DEFAULT_BUTTON_STATS        (9)     /* Select */
-    #define DEFAULT_BUTTON_YES          (-1)
-    #define DEFAULT_BUTTON_NO           (-1)
-#elif defined(CAANOO)
-    #define DEFAULT_BUTTON_UP           (-1)
-    #define DEFAULT_BUTTON_DOWN         (-1)
-    #define DEFAULT_BUTTON_LEFT         (-1)
-    #define DEFAULT_BUTTON_RIGHT        (-1)
-    #define DEFAULT_BUTTON_JUMP         (0)     /* A? */
-    #define DEFAULT_BUTTON_SWIM         (0)     /* A? */
-    #define DEFAULT_BUTTON_FIRE         (1)     /* X? */
-    #define DEFAULT_BUTTON_CHANGE       (3)     /* Y? */
-    #define DEFAULT_BUTTON_ESCAPE       (6)     /* Home */
-    #define DEFAULT_BUTTON_ENTER        (5)     /* R? */
-    #define DEFAULT_BUTTON_PAUSE        (9)     /* Help 2 */
-    #define DEFAULT_BUTTON_STATS        (8)     /* Help 1 */
-    #define DEFAULT_BUTTON_YES          (-1)
-    #define DEFAULT_BUTTON_NO           (-1)
-#elif defined(PSP)
-    #define DEFAULT_BUTTON_UP           (8)
-    #define DEFAULT_BUTTON_DOWN         (6)
-    #define DEFAULT_BUTTON_LEFT         (7)
-    #define DEFAULT_BUTTON_RIGHT        (9)
-    #define DEFAULT_BUTTON_JUMP         (2)
-    #define DEFAULT_BUTTON_SWIM         (2)
-    #define DEFAULT_BUTTON_FIRE         (3)
-    #define DEFAULT_BUTTON_CHANGE       (0)
-    #define DEFAULT_BUTTON_ENTER        (5)
-    #define DEFAULT_BUTTON_ESCAPE       (4)
-    #define DEFAULT_BUTTON_STATS        (10)
-    #define DEFAULT_BUTTON_PAUSE        (11)
-    #define DEFAULT_BUTTON_YES          (-1)
-    #define DEFAULT_BUTTON_NO           (-1)
-#elif defined(WII)
-    #define DEFAULT_BUTTON_UP           (-1)
-    #define DEFAULT_BUTTON_DOWN         (-1)
-    #define DEFAULT_BUTTON_LEFT         (-1)
-    #define DEFAULT_BUTTON_RIGHT        (-1)
-    #define DEFAULT_BUTTON_JUMP         (2)
-    #define DEFAULT_BUTTON_SWIM         (2)
-    #define DEFAULT_BUTTON_FIRE         (3)
-    #define DEFAULT_BUTTON_CHANGE       (0)
-    #define DEFAULT_BUTTON_ENTER        (3)
-    #define DEFAULT_BUTTON_ESCAPE       (6)
-    #define DEFAULT_BUTTON_STATS        (4)
-    #define DEFAULT_BUTTON_PAUSE        (5)
-    #define DEFAULT_BUTTON_YES          (-1)
-    #define DEFAULT_BUTTON_NO           (-1)
-#elif defined (_3DS)
-    #define DEFAULT_BUTTON_UP           (-1)
-    #define DEFAULT_BUTTON_DOWN         (-1)
-    #define DEFAULT_BUTTON_LEFT         (-1)
-    #define DEFAULT_BUTTON_RIGHT        (-1)
-    #define DEFAULT_BUTTON_JUMP         (2)    /* B */
-    #define DEFAULT_BUTTON_SWIM         (2)    /* B */
-    #define DEFAULT_BUTTON_FIRE         (4)    /* Y */
-    #define DEFAULT_BUTTON_CHANGE       (3)    /* X */
-    #define DEFAULT_BUTTON_ENTER        (1)    /* A */
-    #define DEFAULT_BUTTON_ESCAPE       (7)    /* Select */
-    #define DEFAULT_BUTTON_STATS        (5)    /* L */
-    #define DEFAULT_BUTTON_PAUSE        (8)    /* Start */
-    #define DEFAULT_BUTTON_YES          (-1)
-    #define DEFAULT_BUTTON_NO           (-1)
-#elif defined(__vita__)
-    #define DEFAULT_BUTTON_UP           (8)
-    #define DEFAULT_BUTTON_DOWN         (6)
-    #define DEFAULT_BUTTON_LEFT         (7)
-    #define DEFAULT_BUTTON_RIGHT        (9)
-    #define DEFAULT_BUTTON_JUMP         (2)
-    #define DEFAULT_BUTTON_SWIM         (1)
-    #define DEFAULT_BUTTON_FIRE         (3)
-    #define DEFAULT_BUTTON_CHANGE       (0)
-    #define DEFAULT_BUTTON_ENTER        (5)
-    #define DEFAULT_BUTTON_ESCAPE       (4)
-    #define DEFAULT_BUTTON_STATS        (10)
-    #define DEFAULT_BUTTON_PAUSE        (11)
-    #define DEFAULT_BUTTON_YES          (-1)
-    #define DEFAULT_BUTTON_NO           (-1)
-#else
-    #define DEFAULT_BUTTON_UP           (-1)
-    #define DEFAULT_BUTTON_DOWN         (-1)
-    #define DEFAULT_BUTTON_LEFT         (-1)
-    #define DEFAULT_BUTTON_RIGHT        (-1)
-    #define DEFAULT_BUTTON_JUMP         (1)
-    #define DEFAULT_BUTTON_SWIM         (1)
-    #define DEFAULT_BUTTON_FIRE         (0)
-    #define DEFAULT_BUTTON_CHANGE       (3)
-    #define DEFAULT_BUTTON_ENTER        (0)
-    #define DEFAULT_BUTTON_ESCAPE       (5)
-    #define DEFAULT_BUTTON_STATS        (-1)
-    #define DEFAULT_BUTTON_PAUSE        (4)
-    #define DEFAULT_BUTTON_YES          (-1)
-    #define DEFAULT_BUTTON_NO           (-1)
-#endif
-
-
 /**
  * Set up the default controls.
  */
@@ -232,27 +79,6 @@ Controls::Controls () {
 	keys[C_NO].key = DEFAULT_KEY_NO;
 
 
-	buttons[C_UP].button = DEFAULT_BUTTON_UP;
-	buttons[C_DOWN].button = DEFAULT_BUTTON_DOWN;
-	buttons[C_LEFT].button = DEFAULT_BUTTON_LEFT;
-	buttons[C_RIGHT].button = DEFAULT_BUTTON_RIGHT;
-	buttons[C_JUMP].button = DEFAULT_BUTTON_JUMP;
-	buttons[C_SWIM].button = DEFAULT_BUTTON_SWIM;
-	buttons[C_FIRE].button = DEFAULT_BUTTON_FIRE;
-	buttons[C_CHANGE].button = DEFAULT_BUTTON_CHANGE;
-	buttons[C_ENTER].button = DEFAULT_BUTTON_ENTER;
-	buttons[C_ESCAPE].button = DEFAULT_BUTTON_ESCAPE;
-	buttons[C_BLASTER].button = -1;
-	buttons[C_TOASTER].button = -1;
-	buttons[C_MISSILE].button = -1;
-	buttons[C_BOUNCER].button = -1;
-	buttons[C_TNT].button = -1;
-	buttons[C_STATS].button = DEFAULT_BUTTON_STATS;
-	buttons[C_PAUSE].button = DEFAULT_BUTTON_PAUSE;
-	buttons[C_YES].button = DEFAULT_BUTTON_YES;
-	buttons[C_NO].button = DEFAULT_BUTTON_NO;
-
-
 	axes[C_UP].axis = 1;
 	axes[C_UP].direction = false;
 	axes[C_DOWN].axis = 1;
@@ -530,77 +356,6 @@ int Controls::update (SDL_Event *event, LoopType type) {
 
 			break;
 
-		case SDL_JOYBUTTONDOWN:
-
-			if (type == SET_JOYSTICK_LOOP) return JOYSTICKB | event->jbutton.button;
-
-			for (count = 0; count < CONTROLS; count++)
-				if (event->jbutton.button == buttons[count].button)
-					buttons[count].pressed = true;
-
-			break;
-
-		case SDL_JOYBUTTONUP:
-
-			for (count = 0; count < CONTROLS; count++)
-				if (event->jbutton.button == buttons[count].button)
-					buttons[count].pressed = false;
-
-			break;
-
-		case SDL_JOYAXISMOTION:
-
-			if (type == SET_JOYSTICK_LOOP) {
-
-				if (event->jaxis.value < -16384)
-					return JOYSTICKANEG | event->jaxis.axis;
-				else if (event->jaxis.value > 16384)
-					return JOYSTICKAPOS | event->jaxis.axis;
-
-			}
-
-			for (count = 0; count < CONTROLS; count++)
-				if (event->jaxis.axis == axes[count].axis) {
-
-					if (!axes[count].direction && (event->jaxis.value < -16384))
-						axes[count].pressed = true;
-					else if (axes[count].direction && (event->jaxis.value > 16384))
-						axes[count].pressed = true;
-					else
-						axes[count].pressed = false;
-
-				}
-
-			break;
-
-		case SDL_JOYHATMOTION:
-
-			if (type == SET_JOYSTICK_LOOP) {
-
-				switch(event->jhat.value) {
-					case SDL_HAT_UP:
-						return JOYSTICKHUP  | event->jhat.hat;
-					case SDL_HAT_LEFT:
-						return JOYSTICKHLFT | event->jhat.hat;
-					case SDL_HAT_RIGHT:
-						return JOYSTICKHRHT | event->jhat.hat;
-					case SDL_HAT_DOWN:
-						return JOYSTICKHDWN | event->jhat.hat;
-				}
-			}
-
-			for(count = 0; count < CONTROLS; count++)
-				if (event->jhat.hat == hats[count].hat) {
-
-					if (hats[count].direction & event->jhat.value)
-						hats[count].pressed = true;
-					else
-						hats[count].pressed = false;
-
-				}
-
-			break;
-
 		case SDL_MOUSEMOTION:
 
 			if (event->motion.state & SDL_BUTTON(1)) {
