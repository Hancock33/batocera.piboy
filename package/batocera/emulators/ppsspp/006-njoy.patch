diff --git a/SDL/SDLJoystick.cpp b/SDL/SDLJoystick.cpp
index 265094f56b..9cb6f44dc8 100644
--- a/SDL/SDLJoystick.cpp
+++ b/SDL/SDLJoystick.cpp
@@ -18,7 +18,7 @@ static int SDLJoystickEventHandlerWrapper(void* userdata, SDL_Event* event) {
 	return 0;
 }
 
-SDLJoystick::SDLJoystick(bool init_SDL ) : registeredAsEventHandler(false) {
+SDLJoystick::SDLJoystick(bool init_SDL, int njoy) : registeredAsEventHandler(false) {
 	SDL_SetHint(SDL_HINT_JOYSTICK_ALLOW_BACKGROUND_EVENTS, "1");
 	if (init_SDL) {
 		SDL_Init(SDL_INIT_JOYSTICK | SDL_INIT_VIDEO | SDL_INIT_GAMECONTROLLER);
@@ -39,17 +39,17 @@ SDLJoystick::SDLJoystick(bool init_SDL ) : registeredAsEventHandler(false) {
 	} else {
 		WARN_LOG(Log::System, "gamecontrollerdb.txt missing?");
 	}
-	setUpControllers();
+	_njoy = njoy;
 }
 
 void SDLJoystick::setUpControllers() {
 	int numjoys = SDL_NumJoysticks();
-	for (int i = 0; i < numjoys; i++) {
-		setUpController(i);
-	}
-	if (controllers.size() > 0) {
-		INFO_LOG(Log::System, "pad 1 has been assigned to control pad: %s", SDL_GameControllerName(controllers.front()));
-	}
+	if(_njoy < numjoys) {
+		setUpController(_njoy);
+	  if (controllers.size() > 0) {
+		INFO_LOG(Log::System, "pad 1 has been assigned to control pad: %s", SDL_JoystickNameForIndex(_njoy));
+	  }
+ 	}
 }
 
 void SDLJoystick::setUpController(int deviceIndex) {
@@ -232,11 +232,9 @@ void SDLJoystick::ProcessInput(const SDL_Event &event){
 		}
 		break;
 	case SDL_CONTROLLERDEVICEADDED:
-		// for add events, "which" is the device index!
-		int prevNumControllers = controllers.size();
-		setUpController(event.cdevice.which);
-		if (prevNumControllers == 0 && controllers.size() > 0) {
-			INFO_LOG(Log::System, "pad 1 has been assigned to control pad: %s", SDL_GameControllerName(controllers.front()));
+		if(event.cdevice.which == _njoy) {
+			setUpController(_njoy);
+			INFO_LOG(Log::System, "pad 1 has been assigned to control pad: %s", SDL_JoystickNameForIndex(_njoy));
 		}
 		break;
 	}
diff --git a/SDL/SDLJoystick.h b/SDL/SDLJoystick.h
index 50cc43c4c7..9c287ade8a 100644
--- a/SDL/SDLJoystick.h
+++ b/SDL/SDLJoystick.h
@@ -16,7 +16,7 @@
 
 class SDLJoystick{
 public:
-	SDLJoystick(bool init_SDL = false);
+	SDLJoystick(bool init_SDL = false, int njoy = 0);
 	~SDLJoystick();
 
 	void registerEventHandler();
@@ -31,6 +31,7 @@ class SDLJoystick{
 	bool registeredAsEventHandler;
 	std::vector<SDL_GameController *> controllers;
 	std::map<int, int> controllerDeviceMap;
+	int _njoy;
 
 	// Deduplicate axis events. Pair is device, axis.
 	std::map<std::pair<InputDeviceID, InputAxis>, float> prevAxisValue_;
diff --git a/SDL/SDLMain.cpp b/SDL/SDLMain.cpp
index 70aef0bd78..d9898b75b2 100644
--- a/SDL/SDLMain.cpp
+++ b/SDL/SDLMain.cpp
@@ -1192,6 +1192,7 @@ int main(int argc, char *argv[]) {
 	bool set_ipad = false;
 	float set_dpi = 0.0f;
 	float set_scale = 1.0f;
+	int set_njoy = 0;
 
 	// Produce a new set of arguments with the ones we skip.
 	int remain_argc = 1;
@@ -1210,6 +1211,8 @@ int main(int argc, char *argv[]) {
 			set_dpi = parseFloat(argv[i]);
 		else if (set_scale == -2)
 			set_scale = parseFloat(argv[i]);
+		else if (set_njoy == -2)
+			set_njoy = parseInt(argv[i]);
 		else if (!strcmp(argv[i],"--xres"))
 			set_xres = -2;
 		else if (!strcmp(argv[i],"--yres"))
@@ -1222,6 +1225,8 @@ int main(int argc, char *argv[]) {
 			set_ipad = true;
 		else if (!strcmp(argv[i],"--portrait"))
 			portrait = true;
+		else if (!strcmp(argv[i],"--njoy"))
+			set_njoy = -2;
 		else {
 			remain_argv[remain_argc++] = argv[i];
 		}
@@ -1476,7 +1481,7 @@ int main(int argc, char *argv[]) {
 	InitSDLAudioDevice();
 
 	if (joystick_enabled) {
-		joystick = new SDLJoystick();
+		joystick = new SDLJoystick(false, set_njoy);
 	} else {
 		joystick = nullptr;
 	}
