diff --git a/Source/Core/Core/HW/DVD/AMBaseboard.cpp b/Source/Core/Core/HW/DVD/AMBaseboard.cpp
index c850756fc8..8ed4e6be2e 100644
--- a/Source/Core/Core/HW/DVD/AMBaseboard.cpp
+++ b/Source/Core/Core/HW/DVD/AMBaseboard.cpp
@@ -56,6 +56,7 @@
 #include <fcntl.h>
 #include <netinet/in.h>
 #include <sys/socket.h>
+#include <arpa/inet.h>
 #endif
 
 unsigned char JPEG[2712] =
@@ -968,15 +969,11 @@ u32 ExecuteCommand(u32* DICMDBUF, u32 Address, u32 Length)
             u32 timeout = Timeouts[0] / 1000;
             while (timeout--)
             {
-              ret = accept(fd, addr, len);
-              if (ret == SOCKET_ERROR)
+              ret = accept(fd, addr, (socklen_t*)len);
+              if (ret == EWOULDBLOCK)
               {
-                err = WSAGetLastError();
-                if (err == WSAEWOULDBLOCK)
-                {
-                  Sleep(1);
+                  sleep(1);
                   continue;
-                }
               }
               else
               {
@@ -985,7 +982,7 @@ u32 ExecuteCommand(u32* DICMDBUF, u32 Address, u32 Length)
                 u_long val = 1;
                 ioctlsocket(fd, FIONBIO, &val);
 #else
-                int flags = cntl(fd, F_GETFL);
+                int flags = fcntl(fd, F_GETFL);
                 fcntl(fd, F_SETFL, flags | O_NONBLOCK);
 #endif
                 break;
@@ -1015,13 +1012,13 @@ u32 ExecuteCommand(u32* DICMDBUF, u32 Address, u32 Length)
             addr.sin_addr.s_addr = INADDR_ANY;
 
 						int ret = bind( fd, (const sockaddr*)&addr, len );
-						int err = WSAGetLastError();
+						int err = 0;
 
             //if (ret < 0 )
             //  PanicAlertFmt("Socket Bind Failed with{0}", err);
 
 						NOTICE_LOG_FMT(DVDINTERFACE, "GC-AM: bind( {}, ({},{:08x}:{}), {} ):{} ({})\n", fd,
-                           addr.sin_family, addr.sin_addr.S_un.S_addr,
+                           addr.sin_family, addr.sin_addr.s_addr,
                            Common::swap16(addr.sin_port), len, ret, err);
 
             media_buffer_out_32[1] = ret;
@@ -1030,7 +1027,7 @@ u32 ExecuteCommand(u32* DICMDBUF, u32 Address, u32 Length)
 					{
             u32 fd = media_buffer_in_32[2];
 
-            int ret = closesocket(fd);
+            int ret = close(fd);
 
             NOTICE_LOG_FMT(DVDINTERFACE, "GC-AM: closesocket( {} ):{}\n", fd, ret);
 
@@ -1050,15 +1047,15 @@ u32 ExecuteCommand(u32* DICMDBUF, u32 Address, u32 Length)
 						memcpy( (void*)&addr, network_command_buffer + off , sizeof(struct sockaddr_in) );
 
             // CyCraft Connect IP, change to localhost
-            if (addr.sin_addr.S_un.S_addr == 1863035072)
+            if (addr.sin_addr.s_addr == 1863035072)
             {
-              addr.sin_addr.S_un.S_addr = 0x7F000001;
+              addr.sin_addr.s_addr = 0x7F000001;
             }
 
             // NAMCO Camera
-            if (addr.sin_addr.S_un.S_addr == 0xc0a81d68)
+            if (addr.sin_addr.s_addr == 0xc0a81d68)
             {
-              addr.sin_addr.S_un.S_addr = 0x7F000001;
+              addr.sin_addr.s_addr = 0x7F000001;
               addr.sin_family = htons(AF_INET); // fix family?
             }
 
@@ -1071,19 +1068,16 @@ u32 ExecuteCommand(u32* DICMDBUF, u32 Address, u32 Length)
               ret = connect(fd, (const sockaddr*)&addr, len);
               if( ret == 0 )
                 break;
-              if ( ret == SOCKET_ERROR )
+              if (err == EWOULDBLOCK || err == EALREADY )
               {
-                err = WSAGetLastError();
-                if (err == WSAEWOULDBLOCK || err == WSAEALREADY )
-                {
-                  Sleep(1);
-                  continue;
-                }
-                if (err == WSAEISCONN)
-                {
-                  ret = 0;
-                  break;
-                }
+                sleep(1);
+                continue;
+              }
+
+              if (err == EISCONN)
+              {
+                ret = 0;
+                break;
               }
             } 
 
@@ -1162,19 +1156,15 @@ u32 ExecuteCommand(u32* DICMDBUF, u32 Address, u32 Length)
               if (ret >= 0)
                 break;
 
-              if (ret == SOCKET_ERROR)
+              if (err == EWOULDBLOCK)
               {
-                err = WSAGetLastError();
-                if (err == WSAEWOULDBLOCK)
-                {
-                  Sleep(1);
+                  sleep(1);
                   continue;
-                }
-                break;
               }
+              break;
             }
 
-            if( err == WSAEWOULDBLOCK )
+            if( err == EWOULDBLOCK )
             {
               ret = 0;
             }
@@ -1206,7 +1196,7 @@ u32 ExecuteCommand(u32* DICMDBUF, u32 Address, u32 Length)
             }
 
             ret = send(fd, (char*)(network_buffer + offset), len, 0);
-            int err = WSAGetLastError();
+            int err = 0;
 
 						NOTICE_LOG_FMT(DVDINTERFACE, "GC-AM: send( {}, 0x{:08x}, {} ): {} {}\n", fd, offset, len, ret ,err );
 
@@ -1216,16 +1206,17 @@ u32 ExecuteCommand(u32* DICMDBUF, u32 Address, u32 Length)
 					case 0x40B:
 					{
             u32 af   = media_buffer_in_32[2];
+            u32 fd   = media_buffer_in_32[2];
             u32 type = media_buffer_in_32[3];
 
-						SOCKET fd = socket(af, type, IPPROTO_TCP);
+            fd = socket(af, type, IPPROTO_TCP);
 
             // Set socket non-blocking
 #ifdef WIN32
             u_long val = 1;
             ioctlsocket(fd, FIONBIO, &val);
 #else
-            int flags = cntl( fd, F_GETFL );
+            int flags = fcntl( fd, F_GETFL );
             fcntl(fd, F_SETFL, flags | O_NONBLOCK);
 #endif
 
@@ -1272,7 +1263,7 @@ u32 ExecuteCommand(u32* DICMDBUF, u32 Address, u32 Length)
 
             int ret = select( nfds, readfds, writefds, nullptr, &timeout );
 
-            int err = WSAGetLastError();
+            int err = 0;
 
 						NOTICE_LOG_FMT(DVDINTERFACE, "GC-AM: select( 0x{:08x} 0x{:08x} 0x{:08x} ):{} {} \n", nfds, NOffsetA, NOffsetB, ret, err);
 						//hexdump( NetworkCMDBuffer, 0x40 );
@@ -1285,7 +1276,7 @@ u32 ExecuteCommand(u32* DICMDBUF, u32 Address, u32 Length)
 					// setsockopt
 					case 0x40E:
 					{ 
-						SOCKET s            = (SOCKET)(media_buffer_in_32[2]);
+			int s               =    (int)(media_buffer_in_32[2]);
             int level           =    (int)(media_buffer_in_32[3]);
             int optname         =    (int)(media_buffer_in_32[4]);
             const char* optval  =  (char*)(network_command_buffer + media_buffer_in_32[5] - NetworkCommandAddress );
@@ -1293,7 +1284,7 @@ u32 ExecuteCommand(u32* DICMDBUF, u32 Address, u32 Length)
 
 						int ret = setsockopt( s, level, optname, optval, optlen );
 
-						int err = WSAGetLastError();
+						int err = 0;
 
 						NOTICE_LOG_FMT(DVDINTERFACE, "GC-AM: setsockopt( {:d}, {:04x}, {}, {:p}, {} ):{:d} ({})\n", s, level, optname, optval, optlen, ret, err);
 
@@ -1365,8 +1356,8 @@ u32 ExecuteCommand(u32* DICMDBUF, u32 Address, u32 Length)
 					case 0x606: // Setup link?
 					{
             struct sockaddr_in addra, addrb;
-            addra.sin_addr.S_un.S_addr = media_buffer_in_32[4];
-            addrb.sin_addr.S_un.S_addr = media_buffer_in_32[5];
+            addrb.sin_addr.s_addr = media_buffer_in_32[4];
+            addrb.sin_addr.s_addr = media_buffer_in_32[5];
 
             NOTICE_LOG_FMT(DVDINTERFACE, "GC-AM: 0x606:");
             NOTICE_LOG_FMT(DVDINTERFACE, "GC-AM:  Size: ({}) ",   media_buffer_in_16[2] );                 // size
