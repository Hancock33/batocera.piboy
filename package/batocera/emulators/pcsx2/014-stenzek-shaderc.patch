diff --git a/cmake/FindShaderc.cmake b/cmake/FindShaderc.cmake
index 760184aa0..a8862100d 100644
--- a/cmake/FindShaderc.cmake
+++ b/cmake/FindShaderc.cmake
@@ -11,7 +11,7 @@ find_path(
 
 find_library(
     SHADERC_LIBRARY
-    NAMES shaderc_shared.1 shaderc_shared
+    NAMES shaderc_shared.1 shaderc_ds
     PATHS ${ADDITIONAL_LIBRARY_PATHS} ${SHADERC_PATH_LIB}
 )
 
@@ -20,8 +20,8 @@ find_package_handle_standard_args(Shaderc DEFAULT_MSG
                                   SHADERC_LIBRARY SHADERC_INCLUDE_DIR)
 
 if(SHADERC_FOUND)
-    add_library(Shaderc::shaderc_shared UNKNOWN IMPORTED)
-    set_target_properties(Shaderc::shaderc_shared PROPERTIES
+    add_library(Shaderc::shaderc_ds UNKNOWN IMPORTED)
+    set_target_properties(Shaderc::shaderc_ds PROPERTIES
         IMPORTED_LOCATION ${SHADERC_LIBRARY}
         INTERFACE_INCLUDE_DIRECTORIES ${SHADERC_INCLUDE_DIR}
         INTERFACE_COMPILE_DEFINITIONS "SHADERC_SHAREDLIB"
diff --git a/pcsx2/GS/Renderers/Vulkan/VKShaderCache.cpp b/pcsx2/GS/Renderers/Vulkan/VKShaderCache.cpp
index 6128a8177..d707dcdcd 100644
--- a/pcsx2/GS/Renderers/Vulkan/VKShaderCache.cpp
+++ b/pcsx2/GS/Renderers/Vulkan/VKShaderCache.cpp
@@ -142,7 +142,7 @@ bool dyn_shaderc::Open()
 	const std::string libname = DynamicLibrary::GetVersionedFilename("shaderc_shared");
 #else
 	// Use versioned, bundle post-processing adds it..
-	const std::string libname = DynamicLibrary::GetVersionedFilename("shaderc_shared", 1);
+	const std::string libname = DynamicLibrary::GetVersionedFilename("shaderc_ds");
 #endif
 	if (!s_library.Open(libname.c_str(), &error))
 	{
@@ -239,8 +239,8 @@ std::optional<VKShaderCache::SPIRVCodeVector> VKShaderCache::CompileShaderToSPV(
 	dyn_shaderc::shaderc_compile_options_set_generate_debug_info(options, debug,
 		debug && GSDeviceVK::GetInstance()->GetOptionalExtensions().vk_khr_shader_non_semantic_info);
 #else
-	if (debug)
-		dyn_shaderc::shaderc_compile_options_set_generate_debug_info(options);
+	dyn_shaderc::shaderc_compile_options_set_generate_debug_info(options, debug,
+		debug && GSDeviceVK::GetInstance()->GetOptionalExtensions().vk_khr_shader_non_semantic_info);
 #endif
 	dyn_shaderc::shaderc_compile_options_set_optimization_level(
 		options, debug ? shaderc_optimization_level_zero : shaderc_optimization_level_performance);
