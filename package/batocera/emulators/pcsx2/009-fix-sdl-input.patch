diff --git a/pcsx2/Input/SDLInputSource.cpp b/pcsx2/Input/SDLInputSource.cpp.new
index 9b7995fb12..0cebf805e4 100644
--- a/pcsx2/Input/SDLInputSource.cpp
+++ b/pcsx2/Input/SDLInputSource.cpp.new
@@ -785,24 +785,27 @@ bool SDLInputSource::OpenDevice(int index, bool is_gamecontroller)
 
 bool SDLInputSource::CloseDevice(int joystick_index)
 {
-	auto it = GetControllerDataForJoystickId(joystick_index);
-	if (it == m_controllers.end())
-		return false;
+    auto it = GetControllerDataForJoystickId(joystick_index);
+    if (it == m_controllers.end())
+        return false;
 
-	InputManager::OnInputDeviceDisconnected(
-		{{.source_type = InputSourceType::SDL, .source_index = static_cast<u32>(it->player_id)}},
-		fmt::format("SDL-{}", it->player_id));
+    // Properly initialize InputBindingKey
+    InputBindingKey key = {InputSourceType::SDL, static_cast<u32>(it->player_id)};
 
-	if (it->haptic)
-		SDL_HapticClose(it->haptic);
+    InputManager::OnInputDeviceDisconnected(
+        key,
+        fmt::format("SDL-{}", it->player_id));
 
-	if (it->game_controller)
-		SDL_GameControllerClose(it->game_controller);
-	else
-		SDL_JoystickClose(it->joystick);
+    if (it->haptic)
+        SDL_HapticClose(it->haptic);
 
-	m_controllers.erase(it);
-	return true;
+    if (it->game_controller)
+        SDL_GameControllerClose(it->game_controller);
+    else
+        SDL_JoystickClose(it->joystick);
+
+    m_controllers.erase(it);
+    return true;
 }
 
 static float NormalizeS16(s16 value)
