diff --git a/3rdparty/minimp3/minimp3.h b/3rdparty/minimp3/minimp3.h
index 796cbc1f8ed..619561fe314 100644
--- a/3rdparty/minimp3/minimp3.h
+++ b/3rdparty/minimp3/minimp3.h
@@ -84,6 +84,10 @@ int mp3dec_decode_frame(mp3dec_t *dec, const uint8_t *mp3, int mp3_bytes, mp3d_s
 #define MINIMP3_MIN(a, b)           ((a) > (b) ? (b) : (a))
 #define MINIMP3_MAX(a, b)           ((a) < (b) ? (b) : (a))
 
+#ifndef HAVE_SSE
+#define HAVE_SSE 0
+#endif
+
 #if !defined(MINIMP3_NO_SIMD)
 
 #if !defined(MINIMP3_ONLY_SIMD) && (defined(_M_X64) || defined(__x86_64__) || defined(__aarch64__) || defined(_M_ARM64))
@@ -96,6 +100,9 @@ int mp3dec_decode_frame(mp3dec_t *dec, const uint8_t *mp3, int mp3_bytes, mp3d_s
 #include <intrin.h>
 #endif /* defined(_MSC_VER) */
 #include <immintrin.h>
+#ifdef HAVE_SSE
+#undef HAVE_SSE
+#endif
 #define HAVE_SSE 1
 #define HAVE_SIMD 1
 #define VSTORE _mm_storeu_ps
@@ -889,6 +896,7 @@ static void L3_midside_stereo(float *left, int n)
         VSTORE(right + i, VSUB(vl, vr));
     }
 #endif /* HAVE_SIMD */
+    i = (n >> 2) << 2;
     for (; i < n; i++)
     {
         float a = left[i];
diff --git a/makefile b/makefile
index 8deb9cc19d6..b65707ee12a 100644
--- a/makefile
+++ b/makefile
@@ -32,6 +32,7 @@
 # SDL2_MULTIAPI = 1
 # NO_USE_MIDI = 1
 # NO_USE_PORTAUDIO = 1
+# NO_USE_BGFX_KHRONOS = 1
 # NO_USE_PULSEAUDIO = 1
 # USE_TAPTUN = 1
 # USE_PCAP = 1
@@ -85,11 +86,13 @@
 # BUILDDIR = build
 # TARGETOS = windows
 # CROSS_BUILD = 1
+# CROSS_ARCH =
 # TOOLCHAIN =
 # OVERRIDE_CC = cc
 # OVERRIDE_CXX = c++
 # OVERRIDE_LD = ld
 # OVERRIDE_AR = ar
+# OVERRIDE_STRIP = strip
 
 # DEPRECATED = 0
 # LTO = 1
@@ -338,6 +341,10 @@ endif
 
 else
 CROSS_BUILD := 1
+ifdef CROSS_ARCH
+PLATFORM := $(CROSS_ARCH)
+UNAME := $(CROSS_ARCH)
+endif
 endif # TARGET_OS
 
 ifdef PTR64
@@ -593,6 +600,18 @@ ifndef CROSS_BUILD
 AR := $(OVERRIDE_AR)
 endif
 endif
+ifdef OVERRIDE_AR
+PARAMS += --AR='$(OVERRIDE_AR)'
+ifndef CROSS_BUILD
+AR := $(OVERRIDE_AR)
+endif
+endif
+ifdef OVERRIDE_STRIP
+PARAMS += --STRIP='$(OVERRIDE_STRIP)'
+ifndef CROSS_BUILD
+STRIP := $(OVERRIDE_STRIP)
+endif
+endif
 
 #-------------------------------------------------
 # sanity check the configuration
@@ -760,6 +779,10 @@ ifdef NO_USE_MIDI
 PARAMS += --NO_USE_MIDI='$(NO_USE_MIDI)'
 endif
 
+ifdef NO_USE_BGFX_KHRONOS
+PARAMS += --NO_USE_BGFX_KHRONOS='$(NO_USE_BGFX_KHRONOS)'
+endif
+
 ifdef NO_USE_PORTAUDIO
 PARAMS += --NO_USE_PORTAUDIO='$(NO_USE_PORTAUDIO)'
 endif
diff --git a/scripts/genie.lua b/scripts/genie.lua
index 72a163219e0..a532b6eabde 100644
--- a/scripts/genie.lua
+++ b/scripts/genie.lua
@@ -197,6 +197,16 @@ newoption {
 	description = "AR replacement",
 }
 
+newoption {
+	trigger = "AR",
+	description = "AR replacement",
+}
+
+newoption {
+	trigger = "STRIP",
+	description = "STRIP replacement",
+}
+
 newoption {
 	trigger = "TOOLCHAIN",
 	description = "Toolchain prefix"
@@ -397,6 +407,11 @@ newoption {
 	description = "Target machine platform (x86,arm,...)",
 }
 
+newoption {
+	trigger = "NO_USE_BGFX_KHRONOS",
+	description = "Skip including bgfx 3rdparty khronos headers (rely on system ones)",
+}
+
 newoption {
 	trigger = "DEBUG_DIR",
 	description = "Default directory for debugger.",
diff --git a/scripts/src/3rdparty.lua b/scripts/src/3rdparty.lua
index 5744e8d5a2f..b421cfc9c57 100644
--- a/scripts/src/3rdparty.lua
+++ b/scripts/src/3rdparty.lua
@@ -1346,8 +1346,13 @@ end
 		MAME_DIR .. "3rdparty/bx/include",
 		MAME_DIR .. "3rdparty/bimg/include",
 		MAME_DIR .. "3rdparty/bgfx/3rdparty/directx-headers/include/directx",
-		MAME_DIR .. "3rdparty/bgfx/3rdparty/khronos",
-	}
+ 	}
+ 
+	if not _OPTIONS["NO_USE_BGFX_KHRONOS"] then
+		includedirs {
+			MAME_DIR .. "3rdparty/bgfx/3rdparty/khronos",
+		}
+	end
 
 	configuration { "android-*"}
 		buildoptions {
diff --git a/scripts/src/osd/modules.lua b/scripts/src/osd/modules.lua
index 6cb47db91a6..6909ed310fe 100644
--- a/scripts/src/osd/modules.lua
+++ b/scripts/src/osd/modules.lua
@@ -277,11 +277,16 @@ function osdmodulesbuild()
 		MAME_DIR .. "3rdparty/bgfx/examples/common",
 		MAME_DIR .. "3rdparty/bgfx/include",
 		MAME_DIR .. "3rdparty/bgfx/3rdparty",
-		MAME_DIR .. "3rdparty/bgfx/3rdparty/khronos",
 		MAME_DIR .. "3rdparty/bx/include",
 		ext_includedir("rapidjson")
 	}
 
+	if not _OPTIONS["NO_USE_BGFX_KHRONOS"] then
+		includedirs {
+			MAME_DIR .. "3rdparty/bgfx/3rdparty/khronos",
+		}
+	end
+
 	if _OPTIONS["NO_USE_PORTAUDIO"]=="1" then
 		defines {
 			"NO_USE_PORTAUDIO",
diff --git a/scripts/toolchain.lua b/scripts/toolchain.lua
index 966d55d1dbb..e6a7e93dfff 100644
--- a/scripts/toolchain.lua
+++ b/scripts/toolchain.lua
@@ -146,7 +146,11 @@ function toolchain(_buildDir, _subDir)
 				premake.gcc.cc   = "@gcc -V 4.2"
 				premake.gcc.cxx  = "@g++-4.2"
 			end
-			premake.gcc.ar  = "ar"
+			if _OPTIONS["AR"]~=nil then
+				premake.gcc.ar = _OPTIONS["AR"]
+			else
+				premake.gcc.ar  = "ar"
+			end
 			location (_buildDir .. "projects/" .. _subDir .. "/".. _ACTION .. "-linux")
 		end
 
@@ -357,6 +361,18 @@ function toolchain(_buildDir, _subDir)
 	configuration { "linux-gcc", "x64", "Debug" }
 		targetdir (_buildDir .. "linux_gcc" .. "/bin/x64/Debug")
 
+	configuration { "linux-gcc", "arm64" }
+		objdir (_buildDir .. "linux_gcc" .. "/obj")
+		buildoptions {
+			"",
+		}
+
+	configuration { "linux-gcc", "arm64", "Release" }
+		targetdir (_buildDir .. "linux_gcc" .. "/bin/arm64/Release")
+
+	configuration { "linux-gcc", "arm64", "Debug" }
+		targetdir (_buildDir .. "linux_gcc" .. "/bin/arm64/Debug")
+
 	configuration { "linux-clang", "x32" }
 		objdir (_buildDir .. "linux_clang" .. "/obj")
 		buildoptions {
@@ -626,10 +642,17 @@ function strip()
 		}
 
 	configuration { "linux-*" }
+		if _OPTIONS['STRIP']~=nil then
+		postbuildcommands {
+			"$(SILENT) echo Stripping symbols.",
+			"$(SILENT) " .. _OPTIONS['STRIP'] .. " -s \"$(TARGET)\""
+		}
+	else
 		postbuildcommands {
 			"$(SILENT) echo Stripping symbols.",
 			"$(SILENT) strip -s \"$(TARGET)\""
 		}
+	end
 
 	configuration { "mingw*", "x64" }
 		postbuildcommands {
