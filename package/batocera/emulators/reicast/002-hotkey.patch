--- a/libswirl/input/gamepad_device.cpp	2020-08-13 19:11:21.192169956 +0200
+++ b/libswirl/input/gamepad_device.cpp	2020-08-13 19:18:28.840176031 +0200
@@ -23,6 +23,8 @@
 std::vector<std::shared_ptr<GamepadDevice>> GamepadDevice::_gamepads;
 cMutex GamepadDevice::_gamepads_mutex;
 
+static bool batocera_hotkey = false;
+
 bool GamepadDevice::gamepad_btn_input(u32 code, bool pressed)
 {
 	if (_input_detected != NULL && _detecting_button 
@@ -82,16 +84,22 @@
 		{
 		case EMU_BTN_ESCAPE:
             verify(virtualDreamcast != nullptr);
-            if (pressed)
-				virtualDreamcast->Stop([] { });
+		batocera_hotkey = pressed;
 			break;
 		case EMU_BTN_MENU:
+		if(batocera_hotkey == false) {
 			if (pressed && !settingsOpenning) {
 				settingsOpenning = true;
 				g_GUI->OpenSettings([this] {
 					settingsOpenning = false;
 				});
 			}
+		}
+		else
+		{
+			virtualDreamcast->Term();
+			die("death by escape key");
+		}
 			break;
 		case EMU_BTN_TRIGGER_LEFT:
 			lt[_maple_port] = pressed ? 255 : 0;
