diff --git a/Utilities/JITLLVM.cpp b/Utilities/JITLLVM.cpp
index 2b82d57d5..93d1505c4 100644
--- a/Utilities/JITLLVM.cpp
+++ b/Utilities/JITLLVM.cpp
@@ -658,7 +658,7 @@ jit_compiler::jit_compiler(const std::unordered_map<std::string, u64>& _link, co
 	std::string result;
 
 	auto null_mod = std::make_unique<llvm::Module> ("null_", *m_context);
-	null_mod->setTargetTriple(jit_compiler::triple1());
+	null_mod->setTargetTriple(llvm::Triple(jit_compiler::triple1()));
 
 	std::unique_ptr<llvm::RTDyldMemoryManager> mem;
 
@@ -672,7 +672,7 @@ jit_compiler::jit_compiler(const std::unordered_map<std::string, u64>& _link, co
 		else
 		{
 			mem = std::make_unique<MemoryManager2>(std::move(symbols_cement));
-			null_mod->setTargetTriple(jit_compiler::triple2());
+			null_mod->setTargetTriple(llvm::Triple(jit_compiler::triple2()));
 		}
 	}
 	else
diff --git a/rpcs3/Emu/Cell/PPUThread.cpp b/rpcs3/Emu/Cell/PPUThread.cpp
index 784cf2782..ce1dc69e3 100644
--- a/rpcs3/Emu/Cell/PPUThread.cpp
+++ b/rpcs3/Emu/Cell/PPUThread.cpp
@@ -5751,7 +5751,7 @@ static void ppu_initialize2(jit_compiler& jit, const ppu_module<lv2_obj>& module
 	std::unique_ptr<Module> _module = std::make_unique<Module>(obj_name, jit.get_context());
 
 	// Initialize target
-	_module->setTargetTriple(jit_compiler::triple1());
+	_module->setTargetTriple(Triple(jit_compiler::triple1()));
 	_module->setDataLayout(jit.get_engine().getTargetMachine()->createDataLayout());
 
 	// Initialize translator
diff --git a/rpcs3/Emu/Cell/SPULLVMRecompiler.cpp b/rpcs3/Emu/Cell/SPULLVMRecompiler.cpp
index b8f30de43..64a8b0a2e 100644
--- a/rpcs3/Emu/Cell/SPULLVMRecompiler.cpp
+++ b/rpcs3/Emu/Cell/SPULLVMRecompiler.cpp
@@ -1598,7 +1598,7 @@ public:
 
 		// Create LLVM module
 		std::unique_ptr<Module> _module = std::make_unique<Module>(m_hash + ".obj", m_context);
-		_module->setTargetTriple(jit_compiler::triple2());
+		_module->setTargetTriple(Triple(jit_compiler::triple2()));
 		_module->setDataLayout(m_jit.get_engine().getTargetMachine()->createDataLayout());
 		m_module = _module.get();
 
@@ -2873,7 +2873,7 @@ public:
 
 		// Create LLVM module
 		std::unique_ptr<Module> _module = std::make_unique<Module>("spu_interpreter.obj", m_context);
-		_module->setTargetTriple(jit_compiler::triple2());
+		_module->setTargetTriple(Triple(jit_compiler::triple2()));
 		_module->setDataLayout(m_jit.get_engine().getTargetMachine()->createDataLayout());
 		m_module = _module.get();
 
