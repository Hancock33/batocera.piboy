diff --git a/yabause/src/retro_arena/InputManager.cpp b/yabause/src/retro_arena/InputManager.cpp
index bd806736..3c0ba725 100644
--- a/yabause/src/retro_arena/InputManager.cpp
+++ b/yabause/src/retro_arena/InputManager.cpp
@@ -213,7 +213,7 @@ int mapKeys( const json & configs ){
 
   if( SDL_NumJoysticks() == 0 ){
 
-    PADLOG("No joy stic is found force to keyboard\n");
+    PADLOG("No joystick is found force to keyboard\n");
     padbits = PerPadAdd(&PORTDATA1);
     if( configs.find("player1") == configs.end() ){
       return setDefalutSettings(padbits);
@@ -460,22 +460,22 @@ int getPlayerJsonFromInputConfig( int joy, InputConfig * inputconfig, json & pla
   }
 
   Input result;
-  inputconfig->getInputByName("a", &result);
+  inputconfig->getInputByName("y", &result);
   player[guid]["a"] ={ { "type", input_types[result.type] },{ "id", result.id },{ "value", result.value } };
 
   inputconfig->getInputByName("b", &result);
   player[guid]["b"] = { { "type", input_types[result.type] },{ "id", result.id },{ "value", result.value } };
 
-  inputconfig->getInputByName("rightshoulder", &result);
+  inputconfig->getInputByName("a", &result);
   player[guid]["c"] = { { "type", input_types[result.type] },{ "id", result.id },{ "value", result.value } } ;
 
   inputconfig->getInputByName("x", &result);
   player[guid]["x"] = { { "type", input_types[result.type] },{ "id", result.id },{ "value", result.value } };
 
-  inputconfig->getInputByName("y", &result);
+  inputconfig->getInputByName("leftshoulder", &result);
   player[guid]["y"] = { { "type", input_types[result.type] },{ "id", result.id },{ "value", result.value } };
 
-  inputconfig->getInputByName("leftshoulder", &result);
+  inputconfig->getInputByName("rightshoulder", &result);
   player[guid]["z"] = { { "type", input_types[result.type] },{ "id", result.id },{ "value", result.value } };
 
   inputconfig->getInputByName("lefttrigger", &result);
@@ -1209,7 +1209,7 @@ void InputManager::writeDeviceConfig(InputConfig* config)
 std::string InputManager::getConfigPath()
 {
   std::string path = getenv("HOME");
-  path += "/.emulationstation/es_temporaryinput.cfg";
+  path = "/userdata/system/configs/yabasanshiro/input.cfg";
   return path;
 }
 
diff --git a/yabause/src/retro_arena/Preference.cpp b/yabause/src/retro_arena/Preference.cpp
index 1108c843..8101a95c 100644
--- a/yabause/src/retro_arena/Preference.cpp
+++ b/yabause/src/retro_arena/Preference.cpp
@@ -17,7 +17,7 @@ Preference::Preference( const std::string & filename ){
   }
 
   std::string home_dir = getenv("HOME");
-  home_dir += "/.yabasanshiro/";
+  home_dir = "/userdata/system/configs/yabasanshiro/";
 
   this->filename = home_dir + input_trace_filename + ".config";
 
diff --git a/yabause/src/retro_arena/main.cpp b/yabause/src/retro_arena/main.cpp
index 39029508..79552585 100644
--- a/yabause/src/retro_arena/main.cpp
+++ b/yabause/src/retro_arena/main.cpp
@@ -75,7 +75,7 @@ static char last_state_filename[256] = "\0";
 char s_savepath[256] ="\0";
 
 extern "C" {
-static char biospath[256] = "/home/pigaming/RetroPie/BIOS/saturn/bios.bin";
+static char biospath[256] = "/userdata/bios/saturn_bios.bin";
 static char cdpath[256] = ""; ///home/pigaming/RetroPie/roms/saturn/nights.cue";
 //static char cdpath[256] = "/home/pigaming/RetroPie/roms/saturn/gd.cue";
 //static char cdpath[256] = "/home/pigaming/RetroPie/roms/saturn/Virtua Fighter Kids (1996)(Sega)(JP).ccd";
@@ -154,6 +154,7 @@ static SDL_Window* wnd;
 static SDL_GLContext glc;
 int g_EnagleFPS = 0;
 int g_resolution_mode = 0;
+int g_rotate_mode = 0;
 int g_rotate_resolution_mode = 0;
 int g_keep_aspect_rate = 0;
 int g_scsp_sync = 1;
@@ -256,6 +257,7 @@ int yabauseinit()
 #else
   yinit.scsp_main_mode = 1;
 #endif
+  yinit.rbg_resolution_mode = pre.getInt( "Rotate screen" ,g_rotate_mode);
   yinit.rbg_resolution_mode = pre.getInt( "Rotate screen resolution" ,g_rotate_resolution_mode);
 #if defined(__JETSON__)
   yinit.rbg_use_compute_shader = pre.getBool( "Use compute shader" , true);
@@ -290,12 +292,12 @@ int main(int argc, char** argv)
 
   // Inisialize home directory
   std::string home_dir = getenv("HOME");
-  home_dir += "/.yabasanshiro/";
+  home_dir = "/userdata/system/configs/yabasanshiro/";
   struct stat st = {0};
   if (stat(home_dir.c_str(), &st) == -1) {
     mkdir(home_dir.c_str(), 0700);
   }  
-  std::string bckup_dir = home_dir + "backup.bin";
+  std::string bckup_dir = "/userdata/saves/saturn/backup.bin";
   strcpy( buppath, bckup_dir.c_str() );
   strcpy( s_savepath, home_dir.c_str() );
   g_keymap_filename = home_dir + "keymapv2.json";
@@ -331,6 +333,9 @@ int main(int argc, char** argv)
     }
 		else if(( x == "-r" || x == "--resolution_mode") && (i+1<all_args.size() ) ) {
       g_resolution_mode = std::stoi( all_args[i+1] );
+    }
+		else if(( x == "-rm" || x == "--rotate_mode") && (i+1<all_args.size() ) ) {
+      g_rotate_mode = std::stoi( all_args[i+1] );
     }
 		else if(( x == "-rr" || x == "--rotate_resolution_mode") && (i+1<all_args.size() ) ) {
       g_rotate_resolution_mode = std::stoi( all_args[i+1] );
@@ -354,6 +359,7 @@ int main(int argc, char** argv)
   // Init Preference
   Preference * p = new Preference(cdpath);
   p->getInt("Resolution",g_resolution_mode);
+  p->getInt("Rotate screen",g_rotate_mode);
   p->getInt("Rotate screen resolution",g_rotate_resolution_mode);
   p->getInt("Aspect rate",g_keep_aspect_rate);
   p->getBool("Rotate screen",false);
@@ -601,7 +607,7 @@ int main(int argc, char** argv)
         if( ret == 0 ){
           char pngname[256];
           snprintf(pngname,256,"%s/%s_%d.png", s_savepath, cdip->itemnum, e.user.code);
-          fs::copy(tmpfilename, pngname, fs::copy_options::overwrite_existing );
+           system((std::string("cp -f ") + tmpfilename + " " + pngname).c_str()); 
         }
         hideMenuScreen();
       }
