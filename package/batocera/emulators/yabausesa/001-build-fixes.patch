diff --git a/yabause/CMake/Packages/external_libchdr.cmake b/yabause/CMake/Packages/external_libchdr.cmake
index f6a8db60..25ed2463 100644
--- a/yabause/CMake/Packages/external_libchdr.cmake
+++ b/yabause/CMake/Packages/external_libchdr.cmake
@@ -33,6 +33,7 @@ ExternalProject_Add(
   GIT_TAG "074ff1614f2a685f2b5a95b0e788bff6297d5680"
   #PATCH_COMMAND  git apply "${CMAKE_SOURCE_DIR}/CMake/Packages/libchdr.patch"
   CMAKE_ARGS  -DCMAKE_INSTALL_PREFIX=${CMAKE_CURRENT_BINARY_DIR}/libchdr 
+              -DCMAKE_TOOLCHAIN_FILE=/home/lee/batocera.rpi4/host/share/buildroot/toolchainfile.cmake
               -DCMAKE_BUILD_TYPE:STRING=Release 
               -DCMAKE_CXX_FLAGS=${CMAKE_CXX_FLAGS}
               -DCMAKE_C_FLAGS=${CMAKE_C_FLAGS}
diff --git a/yabause/src/CMakeLists.txt b/yabause/src/CMakeLists.txt
index 0b0e6242..f418fbdc 100644
--- a/yabause/src/CMakeLists.txt
+++ b/yabause/src/CMakeLists.txt
@@ -980,20 +980,10 @@ if("${CMAKE_SYSTEM_PROCESSOR}" STREQUAL "armv7-a")
 endif()
 if("${CMAKE_SYSTEM_PROCESSOR}" STREQUAL "aarch64")
 		add_definitions(-DAARCH64)
-    set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -g -std=c99 -march=armv8-a")
-    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -g -march=armv8-a -std=c++17 ")
+    set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -w")
+    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -w")
 endif()
 
-# Warnings defined to know when we're breaking compilation with MSVC
-if (CMAKE_COMPILER_IS_GNUCC)
-	set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wdeclaration-after-statement")
-endif ()
-
-if (MSVC)
-	set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} /wd4018 /wd4244")
-	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /wd4244")
-endif ()
-
 # Turn string format security warnings into errors. Some Linux distros enable this by default and travis-ci, etc. needs a way to catch them
 option(YAB_FORCE_SECURE_STRINGS "Turns all string format warnings into errors." OFF)
 if (CMAKE_COMPILER_IS_GNUCC AND YAB_FORCE_SECURE_STRINGS)
@@ -1032,7 +1022,7 @@ endif(YAB_WANT_VULKAN)
 #-----------------------------------------------------------------------
 # libCHD
 include( ${CMAKE_SOURCE_DIR}/CMake/Packages/external_libchdr.cmake )
-include( ${CMAKE_SOURCE_DIR}/CMake/Packages/external_zlib.cmake )
+#include( ${CMAKE_SOURCE_DIR}/CMake/Packages/external_zlib.cmake )
 #include_directories(${zlib_INCLUDE_DIR})
 add_dependencies(yabause libchdr)
 #add_dependencies(yabause zlib)
diff --git a/yabause/src/nanovg/nanovg_osdcore.c b/yabause/src/nanovg/nanovg_osdcore.c
index 520c93e9..78e7d0c7 100644
--- a/yabause/src/nanovg/nanovg_osdcore.c
+++ b/yabause/src/nanovg/nanovg_osdcore.c
@@ -36,7 +36,6 @@ Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA
 
 #if defined(_OGLES3_)
 #include <GLES3/gl3.h>
-#include <GLES3/gl3ext.h>
 #else
 #include "ygl.h"
 #endif
diff --git a/yabause/src/retro_arena/CMakeLists.txt b/yabause/src/retro_arena/CMakeLists.txt
index d767aa81..f0a12d5b 100644
--- a/yabause/src/retro_arena/CMakeLists.txt
+++ b/yabause/src/retro_arena/CMakeLists.txt
@@ -22,7 +22,7 @@ add_subdirectory(pugixml)
 add_subdirectory(nanogui-sdl)
 
 #include( ../glfw/external_zlib.cmake )
-include( ${CMAKE_SOURCE_DIR}/CMake/Packages/external_libpng.cmake )
+#include( ${CMAKE_SOURCE_DIR}/CMake/Packages/external_libpng.cmake )
 
 #------------------------------------------------------------------------------
 # nlohmann/json
diff --git a/yabause/src/threads.h b/yabause/src/threads.h
index 45d3ef49..243539a3 100644
--- a/yabause/src/threads.h
+++ b/yabause/src/threads.h
@@ -115,6 +115,7 @@ void YabThreadUSleep( unsigned int stime );
 
 int YabCopyFile(const char * src, const char * dst);
 int YabMakeCleanDir( const char * dirname );
+#include <core.h>
 int YabNanosleep(u64 ns);
 
 ///////////////////////////////////////////////////////////////////////////
diff --git a/yabause/src/ygl.h b/yabause/src/ygl.h
index f674228d..bfa42b0f 100644
--- a/yabause/src/ygl.h
+++ b/yabause/src/ygl.h
@@ -50,7 +50,6 @@ extern "C" {
     #include <glsm/glsm.h>
 #elif defined(__ANDROID__)
     #include <GLES3/gl31.h>
-    #include <GLES3/gl3ext.h>
     #include <EGL/egl.h>
 
 
