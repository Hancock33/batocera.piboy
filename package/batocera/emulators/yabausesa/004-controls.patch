diff --git a/yabause/src/retro_arena/InputManager.cpp b/yabause/src/retro_arena/InputManager.cpp
index bd806736..3c0ba725 100644
--- a/yabause/src/retro_arena/InputManager.cpp
+++ b/yabause/src/retro_arena/InputManager.cpp
@@ -213,7 +213,7 @@ int mapKeys( const json & configs ){
 
   if( SDL_NumJoysticks() == 0 ){
 
-    PADLOG("No joy stic is found force to keyboard\n");
+    PADLOG("No joystick is found force to keyboard\n");
     padbits = PerPadAdd(&PORTDATA1);
     if( configs.find("player1") == configs.end() ){
       return setDefalutSettings(padbits);
@@ -460,22 +460,22 @@ int getPlayerJsonFromInputConfig( int joy, InputConfig * inputconfig, json & pla
   }
 
   Input result;
-  inputconfig->getInputByName("a", &result);
+  inputconfig->getInputByName("y", &result);
   player[guid]["a"] ={ { "type", input_types[result.type] },{ "id", result.id },{ "value", result.value } };
 
   inputconfig->getInputByName("b", &result);
   player[guid]["b"] = { { "type", input_types[result.type] },{ "id", result.id },{ "value", result.value } };
 
-  inputconfig->getInputByName("rightshoulder", &result);
+  inputconfig->getInputByName("a", &result);
   player[guid]["c"] = { { "type", input_types[result.type] },{ "id", result.id },{ "value", result.value } } ;
 
   inputconfig->getInputByName("x", &result);
   player[guid]["x"] = { { "type", input_types[result.type] },{ "id", result.id },{ "value", result.value } };
 
-  inputconfig->getInputByName("y", &result);
+  inputconfig->getInputByName("leftshoulder", &result);
   player[guid]["y"] = { { "type", input_types[result.type] },{ "id", result.id },{ "value", result.value } };
 
-  inputconfig->getInputByName("leftshoulder", &result);
+  inputconfig->getInputByName("rightshoulder", &result);
   player[guid]["z"] = { { "type", input_types[result.type] },{ "id", result.id },{ "value", result.value } };
 
   inputconfig->getInputByName("lefttrigger", &result);
@@ -1209,7 +1209,7 @@ void InputManager::writeDeviceConfig(InputConfig* config)
 std::string InputManager::getConfigPath()
 {
   std::string path = getenv("HOME");
-  path += "/.emulationstation/es_temporaryinput.cfg";
+  path = "/userdata/system/configs/yabasanshiro/input.cfg";
   return path;
 }
