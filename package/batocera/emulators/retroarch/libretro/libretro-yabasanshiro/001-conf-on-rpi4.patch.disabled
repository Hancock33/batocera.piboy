diff --git a/yabause/src/retro_arena/main.cpp b/yabause/src/retro_arena/main.cpp
index b37528b..397aae0 100644
--- a/yabause/src/retro_arena/main.cpp
+++ b/yabause/src/retro_arena/main.cpp
@@ -270,6 +270,10 @@ int yabauseinit()
   yinit.rbg_use_compute_shader = pre.getBool( "Use compute shader" , false);
 #endif
 
+  yinit.use_cpu_affinity = 1;
+
+  yinit.use_sh2_cache = 1;
+
   res = YabauseInit(&yinit);
   if( res == -1) {
     return -1;
diff --git a/yabause/src/sh2_dynarec_devmiyax/dynalib_arm64.s b/yabause/src/sh2_dynarec_devmiyax/dynalib_arm64.s
index 81518d5..f34e416 100644
--- a/yabause/src/sh2_dynarec_devmiyax/dynalib_arm64.s
+++ b/yabause/src/sh2_dynarec_devmiyax/dynalib_arm64.s
@@ -1534,7 +1534,7 @@ opdesc LDC_SR_INC,	(12*4),0xff,0,0xff,0xff,0xff
 opfunc LDC_SR_INC
 mov     w1, #0  // m
 ldr     w5, [x19, x1] // w5 = R[m] 
-mov     w4, w1
+mov     w22, w1
 mov     w0, w5
 CALL_GETMEM_LONG
 bic     w0, w0, #12
@@ -1542,7 +1542,7 @@ lsl     w0, w0, #22
 lsr     w0, w0, #22  // SR = w0 & 0w000003f3;
 STR_SR  w0
 add     w5, w5, #4
-str     w5, [x19, x4]
+str     w5, [x19, x22]
 
 
 opdesc LDCGBR,	12,0xff,0,0xff,0xff,0xff
@@ -1657,25 +1657,25 @@ str     w2, [x19]
 
 opdesc MOVWI,	40,0xff,0,0xff,4,0xff
 opfunc MOVWI
-mov w4, #0 // n
+mov w22, #0 // n
 mov w2, #0 // disp
 mov w1, w20 // GET PC
 add w1, w1, w2, lsl #1 // PC += (disp << 1)
 add w0, w1, #4  // PC += 4
 CALL_GETMEM_WORD
 sxth w0,w0
-str w0, [x19, x4] // R[n] = readval
+str w0, [x19, x22] // R[n] = readval
 
 opdesc MOVLI,  36,0xff,0,0xff,4,0xff
 opfunc MOVLI
-mov w4, #0 // n
+mov w22, #0 // n
 mov w2, #0 // disp
 mov w1, w20 // GET PC
 add w1, w1, #4
 bic w1, w1, #3
 add w0, w1, w2, lsl #2 // read addr
 CALL_GETMEM_LONG
-str w0, [x19, x4] // R[n] = readval
+str w0, [x19, x22] // R[n] = readval
 
 
 opdesc MOVBL4, (8*4),0,0xff,4,0xff,0xff
@@ -2125,11 +2125,11 @@ mov w0, #0
 mov w1, #0
 mov w6, w0 
 ldr w0, [x19, x1]
-mov w4, w1
+mov w22, w1
 CALL_GETMEM_LONG
-ldr w3, [x19, x4]
+ldr w3, [x19, x22]
 add w3, w3, #4
-str w3, [x19, x4]
+str w3, [x19, x22]
 mov w4, #0
 mov w5, w0 
 ldr w0, [x19, x6]
diff --git a/yabause/src/yglshaderes.c b/yabause/src/yglshaderes.c
index 68308fe..2c81109 100644
--- a/yabause/src/yglshaderes.c
+++ b/yabause/src/yglshaderes.c
@@ -297,7 +297,7 @@ const GLchar Yglprg_normal_cram_f[] =
 "{\n"
 "  vec4 txindex = texelFetch( s_texture, ivec2(int(v_texcoord.x),int(v_texcoord.y)) ,0 );\n"
 "  if(txindex.a == 0.0) { discard; }\n"
-"  vec4 txcol = texelFetch( s_color,  ivec2( ( int(txindex.g*65280.0) | int(txindex.r*255.0)) ,0 )  , 0 );\n"
+"  vec4 txcol = texelFetch( s_color,  ivec2( ( int(round(txindex.g*65280.0)) | int(round(txindex.r*255.0))) ,0 )  , 0 );\n"
 "  fragColor = clamp(txcol+u_color_offset,vec4(0.0),vec4(1.0));\n"
 "  fragColor.a = txindex.a;\n"
 "}\n";
@@ -319,7 +319,7 @@ const GLchar Yglprg_normal_cram_special_priority_f[] =
 "{\n"
 "  vec4 txindex = texelFetch( s_texture, ivec2(int(v_texcoord.x),int(v_texcoord.y)) ,0 );\n"
 "  if(txindex.a == 0.0) { discard; }\n"
-"  vec4 txcol = texelFetch( s_color,  ivec2( ( int(txindex.g*65280.0) | int(txindex.r*255.0)) ,0 )  , 0 );\n"
+"  vec4 txcol = texelFetch( s_color,  ivec2( ( int(round(txindex.g*65280.0)) | int(round(txindex.r*255.0))) ,0 )  , 0 );\n"
 "  fragColor = clamp(txcol+u_color_offset,vec4(0.0),vec4(1.0));\n"
 "  fragColor.a = txindex.a;\n"
 "  gl_FragDepth = ((txindex.b*255.0/10.0) +1.0)/2.0 ; \n"
@@ -408,7 +408,7 @@ const GLchar Yglprg_normal_cram_special_priority_colf_f[] =
 "{\n"
 "  vec4 txindex = texelFetch( s_texture, ivec2(int(v_texcoord.x),int(v_texcoord.y)) ,0 );\n"
 "  if(txindex.a == 0.0) { discard; }\n"
-"  vec4 txcol = texelFetch( s_color,  ivec2( ( int(txindex.g*65280.0) | int(txindex.r*255.0)) ,0 )  , 0 );\n"
+"  vec4 txcol = texelFetch( s_color,  ivec2( ( int(round(txindex.g*65280.0)) | int(round(txindex.r*255.0))) ,0 )  , 0 );\n"
 "  vec4 color_offset = texelFetch( s_linetexture, ivec2( int(v_texcoord.q), 0), 0 ); \n"
 "  fragColor.r = txcol.r + (color_offset.r-0.5)*2.0;\n"
 "  fragColor.g = txcol.g + (color_offset.g-0.5)*2.0;\n"
@@ -467,7 +467,7 @@ const GLchar Yglprg_normal_cram_addcol_f[] =
 "{\n"
 "  vec4 txindex = texelFetch( s_texture, ivec2(int(v_texcoord.x),int(v_texcoord.y)) ,0 );\n"
 "  if(txindex.a == 0.0) { discard; }\n"
-"  vec4 txcol = texelFetch( s_color,  ivec2( ( int(txindex.g*65280.0) | int(txindex.r*255.0)) ,0 )  , 0 );\n"
+"  vec4 txcol = texelFetch( s_color,  ivec2( ( int(round(txindex.g*65280.0)) | int(round(txindex.r*255.0))) ,0 )  , 0 );\n"
 "  fragColor = txcol+u_color_offset;\n"
 "  if( txindex.a > 0.5) { fragColor.a = 1.0;} else {fragColor.a = 0.0;}\n"
 "}\n";
