diff --git a/CMakeLists.txt b/CMakeLists.txt
index 5d2c174c..7778b7ac 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -17,6 +17,11 @@ option(USE_HOST_LIBZIP "Use host libzip" ON)
 option(USE_OPENMP "Use OpenMP if available" ON)
 option(USE_VULKAN "Build with Vulkan support" ON)
 option(LIBRETRO "Build libretro core" OFF)
+option(USE_MALI "Use mali" OFF)
+option(RG552 "Optimize for RG552" OFF)
+option(RPI4 "Optimize for RPi4" OFF)
+option(RK3326 "Optimize for RK3326" OFF)
+option(S922X "Optimize for S922X" OFF)
 
 set(CMAKE_MODULE_PATH "${CMAKE_CURRENT_SOURCE_DIR}/shell/cmake")
 
@@ -92,6 +97,19 @@ elseif(LIBRETRO)
     set(CMAKE_SHARED_LIBRARY_PREFIX "")
     set(CMAKE_POSITION_INDEPENDENT_CODE ON)
     target_compile_definitions(${PROJECT_NAME} PRIVATE LIBRETRO)
+	if (RG552)
+	    set(CMAKE_C_FLAGS_RELEASE "${CMAKE_C_FLAGS_RELEASE} -O3 -mcpu=cortex-a72 -mtune=cortex-a72.cortex-a53")
+	    set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -O3 -mcpu=cortex-a72 -mtune=cortex-a72.cortex-a53")
+    elseif(RK3326)
+	    set(CMAKE_C_FLAGS_RELEASE "${CMAKE_C_FLAGS_RELEASE} -O3 -mcpu=cortex-a35 -mtune=cortex-a35")
+	    set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -O3 -mcpu=cortex-a35 -mtune=cortex-a35")
+    elseif(RPI4)
+	    set(CMAKE_C_FLAGS_RELEASE "${CMAKE_C_FLAGS_RELEASE} -O3 -mcpu=cortex-a72 -mtune=cortex-a72")
+	    set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -O3 -mcpu=cortex-a72 -mtune=cortex-a72")
+    elseif(S922X)
+	    set(CMAKE_C_FLAGS_RELEASE "${CMAKE_C_FLAGS_RELEASE} -O3 -mcpu=cortex-a73 -mtune=cortex-a73.cortex-a53")
+	    set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -O3 -mcpu=cortex-a73 -mtune=cortex-a73.cortex-a53")
+    endif()
     if(ANDROID OR USE_GLES)
 		target_compile_definitions(${PROJECT_NAME} PRIVATE GLES GLES3 HAVE_OPENGLES HAVE_OPENGLES3)
 		target_link_libraries(${PROJECT_NAME} PRIVATE "-lGLESv3")
@@ -121,6 +139,10 @@ else()
     add_executable(${PROJECT_NAME} MACOSX_BUNDLE core/emulator.cpp)
 endif()
 
+if(USE_MALI)
+  target_link_libraries(${PROJECT_NAME} PRIVATE "-lmali")
+endif()
+
 target_compile_features(${PROJECT_NAME} PRIVATE c_std_11 cxx_std_11)
 set_target_properties(${PROJECT_NAME} PROPERTIES
 	CXX_EXTENSIONS OFF
