diff --git a/configuration.c b/configuration.c
index 814d036dd4..b20bf21429 100644
--- a/configuration.c
+++ b/configuration.c
@@ -4154,6 +4154,7 @@ bool config_load_remap(const char *directory_input_remapping,
    char content_dir_name[PATH_MAX_LENGTH];
    /* final path for core-specific configuration (prefix+suffix) */
    char core_path[PATH_MAX_LENGTH];
+   char common_path[PATH_MAX_LENGTH];
    /* final path for game-specific configuration (prefix+suffix) */
    char game_path[PATH_MAX_LENGTH];
    /* final path for content-dir-specific configuration (prefix+suffix) */
@@ -4170,6 +4171,7 @@ bool config_load_remap(const char *directory_input_remapping,
 
    content_dir_name[0] = '\0';
    core_path[0]        = '\0';
+   common_path[0]        = '\0';
    game_path[0]        = '\0';
    content_path[0]     = '\0';
 
@@ -4206,6 +4208,12 @@ bool config_load_remap(const char *directory_input_remapping,
          FILE_PATH_REMAP_EXTENSION,
          sizeof(core_path));
 
+   fill_pathname_join_special_ext(common_path,
+         directory_input_remapping, "common",
+         "common",
+         FILE_PATH_REMAP_EXTENSION,
+         sizeof(common_path));
+
    input_remapping_set_defaults(false);
 
    /* If a game remap file exists, load it. */
@@ -4254,6 +4262,19 @@ bool config_load_remap(const char *directory_input_remapping,
       }
    }
 
+   /* common file */
+   if ((new_conf = config_file_new_from_path_to_string(common_path)))
+   {
+      bool ret = input_remapping_load_file(new_conf, common_path);
+      config_file_free(new_conf);
+      new_conf = NULL;
+      RARCH_LOG("[Remaps]: common remap found at \"%s\".\n", common_path);
+      if (ret)
+      {
+         goto success;
+      }
+   }
+
    if (new_conf)
       config_file_free(new_conf);
    new_conf = NULL;
