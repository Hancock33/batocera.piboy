diff --git a/src/core/system.cpp b/src/core/system.cpp
index b45d84715..2602f7884 100644
--- a/src/core/system.cpp
+++ b/src/core/system.cpp
@@ -4875,12 +4875,12 @@ void System::WarnAboutUnsafeSettings()
     if (g_settings.cpu_execution_mode == CPUExecutionMode::CachedInterpreter)
       append(TRANSLATE_SV("System", "Cached interpreter is being used, this may be incompatible with some games."));
 
-    // Always display TC warning.
+    /* Always display TC warning.
     if (g_settings.gpu_texture_cache)
     {
       append(TRANSLATE_SV(
         "System", "Texture cache is enabled. This feature is experimental, some games may not render correctly."));
-    }
+    }*/
 
     // Potential performance issues.
     if (g_settings.cpu_fastmem_mode != Settings::DEFAULT_CPU_FASTMEM_MODE)
diff --git a/src/duckstation-mini/mini_host.cpp b/src/duckstation-mini/mini_host.cpp
index def940f43..e7859bb5c 100644
--- a/src/duckstation-mini/mini_host.cpp
+++ b/src/duckstation-mini/mini_host.cpp
@@ -160,7 +160,7 @@ bool MiniHost::EarlyProcessStartup()
     return false;
   }
 
-#if !__has_include("scmversion/tag.h")
+#if __has_include("scmversion/tag.h")
   //
   // To those distributing their own builds or packages of DuckStation, and seeing this message:
   //
@@ -1004,7 +1004,7 @@ void MiniHost::CPUThreadEntryPoint()
   // start the fullscreen UI and get it going
   if (GPUThread::StartFullscreenUI(s_state.start_fullscreen_ui_fullscreen, &error))
   {
-    WarnAboutInterface();
+    //WarnAboutInterface();
 
     // kick a game list refresh if we're not in batch mode
     if (!s_state.batch_mode)
diff --git a/src/duckstation-qt/qthost.cpp b/src/duckstation-qt/qthost.cpp
index 0eb7c9e35..1dd6562c7 100644
--- a/src/duckstation-qt/qthost.cpp
+++ b/src/duckstation-qt/qthost.cpp
@@ -3409,7 +3409,7 @@ int main(int argc, char* argv[])
   QtHost::UpdateApplicationTheme();
 
   // Build warning.
-  AutoUpdaterWindow::warnAboutUnofficialBuild();
+  // AutoUpdaterWindow::warnAboutUnofficialBuild();
 
   // Start logging early.
   LogWindow::updateSettings();
