diff --git a/src/core/settings.cpp b/src/core/settings.cpp
index 420cb5f07..270fdd870 100644
--- a/src/core/settings.cpp
+++ b/src/core/settings.cpp
@@ -2133,22 +2133,22 @@ static std::string LoadPathFromSettings(SettingsInterface& si, const std::string
 
 void EmuFolders::LoadConfig(SettingsInterface& si)
 {
-  Bios = LoadPathFromSettings(si, DataRoot, "BIOS", "SearchDirectory", "bios");
-  Cache = LoadPathFromSettings(si, DataRoot, "Folders", "Cache", "cache");
-  Cheats = LoadPathFromSettings(si, DataRoot, "Folders", "Cheats", "cheats");
-  Covers = LoadPathFromSettings(si, DataRoot, "Folders", "Covers", "covers");
-  GameIcons = LoadPathFromSettings(si, DataRoot, "Folders", "GameIcons", "gameicons");
-  GameSettings = LoadPathFromSettings(si, DataRoot, "Folders", "GameSettings", "gamesettings");
-  InputProfiles = LoadPathFromSettings(si, DataRoot, "Folders", "InputProfiles", "inputprofiles");
-  MemoryCards = LoadPathFromSettings(si, DataRoot, "MemoryCards", "Directory", "memcards");
+  Bios = "/userdata/bios";
+  Cache = "/userdata/system/cache/psx";
+  Cheats = "/userdata/cheats/psx";
+  Covers = "/userdata/system/configs/duckstation/covers";
+  GameIcons = "/userdata/system/configs/duckstation/gameicons";
+  GameSettings = "/userdata/system/configs/duckstation/gamesettings";
+  InputProfiles = "/userdata/system/configs/duckstation/inputprofiles";
+  MemoryCards = "/userdata/saves/psx";
   Patches = LoadPathFromSettings(si, DataRoot, "Folders", "Patches", "patches");
-  SaveStates = LoadPathFromSettings(si, DataRoot, "Folders", "SaveStates", "savestates");
-  Screenshots = LoadPathFromSettings(si, DataRoot, "Folders", "Screenshots", "screenshots");
-  Shaders = LoadPathFromSettings(si, DataRoot, "Folders", "Shaders", "shaders");
-  Textures = LoadPathFromSettings(si, DataRoot, "Folders", "Textures", "textures");
+  SaveStates = "/userdata/saves/psx";
+  Screenshots = "/userdata/screenshots";
+  Shaders = "/usr/bin/duckstation/resources/shaders";
+  Textures = "/userdata/system/configs/duckstation/textures";
   UserResources = LoadPathFromSettings(si, DataRoot, "Folders", "UserResources", "resources");
   Videos = LoadPathFromSettings(si, DataRoot, "Folders", "Videos", "videos");
-
+ 
   DEV_LOG("BIOS Directory: {}", Bios);
   DEV_LOG("Cache Directory: {}", Cache);
   DEV_LOG("Cheats Directory: {}", Cheats);
@@ -2170,19 +2170,19 @@ void EmuFolders::LoadConfig(SettingsInterface& si)
 void EmuFolders::Save(SettingsInterface& si)
 {
   // convert back to relative
-  si.SetStringValue("BIOS", "SearchDirectory", Path::MakeRelative(Bios, DataRoot).c_str());
-  si.SetStringValue("Folders", "Cache", Path::MakeRelative(Cache, DataRoot).c_str());
-  si.SetStringValue("Folders", "Cheats", Path::MakeRelative(Cheats, DataRoot).c_str());
-  si.SetStringValue("Folders", "Covers", Path::MakeRelative(Covers, DataRoot).c_str());
-  si.SetStringValue("Folders", "GameIcons", Path::MakeRelative(GameIcons, DataRoot).c_str());
-  si.SetStringValue("Folders", "GameSettings", Path::MakeRelative(GameSettings, DataRoot).c_str());
-  si.SetStringValue("Folders", "InputProfiles", Path::MakeRelative(InputProfiles, DataRoot).c_str());
-  si.SetStringValue("MemoryCards", "Directory", Path::MakeRelative(MemoryCards, DataRoot).c_str());
+  si.SetStringValue("BIOS", "SearchDirectory", Bios.c_str());
+  si.SetStringValue("Folders", "Cache", Cache.c_str());
+  si.SetStringValue("Folders", "Cheats", Cheats.c_str());
+  si.SetStringValue("Folders", "Covers", Covers.c_str());
+  si.SetStringValue("Folders", "GameIcons", GameIcons.c_str());
+  si.SetStringValue("Folders", "GameSettings", GameSettings.c_str());
+  si.SetStringValue("Folders", "InputProfiles", InputProfiles.c_str());
+  si.SetStringValue("MemoryCards", "Directory", MemoryCards.c_str());
   si.SetStringValue("Folders", "Patches", Path::MakeRelative(Patches, DataRoot).c_str());
-  si.SetStringValue("Folders", "SaveStates", Path::MakeRelative(SaveStates, DataRoot).c_str());
-  si.SetStringValue("Folders", "Screenshots", Path::MakeRelative(Screenshots, DataRoot).c_str());
-  si.SetStringValue("Folders", "Shaders", Path::MakeRelative(Shaders, DataRoot).c_str());
-  si.SetStringValue("Folders", "Textures", Path::MakeRelative(Textures, DataRoot).c_str());
+  si.SetStringValue("Folders", "SaveStates", SaveStates.c_str());
+  si.SetStringValue("Folders", "Screenshots", Screenshots.c_str());
+  si.SetStringValue("Folders", "Shaders", Shaders.c_str());
+  si.SetStringValue("Folders", "Textures", Textures.c_str());
   si.SetStringValue("Folders", "UserResources", Path::MakeRelative(UserResources, DataRoot).c_str());
   si.SetStringValue("Folders", "Videos", Path::MakeRelative(Videos, DataRoot).c_str());
 }
