diff --git a/src/lindbergh/evdevinput.c b/src/lindbergh/evdevinput.c
index 08e4364..f2c6777 100644
--- a/src/lindbergh/evdevinput.c
+++ b/src/lindbergh/evdevinput.c
@@ -920,6 +920,9 @@ static ControllerStatus listControllers(Controllers *controllers)
                     strcat(controllerInput->inputName, "_");
                     strcat(controllerInput->inputName, codename(EV_KEY, code));
                     normaliseName(controllerInput->inputName);
+		    if(snprintf(controllerInput->inputTechName, SIZE, "%s:KEY:%i", controllers->controller[i].path, code) >= 1024) {
+		      // hum ok, truncated value
+		    }
                 }
             }
         }
@@ -941,6 +944,9 @@ static ControllerStatus listControllers(Controllers *controllers)
                     strcat(controllerInput->inputName, "_");
                     strcat(controllerInput->inputName, codename(EV_ABS, code));
                     normaliseName(controllerInput->inputName);
+		    if(snprintf(controllerInput->inputTechName, SIZE, "%s:ABS:%i", controllers->controller[i].path, code) >= 1024) {
+		      // hum ok, truncated value
+		    }
 
                     ControllerInput *minControllerInput =
                         &controllers->controller[i].inputs[controllers->controller[i].inputCount++];
@@ -949,6 +955,9 @@ static ControllerStatus listControllers(Controllers *controllers)
                     minControllerInput->specialFunction = ANALOGUE_TO_DIGITAL_MIN;
                     strcpy(minControllerInput->inputName, controllerInput->inputName);
                     strcat(minControllerInput->inputName, "_MIN");
+		    if(snprintf(minControllerInput->inputTechName, SIZE, "%s:ABS:%i:MIN", controllers->controller[i].path, code) >= 1024) {
+		      // hum ok, truncated value
+		    }
 
                     ControllerInput *maxControllerInput =
                         &controllers->controller[i].inputs[controllers->controller[i].inputCount++];
@@ -957,6 +966,9 @@ static ControllerStatus listControllers(Controllers *controllers)
                     maxControllerInput->specialFunction = ANALOGUE_TO_DIGITAL_MAX;
                     strcpy(maxControllerInput->inputName, controllerInput->inputName);
                     strcat(maxControllerInput->inputName, "_MAX");
+		    if(snprintf(maxControllerInput->inputTechName, SIZE, "%s:ABS:%i:MAX", controllers->controller[i].path, code) >= 1024) {
+		      // hum ok, truncated value
+		    }
 
                     struct input_absinfo absoluteFeatures;
                     ioctl(controller, EVIOCGABS(code), &absoluteFeatures);
@@ -1243,8 +1255,13 @@ ControllerStatus startControllerThreads(Controllers *controllers)
         for (int j = 0; j < controllers->controller[i].inputCount; j++)
         {
             char *mapping = getMapping(controllers->controller[i].inputs[j].inputName);
-            if (mapping == NULL)
+            if (mapping == NULL) {
+	      // give a 2nd chance with a technial mapping
+	      mapping = getMapping(controllers->controller[i].inputs[j].inputTechName);
+	      if (mapping == NULL) {
                 continue;
+	      }
+	    }
 
             ArcadeInput input = {0};
             ControllerStatus status = getArcadeInputByName(mapping, &input);
diff --git a/src/lindbergh/evdevinput.h b/src/lindbergh/evdevinput.h
index 5cb5990..efd34de 100644
--- a/src/lindbergh/evdevinput.h
+++ b/src/lindbergh/evdevinput.h
@@ -49,6 +49,7 @@ typedef enum {
 typedef struct
 {
     char inputName[SIZE];
+    char inputTechName[SIZE];
     int evType;
     int evCode;
     SpecialFunction specialFunction;
