diff --git a/kernel/Kbuild b/kernel/Kbuild
index 85aa267c64..214eac46a6 100644
--- a/kernel/Kbuild
+++ b/kernel/Kbuild
@@ -61,20 +61,20 @@ $(foreach _module, $(NV_KERNEL_MODULES), \
 # $(EXTRA_CFLAGS) to ccflags-y for compatibility.
 #
 
-EXTRA_CFLAGS += -I$(src)/common/inc
-EXTRA_CFLAGS += -I$(src)
-EXTRA_CFLAGS += -Wall -MD $(DEFINES) $(INCLUDES) -Wsign-compare -Wno-cast-qual -Wno-error
-EXTRA_CFLAGS += -D__KERNEL__ -DMODULE -DNVRM -DNV_VERSION_STRING=\"390.157\" -Wno-unused-function -Wuninitialized -fno-strict-aliasing -mno-red-zone -mcmodel=kernel -DNV_UVM_ENABLE -Wno-sign-compare -Wno-format-extra-args
-EXTRA_CFLAGS += $(call cc-option,-Werror=undef,)
-EXTRA_CFLAGS += -DNV_SPECTRE_V2=$(NV_SPECTRE_V2)
-EXTRA_CFLAGS += -DNV_KERNEL_INTERFACE_LAYER
+ccflags-y += -I$(src)/common/inc
+ccflags-y += -I$(src)
+ccflags-y += -Wall -MD $(DEFINES) $(INCLUDES) -Wsign-compare -Wno-cast-qual -Wno-error
+ccflags-y += -D__KERNEL__ -DMODULE -DNVRM -DNV_VERSION_STRING=\"390.157\" -Wno-unused-function -Wuninitialized -fno-strict-aliasing -mno-red-zone -mcmodel=kernel -DNV_UVM_ENABLE -Wno-sign-compare -Wno-format-extra-args
+ccflags-y += $(call cc-option,-Werror=undef,)
+ccflags-y += -DNV_SPECTRE_V2=$(NV_SPECTRE_V2)
+ccflags-y += -DNV_KERNEL_INTERFACE_LAYER
 
 #
 # Detect SGI UV systems and apply system-specific optimizations.
 #
 
 ifneq ($(wildcard /proc/sgi_uv),)
- EXTRA_CFLAGS += -DNV_CONFIG_X86_UV
+ ccflags-y += -DNV_CONFIG_X86_UV
 endif
 
 
diff --git a/kernel/nvidia/nv.c b/kernel/nvidia/nv.c
index 4fa9c23d08..2127c1bc28 100644
--- a/kernel/nvidia/nv.c
+++ b/kernel/nvidia/nv.c
@@ -3514,7 +3514,7 @@ int NV_API_CALL nv_stop_rc_timer(
 
     nv_printf(NV_DBG_INFO, "NVRM: stopping rc timer\n");
     nv->rc_timer_enabled = 0;
-    del_timer_sync(&nvl->rc_timer.kernel_timer);
+    timer_delete_sync(&nvl->rc_timer.kernel_timer);
     nv_printf(NV_DBG_INFO, "NVRM: rc timer stopped\n");
 
     return 0;
diff --git a/kernel/nvidia-modeset/nvidia-modeset-linux.c b/kernel/nvidia-modeset/nvidia-modeset-linux.c
index f7f1deffbb..157ac2d7ae 100644
--- a/kernel/nvidia-modeset/nvidia-modeset-linux.c
+++ b/kernel/nvidia-modeset/nvidia-modeset-linux.c
@@ -495,7 +495,7 @@ static void nvkms_kthread_q_callback(void *arg)
      * pending timers and than waiting for workqueue callbacks.
      */
     if (timer->kernel_timer_created) {
-        del_timer_sync(&timer->kernel_timer);
+        timer_delete_sync(&timer->kernel_timer);
     }
 
     down(&nvkms_lock);
@@ -1266,7 +1266,7 @@ restart:
              * completion, and we wait for queue completion with
              * nv_kthread_q_stop below.
              */
-            if (del_timer_sync(&timer->kernel_timer) == 1) {
+            if (timer_delete_sync(&timer->kernel_timer) == 1) {
                 /*  We've deactivated timer so we need to clean after it */
                 list_del(&timer->timers_list);
                 
diff --git a/kernel/nvidia-drm/nvidia-drm-connector.c b/kernel/nvidia-drm/nvidia-drm-connector.c
index 0e9e976ec0..d528a56f3a 100644
--- a/kernel/nvidia-drm/nvidia-drm-connector.c
+++ b/kernel/nvidia-drm/nvidia-drm-connector.c
@@ -313,8 +313,13 @@ static int nv_drm_connector_get_modes(struct drm_connector *connector)
     return count;
 }
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6, 15, 0)
+static int nv_drm_connector_mode_valid(struct drm_connector          *connector,
+                                       const struct drm_display_mode *mode)
+#else
 static int nv_drm_connector_mode_valid(struct drm_connector    *connector,
                                        struct drm_display_mode *mode)
+#endif
 {
     struct drm_device *dev = connector->dev;
     struct nv_drm_device *nv_dev = to_nv_device(dev);
diff --git a/kernel/nvidia/nv-mmap.c b/kernel/nvidia/nv-mmap.c
index da891ffaba..082c42b399 100644
--- a/kernel/nvidia/nv-mmap.c
+++ b/kernel/nvidia/nv-mmap.c
@@ -447,7 +447,11 @@ int nvidia_mmap_helper(
             addr  = mmap_start;
             
             // Needed for the linux kernel for mapping compound pages
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6, 15, 0)
+            vm_flags_reset(vma, vma->vm_flags | VM_MIXEDMAP);
+#else
             vm_flags_set(vma, VM_MIXEDMAP);
+#endif
 
             for (j = 0; j < pages; j++)
             {
@@ -471,7 +475,11 @@ int nvidia_mmap_helper(
             }
         }
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6, 15, 0)
+        vm_flags_reset(vma, vma->vm_flags | VM_IO);
+#else
         vm_flags_set(vma, VM_IO);
+#endif
     }
     else
     {
@@ -533,15 +541,23 @@ int nvidia_mmap_helper(
 
         NV_PRINT_AT(NV_DBG_MEMINFO, at);
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6, 15, 0)
+        vm_flags_reset(vma, vma->vm_flags | (VM_IO | VM_LOCKED | VM_RESERVED | VM_DONTEXPAND | VM_DONTDUMP));
+#else
         vm_flags_set(vma, VM_IO | VM_LOCKED | VM_RESERVED);
         vm_flags_set(vma, VM_DONTEXPAND | VM_DONTDUMP);
+#endif
     }
 
     if ((prot & NV_PROTECT_WRITEABLE) == 0)
     {
         vma->vm_page_prot = NV_PGPROT_READ_ONLY(vma->vm_page_prot);
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6, 15, 0)
+        vm_flags_reset(vma, vma->vm_flags & ~(VM_WRITE | VM_MAYWRITE));
+#else
         vm_flags_clear(vma, VM_WRITE);
         vm_flags_clear(vma, VM_MAYWRITE);
+#endif
     }
 
     vma->vm_ops = &nv_vm_ops;
diff --git a/kernel/nvidia-uvm/uvm8.c b/kernel/nvidia-uvm/uvm8.c
index 49e10472a9..d25274b2d2 100644
--- a/kernel/nvidia-uvm/uvm8.c
+++ b/kernel/nvidia-uvm/uvm8.c
@@ -658,7 +658,11 @@ static int uvm_mmap(struct file *filp, struct vm_area_struct *vma)
     // Using VM_DONTCOPY would be nice, but madvise(MADV_DOFORK) can reset that
     // so we have to handle vm_open on fork anyway. We could disable MADV_DOFORK
     // with VM_IO, but that causes other mapping issues.
-    vm_flags_set(vma, VM_MIXEDMAP | VM_DONTEXPAND);
+    #if LINUX_VERSION_CODE >= KERNEL_VERSION(6, 15, 0)
+        vm_flags_reset(vma, vma->vm_flags | VM_MIXEDMAP | VM_DONTEXPAND);
+    #else
+        vm_flags_set(vma, VM_MIXEDMAP | VM_DONTEXPAND);
+    #endif
 
     vma->vm_ops = &uvm_vm_ops_managed;
 
