diff -Naur NVIDIA-Linux-x86_64-390.157.orig/kernel/common/inc/nv-linux.h NVIDIA-Linux-x86_64-390.157/kernel/common/inc/nv-linux.h
--- NVIDIA-Linux-x86_64-390.157.orig/kernel/common/inc/nv-linux.h	2022-10-12 10:30:27.000000000 +0100
+++ NVIDIA-Linux-x86_64-390.157/kernel/common/inc/nv-linux.h	2023-03-07 20:06:49.727348728 +0000
@@ -1992,4 +1992,30 @@
 #include <linux/backlight.h>
 #endif
 
+#if LINUX_VERSION_CODE < KERNEL_VERSION(6, 3, 0)
+// Rel. commit "mm: introduce vma->vm_flags wrapper functions" (Suren Baghdasaryan, 26 Jan 2023)
+static inline void vm_flags_set(struct vm_area_struct *vma, vm_flags_t flags)
+{
+    vma->vm_flags |= flags;
+}
+
+static inline void vm_flags_clear(struct vm_area_struct *vma, vm_flags_t flags)
+{
+    vma->vm_flags &= ~flags;
+}
+#endif
+
+#if LINUX_VERSION_CODE < KERNEL_VERSION(6, 3, 0)
+// Rel. commit "mm: introduce vma->vm_flags wrapper functions" (Suren Baghdasaryan, 26 Jan 2023)
+static inline void vm_flags_set(struct vm_area_struct *vma, vm_flags_t flags)
+{
+    vma->vm_flags |= flags;
+}
+
+static inline void vm_flags_clear(struct vm_area_struct *vma, vm_flags_t flags)
+{
+    vma->vm_flags &= ~flags;
+}
+#endif
+
 #endif  /* _NV_LINUX_H_ */
diff -Naur NVIDIA-Linux-x86_64-390.157.orig/kernel/nvidia/nv-mmap.c NVIDIA-Linux-x86_64-390.157/kernel/nvidia/nv-mmap.c
--- NVIDIA-Linux-x86_64-390.157.orig/kernel/nvidia/nv-mmap.c	2022-10-12 10:30:26.000000000 +0100
+++ NVIDIA-Linux-x86_64-390.157/kernel/nvidia/nv-mmap.c	2023-03-07 20:09:06.506244737 +0000
@@ -447,7 +447,7 @@
             addr  = mmap_start;
             
             // Needed for the linux kernel for mapping compound pages
-            vma->vm_flags |= VM_MIXEDMAP;
+            vm_flags_set(vma, VM_MIXEDMAP);
 
             for (j = 0; j < pages; j++)
             {
@@ -471,7 +471,7 @@
             }
         }
 
-        vma->vm_flags |= VM_IO;
+         vm_flags_set(vma, VM_IO);
     }
     else
     {
@@ -533,15 +533,15 @@
 
         NV_PRINT_AT(NV_DBG_MEMINFO, at);
 
-        vma->vm_flags |= (VM_IO | VM_LOCKED | VM_RESERVED);
-        vma->vm_flags |= (VM_DONTEXPAND | VM_DONTDUMP);
+        vm_flags_set(vma, VM_IO | VM_LOCKED | VM_RESERVED);
+        vm_flags_set(vma, VM_DONTEXPAND | VM_DONTDUMP);
     }
 
     if ((prot & NV_PROTECT_WRITEABLE) == 0)
     {
         vma->vm_page_prot = NV_PGPROT_READ_ONLY(vma->vm_page_prot);
-        vma->vm_flags &= ~VM_WRITE;
-        vma->vm_flags &= ~VM_MAYWRITE;
+        vm_flags_clear(vma, VM_WRITE);
+        vm_flags_clear(vma, VM_MAYWRITE);
     }
 
     vma->vm_ops = &nv_vm_ops;
diff -Naur NVIDIA-Linux-x86_64-390.157.orig/kernel/nvidia-uvm/uvm8.c NVIDIA-Linux-x86_64-390.157/kernel/nvidia-uvm/uvm8.c
--- NVIDIA-Linux-x86_64-390.157.orig/kernel/nvidia-uvm/uvm8.c	2022-10-12 10:30:28.000000000 +0100
+++ NVIDIA-Linux-x86_64-390.157/kernel/nvidia-uvm/uvm8.c	2023-03-07 20:07:01.967614806 +0000
@@ -658,7 +658,7 @@
     // Using VM_DONTCOPY would be nice, but madvise(MADV_DOFORK) can reset that
     // so we have to handle vm_open on fork anyway. We could disable MADV_DOFORK
     // with VM_IO, but that causes other mapping issues.
-    vma->vm_flags |= VM_MIXEDMAP | VM_DONTEXPAND;
+    vm_flags_set(vma, VM_MIXEDMAP | VM_DONTEXPAND);
 
     vma->vm_ops = &uvm_vm_ops_managed;
 
