SectionVerb {
	Value {
		FullySpecifiedUCM "1"
	}
	EnableSequence [
		exec "echo Main Verb Config EnableSequence"
		cset "name='Left DAI Sel Mux' Left"
		cset "name='Right DAI Sel Mux' Right"
		cset "name='Left VI Sense Switch' on"
		cset "name='Right VI Sense Switch' on"
		cset "name='Left OP Mode Switch' on"
		cset "name='Right OP Mode Switch' on"
		cset "name='Left Speaker Volume' 5"
		cset "name='Right Speaker Volume' 5"
		cset "name='Left Digital Volume' 127"
		cset "name='Right Digital Volume' 127"

		cset "name='Digital Playback Volume' 207"
		cset "name='Headphone Volume' 0"
		cset "name='Frontend PGA Volume' 27"
		cset "name='ADC Phase Switch' 0"
		cset "name='BIQ Coefficients' 0x03,0x5a,0x00,0x06,0xfc,0xac,0x00,0x00,0xfe,0x58,0x00,0x00,0x03,0x50,0x00,0x06,0xfe,0x58,0x00,0x08"
	]
	DisableSequence [
		exec "echo Main Verb Config DisableSequence"
	]
}

# kernel 6.1.x
# (A+)(root@oledeck ~)# amixer -c 1 controls | grep Head
# numid=83,iface=CARD,name='Headset Jack'
# numid=6,iface=MIXER,name='Headphone Crosstalk Volume'
# numid=84,iface=MIXER,name='Headphone Jack Switch'
# numid=3,iface=MIXER,name='Headphone Volume'
# numid=2,iface=MIXER,name='Headphone Bypass Volume'
# numid=85,iface=MIXER,name='Headset Mic Switch'

# kernel 6.5.x
# (B+)(root@oledeck ~)# amixer -c 1 controls | grep Head
# numid=97,iface=CARD,name='Headphone Jack'
# numid=98,iface=CARD,name='Headset Mic Jack'
# numid=6,iface=MIXER,name='Headphone Crosstalk Volume'
# numid=95,iface=MIXER,name='Headphone Jack Switch'
# numid=3,iface=MIXER,name='Headphone Volume'
# numid=2,iface=MIXER,name='Headphone Bypass Volume'
# numid=96,iface=MIXER,name='Headset Mic Switch'

If.oldjack {
	Condition {
		Type ControlExists
		Device "hw:${CardId}"
		Control "iface=CARD,name='Headset Jack'"
	}
	True {
		Define.JACKCONTROL "Headset Jack"
	}
	False {
		If.newjack {
			Condition {
				Type ControlExists
				Device "hw:${CardId}"
				Control "iface=CARD,name='Headphone Jack'"
			}
			True {
				Define.JACKCONTROL "Headphone Jack"
			}
		}
	}
}

If.micjack {
	Condition {
		Type ControlExists
		Device "hw:${CardId}"
		Control "iface=CARD,name='Headset Mic Jack'"
	}
	True {
		Define.HEADSETCONTROL "Headset Mic Jack"
	}
	False {
		Define.HEADSETCONTROL "${var:JACKCONTROL}"
	}
}

SectionDevice."Headphones".0 {
	Comment "Headphones"

	Value {
		PlaybackPriority 200
		PlaybackPCM "hw:${CardId},0"
		JackControl "${var:JACKCONTROL}"
	}

	ConflictingDevice [
	]
	EnableSequence [
		exec "echo Headphones EnableSequence"
		cset "name='Headphone Jack Switch' on"
	]
	DisableSequence [
		exec "echo Headphones DisableSequence"
		cset "name='Headphone Jack Switch' off"
	]
}

SectionDevice."Speaker".0 {
	Comment "Speaker"

	Value {
		PlaybackPriority 100
		PlaybackPCM "hw:${CardId},1"
	}
	ConflictingDevice [
	]
	EnableSequence [
		exec "echo Speaker EnableSequence"
	]
	DisableSequence [
		exec "echo Speaker DisableSequence"
	]
}

SectionDevice."Internal Mic".0 {
	Comment "Internal Microphone"

	Value {
		CapturePriority 200
		CapturePCM "hw:${CardId},0"
	}
	ConflictingDevice [
	]
	EnableSequence [
		cset "name='DMIC Enable Switch' on"
		cset "name='Mic Volume' 252"
		cset "name='ADC Phase Switch' 1"
	]
	DisableSequence [
		cset "name='DMIC Enable Switch' off"
		cset "name='ADC Phase Switch' 0"
	]
}

SectionDevice."Headset" {
	Comment "Headset Microphone"

	Value {
		CapturePriority 300
		CapturePCM "hw:${CardId},0"
		JackControl "${var:HEADSETCONTROL}"
	}
	ConflictingDevice [
	]
	EnableSequence [
		cset "name='Headset Mic Switch' on"
		cset "name='Mic Volume' 200"
	]
	DisableSequence [
		cset "name='Headset Mic Switch' off"
	]
}
