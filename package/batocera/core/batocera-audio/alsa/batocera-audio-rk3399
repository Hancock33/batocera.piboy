#!/bin/sh

ACTION="$1"

case "${ACTION}" in
	list)
		printf '%s\n' auto hdmi headphones custom
	;;

	get)
		/usr/bin/batocera-settings-get audio.device
	;;

    get)
	/usr/bin/batocera-settings-get audio.device
	;;

    set)
	MODE="$2"
	case "${MODE}" in
	    auto | speakers)
		pactl set-default-sink INTERNAL
		amixer -c 0 cset name='Playback Path' SPK
		;;

	    headphone)
		pactl set-default-sink INTERNAL
		amixer -c 0 cset name='Playback Path' HP
		;;
	    *)
		pactl set-default-sink "${MODE}"
	esac
	;;

	getSystemVolume)
	    echo "${DETECT_VOLUME}"
	    ;;

	setSystemVolume)
	    VOLUME="$2"
	    case "${VOLUME}" in
		"mute")
		    pactl set-sink-mute @DEFAULT_SINK@ 1
		    ;;
		"unmute")
		    pactl set-sink-mute @DEFAULT_SINK@ 0
		    ;;
		"mute-toggle")
		    pactl set-sink-mute @DEFAULT_SINK@ toggle
		    ;;
		*)
		    if echo "${VOLUME}" | grep -qE '^[0-9]+$'
		    then
			if test "${VOLUME}" -ge 0 -a "${VOLUME}" -le "${MAX_VOLUME}"
			then
				pactl set-sink-volume @DEFAULT_SINK@ "${VOLUME}%"
				exit 0
			fi
			fi
			else if echo "${VOLUME}" | grep -qE '^[+-][0-9]+$'
			then
				let NEWVOLUME=${DETECT_VOLUME}${VOLUME}
				test "${NEWVOLUME}" -lt 0 && NEWVOLUME=0
				test "${NEWVOLUME}" -gt "${MAX_VOLUME}" && NEWVOLUME=${MAX_VOLUME}
				pactl set-sink-volume @DEFAULT_SINK@ "${NEWVOLUME}%"
				exit 0
			fi
			echo "invalid volume value" >&2
			exit 1
			fi
	    esac
	    ;;


	test)
		aplay "/usr/share/sounds/Mallet.wav"
	;;
esac
