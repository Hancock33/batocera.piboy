#!/bin/bash

# Ensure a valid display is set
if [ -z "$WAYLAND_DISPLAY" ]; then
    if [ -z "$DISPLAY" ]; then
        export DISPLAY=:0.0
    fi
fi

# Check if vulkaninfo exists
if [ ! -x "/usr/bin/vulkaninfo" ]; then
    echo "Vulkan not found"
    exit 1
fi

# Function to list Vulkan GPU devices
list_devices() {
    vulkaninfo | grep deviceName | awk -F'= ' '{print $2}'
}

# Function to count the number of Vulkan GPU devices
num_devices() {
    list_devices | wc -l
}

# Function to check if a discrete GPU exists
has_discrete() {
    vulkaninfo | grep -q PHYSICAL_DEVICE_TYPE_DISCRETE_GPU
    if [ $? -eq 0 ]; then
        echo "true"
    else
        echo "false"
    fi
}

# Function to retrieve the UUID of the discrete GPU
discrete_uuid() {
    device_type_output=$(vulkaninfo | grep deviceType)
    discrete_gpu_index=$(echo "$device_type_output" | grep -n PHYSICAL_DEVICE_TYPE_DISCRETE_GPU | cut -d: -f1)
    if [ -z "$discrete_gpu_index" ]; then
        echo "No discrete GPU found."
        exit 1
    fi

    device_uuid=$(vulkaninfo | grep deviceUUID | sed -n "${discrete_gpu_index}p" | awk -F'=' '{print $2}' | tr -d '[:space:]')
    if [ -z "$device_uuid" ]; then
        echo "Failed to retrieve UUID for the discrete GPU."
        exit 1
    fi

    echo "$device_uuid"
}

# Function to check if Vulkan is available
has_vulkan() {
    vulkaninfo | grep -q deviceName
    if [ $? -eq 0 ]; then
        echo "true"
    else
        echo "false"
    fi
}

# Handle input options
case "$1" in
    "listDevices")
        list_devices
        ;;
    "numDevices")
        num_devices
        ;;
    "hasDiscrete")
        has_discrete
        ;;
    "discreteUUID")
        discrete_uuid
        ;;
    "hasVulkan")
        has_vulkan
        ;;
    *)
        echo "Invalid option. Usage: $0 {listDevices|numDevices|hasDiscrete|discreteUUID|hasVulkan}"
        exit 1
        ;;
esac
