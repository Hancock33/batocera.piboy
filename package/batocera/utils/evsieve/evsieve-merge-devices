#!/bin/bash

# example of rule file to create a pad from 2 pads:
# /etc/udev/rules.d
# KERNEL=="event*", SUBSYSTEM=="input", ATTRS{idVendor}=="146b", ATTRS{idProduct}=="0902", MODE="0666", ENV{ID_INPUT_JOYSTICK}="0", RUN+="/usr/bin/evsieve-merge-devices 'my pad 2' '2dc8 9015' '146b 902'"
# KERNEL=="event*", SUBSYSTEM=="input", ATTRS{idVendor}=="2dc8", ATTRS{idProduct}=="9015", MODE="0666", ENV{ID_INPUT_JOYSTICK}="0", RUN+="/usr/bin/evsieve-merge-devices 'my pad 2' '2dc8 9015' '146b 902'"

eventFromId() {
    PVP=$1
    for DEV in /dev/input/event*
    do
	VP=$(evtest --info "${DEV}" | grep -E '^Input device ID:' | sed -e s+"^.* vendor 0x\([0-9a-f]*\) product 0x\([0-9a-f]*\) .*$"+'\1 \2'+)
	if test "${VP}" == "${PVP}"
	then
	    echo "${DEV}"
	    return 0
	fi
    done
    return 1
}

case "${1}" in
    "--list")
	for DEV in /dev/input/event*
	do
	    VP=$(evtest --info "${DEV}" | grep -E '^Input device ID:' | sed -e s+"^.* vendor 0x\([0-9a-f]*\) product 0x\([0-9a-f]*\) .*$"+'\1 \2'+)
	    VN=$(evtest --info "${DEV}" | grep -E '^Input device name:' | sed -e s+"^Input device name: "++)
	    if test "${VP}" != "0 0"
	    then
		echo "${DEV}: ${VP} ${VN}"
	    fi
	done
	exit 0
	;;
esac

NEWNAME=$1
shift

INPUTS=""
while test $# -gt 0
do
    EVINPUT=$(eventFromId "${1}")
    test $? -ne 0 && exit 1 # id not found, exit, no action taken
    INPUTS="${INPUTS} --input ${EVINPUT}"
    shift
done

echo "evsieve ${INPUTS} persist=exit --output name=\"${NEWNAME}\""
evsieve ${INPUTS} persist=exit --output name="${NEWNAME}"
###
