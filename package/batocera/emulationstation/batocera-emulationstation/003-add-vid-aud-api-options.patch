diff -Naur batocera-emulationstation.orig/es-app/src/CustomFeatures.cpp batocera-emulationstation/es-app/src/CustomFeatures.cpp
--- batocera-emulationstation.orig/es-app/src/CustomFeatures.cpp	2022-01-23 15:32:12.725447803 +0000
+++ batocera-emulationstation/es-app/src/CustomFeatures.cpp	2022-01-23 16:12:25.129375122 +0000
@@ -54,6 +54,8 @@
 		if (trim == "videomode") ret = ret | EmulatorFeatures::Features::videomode;
 		if (trim == "colorization") ret = ret | EmulatorFeatures::Features::colorization;
 		if (trim == "autocontrollers") ret = ret | EmulatorFeatures::Features::autocontrollers;
+		if (trim == "gfxbackend") ret = ret | EmulatorFeatures::Features::gfxbackend;
+		if (trim == "audio_driver") ret = ret | EmulatorFeatures::Features::audio_driver;
 	}
 
 	return ret;
diff -Naur batocera-emulationstation.orig/es-app/src/CustomFeatures.h batocera-emulationstation/es-app/src/CustomFeatures.h
--- batocera-emulationstation.orig/es-app/src/CustomFeatures.h	2022-01-23 15:32:12.725447803 +0000
+++ batocera-emulationstation/es-app/src/CustomFeatures.h	2022-01-23 16:11:20.460644518 +0000
@@ -88,6 +88,8 @@
 		autocontrollers = 262144,
 		framecount = 524288,
 		fps_show = 1048576,
+		gfxbackend = 2097152,
+		audio_driver = 4194304,
 
 		all = 0x0FFFFFFF
 	};
diff -Naur batocera-emulationstation.orig/es-app/src/guis/GuiMenu.cpp batocera-emulationstation/es-app/src/guis/GuiMenu.cpp
--- batocera-emulationstation.orig/es-app/src/guis/GuiMenu.cpp	2022-01-23 15:32:12.725447803 +0000
+++ batocera-emulationstation/es-app/src/guis/GuiMenu.cpp	2022-01-23 16:10:23.199987927 +0000
@@ -1817,6 +1817,24 @@
 		s->addSaveFunc([this, videoModeOptionList] { SystemConf::getInstance()->set("global.videomode", videoModeOptionList->getSelected()); });
 	}
 
+	// GFX Driver
+	if (!hasGlobalFeature("gfxbackend"))
+	{
+		auto gfx_backend = std::make_shared<OptionListComponent<std::string>>(mWindow, _("GRAPHICS API"));
+		gfx_backend->addRange({ { _("AUTO"), "auto" },{ _("OpenGL") , "opengl" },{ _("GLCore") , "glcore" },{ _("Vulkan") , "vulkan" } }, SystemConf::getInstance()->get("global.gfxbackend"));
+		s->addWithLabel(_("GRAPHICS API"), gfx_backend);
+		s->addSaveFunc([gfx_backend] { SystemConf::getInstance()->set("global.gfxbackend", gfx_backend->getSelected()); });
+	}
+
+	// Audio Driver
+	if (!hasGlobalFeature("audio_driver"))
+	{
+		auto audiodriver = std::make_shared<OptionListComponent<std::string>>(mWindow, _("AUDIO API"));
+		audiodriver->addRange({ { _("AUTO"), "auto" },{ _("ALSA") , "alsa" },{ _("ALSAThread") , "alsathread" },{ _("TinyALSA") , "tinyalsa" },{ _("openAL") , "openal" },{ _("SDL2") , "sdl2" },{ _("NULL") , "null" } }, SystemConf::getInstance()->get("global.audio_driver"));
+		s->addWithLabel(_("AUDIO API"), audiodriver);
+		s->addSaveFunc([audiodriver] { SystemConf::getInstance()->set("global.audio_driver", audiodriver->getSelected()); });
+	}
+
  	// FPS
 	if (!hasGlobalFeature("fps_show"))
  	{
