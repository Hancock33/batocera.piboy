diff --git a/es-core/src/platform.cpp b/es-core/src/platform.cpp
index 7b30f397..57221153 100644
--- a/es-core/src/platform.cpp
+++ b/es-core/src/platform.cpp
@@ -339,49 +339,24 @@ BatteryInformation queryBatteryInformation()
 
 	static std::string batteryStatusPath;
 	static std::string batteryCapacityPath;
-	static std::string batteryCurrChargePath;
-	static std::string batteryMaxChargePath;
 
 	// Find battery path - only at the first call
 	if (batteryStatusPath.empty())
 	{
 		std::string batteryRootPath;
-                std::string fuelgaugeRootPath;
-                std::string chargerRootPath;
 
 		auto files = Utils::FileSystem::getDirContent("/sys/class/power_supply");
 		for (auto file : files)
 		{
-			if ( (Utils::String::toLower(file).find("/bat") != std::string::npos) && (batteryRootPath.empty()) )
-				batteryRootPath = file;
-
-			if ( (Utils::String::toLower(file).find("fuel") != std::string::npos) && (fuelgaugeRootPath.empty()) )
-				fuelgaugeRootPath = file;
-
-                        if ( (Utils::String::toLower(file).find("charger") != std::string::npos) && (chargerRootPath.empty()) )
-                                chargerRootPath = file;
-                }
-
-		// If there's no battery device, look for discrete charger and fuel gauge
-		if (batteryRootPath.empty())
-		{
-			if (!fuelgaugeRootPath.empty())
+			if (Utils::String::toLower(file).find("/bat") != std::string::npos)
 			{
-				batteryCurrChargePath = fuelgaugeRootPath + "/charge_now";
-				batteryMaxChargePath = fuelgaugeRootPath + "/charge_full";
-				batteryCapacityPath = ".";
-				// If there's a fuel gauge without "charge_now" or "charge_full" property, don't poll it
-				if ((!Utils::FileSystem::exists(batteryCurrChargePath)) || (!Utils::FileSystem::exists(batteryMaxChargePath)))
-				{
-					batteryCurrChargePath = ".";
-					batteryMaxChargePath = ".";
-				}
+				batteryRootPath = file;
+				break;
 			}
-			if (!chargerRootPath.empty())
-                                batteryStatusPath = chargerRootPath + "/status";
-                        else
-                                batteryStatusPath = ".";
 		}
+
+		if (batteryRootPath.empty())
+			batteryStatusPath = ".";
 		else
 		{
 			batteryStatusPath = batteryRootPath + "/status";
@@ -389,7 +364,7 @@ BatteryInformation queryBatteryInformation()
 		}
 	}
 
-	if ((batteryStatusPath.length() <= 1) || (batteryCurrChargePath.length() <= 1))
+	if (batteryStatusPath.length() <= 1)
 	{
 		ret.hasBattery = false;
 		ret.isCharging = false;
@@ -398,18 +373,8 @@ BatteryInformation queryBatteryInformation()
 	else
 	{
 		ret.hasBattery = true;
-		std::string chargerStatus;
-		chargerStatus = Utils::String::replace(Utils::FileSystem::readAllText(batteryStatusPath), "\n", "");
-		ret.isCharging = ((chargerStatus != "Not charging") && (chargerStatus != "Discharging"));
-		// If reading from fuel gauge, we have to calculate remaining charge
-		if (batteryCapacityPath.length() <= 1)
-		{
-			float now = std::stof(Utils::FileSystem::readAllText(batteryCurrChargePath).c_str());
-			float full = std::stof(Utils::FileSystem::readAllText(batteryMaxChargePath).c_str());
-			ret.level = int(round((now/full)*100));
-		}
-		else
-			ret.level = Utils::String::toInteger(Utils::FileSystem::readAllText(batteryCapacityPath).c_str());
+		ret.isCharging = (Utils::String::replace(Utils::FileSystem::readAllText(batteryStatusPath), "\n", "") != "Discharging");
+		ret.level = atoi(Utils::FileSystem::readAllText(batteryCapacityPath).c_str());
 	}
 
 	return ret;
