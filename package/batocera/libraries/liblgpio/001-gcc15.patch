diff --git a/Makefile b/Makefile
index 6cf86ee..d32f67b 100644
--- a/Makefile
+++ b/Makefile
@@ -26,7 +26,7 @@ CFLAGS	+= -O3 -Wall -pthread -fpic $(CPPFLAGS)
 # -Wunused-local-typedefs -Wunused-macros -fno-common
 
 LIB_LGPIO = liblgpio.so
-LIB_RGPIO = librgpio.so
+#LIB_RGPIO = librgpio.so
 
 OBJ_LGPIO = \
    lgCtx.o \
diff --git a/lgGpio.c b/lgGpio.c
index ee7611c..d5426c7 100644
--- a/lgGpio.c
+++ b/lgGpio.c
@@ -56,7 +56,7 @@ For more information, please refer to <http://unlicense.org/>
 
 void xWrite(lgChipObj_p chip, int gpio, int value);
 
-callbk_t lgGpioSamplesFunc = NULL;
+callbk_alert_t lgGpioSamplesFunc = NULL;
 void *lgGpioSamplesUserdata = NULL;
 
 static inline void xSetBit(uint64_t *b, int n)
diff --git a/lgGpio.h b/lgGpio.h
index c6b103d..ee7739b 100644
--- a/lgGpio.h
+++ b/lgGpio.h
@@ -39,7 +39,7 @@ typedef struct lgLineInf_s
    int      fd;
    int      debounce_us;
    int      watchdog_us;
-   callbk_t alertFunc;
+   callbk_alert_t alertFunc;
    void     *userdata;
    uint32_t offset;
    uint32_t *offsets_p;
@@ -63,7 +63,7 @@ void xWrite(lgChipObj_p chip, int gpio, int value);
 void xGroupWrite(
    lgChipObj_p chip, int gpio, uint64_t groupBits, uint64_t groupMask);
 
-extern callbk_t lgGpioSamplesFunc;
+extern callbk_alert_t lgGpioSamplesFunc;
 extern void *lgGpioSamplesUserdata;
 
 #endif
diff --git a/lgI2C.c b/lgI2C.c
index c1a9fcc..bb9c1dd 100644
--- a/lgI2C.c
+++ b/lgI2C.c
@@ -874,7 +874,7 @@ int lgI2cOpen(int i2cDev, int i2cAddr, int i2cFlags)
    LG_DBG(LG_DEBUG_ALLOC, "alloc i2c: *%p", (void*)i2c);
 
    handle = lgHdlAlloc(
-      LG_HDL_TYPE_I2C, sizeof(lgI2cObj_t), (void **)&i2c, _lgI2cClose);
+      LG_HDL_TYPE_I2C, sizeof(lgI2cObj_t), (void **)&i2c, (void*)_lgI2cClose);
 
    if (handle < 0)
    {
diff --git a/lgNotify.c b/lgNotify.c
index 9903aec..5bafc15 100644
--- a/lgNotify.c
+++ b/lgNotify.c
@@ -123,7 +123,7 @@ int lgNotifyOpenWithSize(int bufSize)
    LG_DBG(LG_DEBUG_INTERNAL, "bufSize=%d", bufSize);
 
    handle = lgHdlAlloc(
-      LG_HDL_TYPE_NOTIFY, sizeof(lgNotify_t), (void**)&h, _notifyClose);
+      LG_HDL_TYPE_NOTIFY, sizeof(lgNotify_t), (void**)&h, (void*)_notifyClose);
 
    if (handle < 0) {return LG_NO_MEMORY;}
 
@@ -178,7 +178,7 @@ int lgNotifyOpenInBand(int fd)
    LG_DBG(LG_DEBUG_TRACE, "fd=%d", fd);
 
    handle = lgHdlAlloc(
-      LG_HDL_TYPE_NOTIFY, sizeof(lgNotify_t), (void**)&h, _notifyClose);
+      LG_HDL_TYPE_NOTIFY, sizeof(lgNotify_t), (void**)&h, (void*)_notifyClose);
 
    if (handle < 0) {return LG_NO_MEMORY;}
 
diff --git a/lgSPI.c b/lgSPI.c
index 0a8957f..40d8793 100644
--- a/lgSPI.c
+++ b/lgSPI.c
@@ -115,7 +115,7 @@ int lgSpiOpen(
    }
 
    handle = lgHdlAlloc(
-      LG_HDL_TYPE_SPI, sizeof(lgSpiObj_t), (void **)&spi, _lgSpiClose);
+      LG_HDL_TYPE_SPI, sizeof(lgSpiObj_t), (void **)&spi, (void*)_lgSpiClose);
 
    if (handle < 0)
    {
diff --git a/lgSerial.c b/lgSerial.c
index 5f9bd75..af642e5 100644
--- a/lgSerial.c
+++ b/lgSerial.c
@@ -95,7 +95,7 @@ int lgSerialOpen(const char *serDev, int serBaud, int serFlags)
    }
 
    handle = lgHdlAlloc(LG_HDL_TYPE_SERIAL, sizeof(lgSerialObj_t),
-               (void**)&ser, _lgSerialClose);
+               (void**)&ser, (void*)_lgSerialClose);
 
    if (handle < 0)
    {
diff --git a/lgpio.3 b/lgpio.3
index 2d14897..28b8a59 100644
--- a/lgpio.3
+++ b/lgpio.3
@@ -1972,7 +1972,7 @@ after the actual level change.
 .br
 
 .EX
-lgSetDebounceTime(h, 16, 1000); // set a millisecond of debounce
+lgGpioSetDebounce(h, 16, 1000); // set a millisecond of debounce
 .br
 
 .EE
diff --git a/lgpio.h b/lgpio.h
index 22f154a..2546ff7 100644
--- a/lgpio.h
+++ b/lgpio.h
@@ -374,7 +374,7 @@ typedef struct
    int      max_emits;
 } lgNotify_t;
 
-typedef void (*callbk_t) ();
+typedef void (*callbk_t) (void *cb);
 
 typedef struct
 {
@@ -420,6 +420,8 @@ typedef void (*lgGpioAlertsFunc_t)  (int           num_alerts,
                                     lgGpioAlert_p alerts,
                                     void          *userdata);
 
+typedef void (*callbk_alert_t) (int i, struct lgGpioAlert_s *data, void *cb);
+
 typedef void *(lgThreadFunc_t) (void *);
 
 
@@ -1284,7 +1286,7 @@ Note that level changes will be timestamped debounce microseconds
 after the actual level change.
 
 ...
-lgSetDebounceTime(h, 16, 1000); // set a millisecond of debounce
+lgGpioSetDebounce(h, 16, 1000); // set a millisecond of debounce
 ...
 D*/
 
