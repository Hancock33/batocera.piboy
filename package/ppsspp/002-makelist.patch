diff --git a/CMakeLists.txt b/CMakeLists.txt
index 341513c..de89a97 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -1,5 +1,5 @@
 # vim:noexpandtab:
-cmake_minimum_required(VERSION 3.6)
+cmake_minimum_required(VERSION 3.5)
 project(PPSSPP)
 enable_language(ASM)
 list(APPEND CMAKE_MODULE_PATH ${CMAKE_SOURCE_DIR}/cmake/Modules)
@@ -107,6 +107,9 @@ endif()
 # Needed for Globals.h
 include_directories("${CMAKE_SOURCE_DIR}")
 
+include_directories(/opt/vc/include /opt/vc/lib/libzip/include)
+link_directories(/opt/vc/lib)
+
 if(USING_EGL)
 	add_definitions(-DUSING_EGL)
 endif()
@@ -234,6 +234,7 @@ set(CommonARM
 	Common/ColorConvNEON.cpp)
 source_group(ARM FILES ${CommonARM})
 
+if(NOT ARMV7)
 set(CommonARM64
 	Common/Arm64Emitter.h
 	Common/Arm64Emitter.cpp
@@ -241,6 +242,7 @@ set(CommonARM64
 	Common/ArmEmitter.cpp
 	Core/Util/DisArm64.cpp)
 source_group(ARM64 FILES ${CommonARM64})
+endif()
 
 set(CommonMIPS
 	Common/MipsCPUDetect.cpp
@@ -413,18 +416,20 @@ if(USE_FFMPEG)
 			endif(DEFINED PLATFORM_ARCH)
 		else(NOT DEFINED FFMPEG_BUILDDIR)
 			# Using shared libraries
-			include_directories(ffmpeg ${FFMPEG_BUILDDIR})
-
-			add_library(libavformat STATIC IMPORTED)
-			set_target_properties(libavformat PROPERTIES IMPORTED_LOCATION ${FFMPEG_BUILDDIR}/libavformat/libavformat.a)
-			add_library(libavcodec STATIC IMPORTED)
-			set_target_properties(libavcodec PROPERTIES IMPORTED_LOCATION ${FFMPEG_BUILDDIR}/libavcodec/libavcodec.a)
-			add_library(libavutil STATIC IMPORTED)
-			set_target_properties(libavutil PROPERTIES IMPORTED_LOCATION ${FFMPEG_BUILDDIR}/libavutil/libavutil.a)
-			add_library(libswresample STATIC IMPORTED)
-			set_target_properties(libswresample PROPERTIES IMPORTED_LOCATION ${FFMPEG_BUILDDIR}/libswresample/libswresample.a)
-			add_library(libswscale STATIC IMPORTED)
-			set_target_properties(libswscale PROPERTIES IMPORTED_LOCATION ${FFMPEG_BUILDDIR}/libswscale/libswscale.a)
+			add_library(libavformat SHARED IMPORTED)
+			set_target_properties(libavformat PROPERTIES IMPORTED_LOCATION /opt/vc/lib/libavformat.so)
+
+			add_library(libavcodec SHARED IMPORTED)
+			set_target_properties(libavcodec PROPERTIES IMPORTED_LOCATION /opt/vc/lib/libavcodec.so)
+
+			add_library(libavutil SHARED IMPORTED)
+			set_target_properties(libavutil PROPERTIES IMPORTED_LOCATION /opt/vc/lib/libavutil.so)
+
+			add_library(libswresample SHARED IMPORTED)
+			set_target_properties(libswresample PROPERTIES IMPORTED_LOCATION /opt/vc/lib/libswresample.so)
+
+			add_library(libswscale SHARED IMPORTED)
+			set_target_properties(libswscale PROPERTIES IMPORTED_LOCATION /opt/vc/lib/libswscale.so)
 
 			SET (FFMPEG_LIBRARIES
 				libavformat
@@ -618,8 +623,8 @@ else()
 endif()
 
 # FindPNG does a few things we don't want. So do it ourselves. Fixed to libpng17
-find_path(PNG_PNG_INCLUDE_DIR NAMES "libpng17/png.h")
-find_library(PNG_LIBRARY NAMES png17 libpng17)
+find_path(PNG_PNG_INCLUDE_DIR NAMES "libpng16/png.h")
+find_library(PNG_LIBRARY NAMES png16 libpng16)
 find_package(PackageHandleStandardArgs)
 find_package_handle_standard_args(PNG REQUIRED_VARS PNG_LIBRARY PNG_PNG_INCLUDE_DIR)
 if (PNG_FOUND)
@@ -627,37 +632,37 @@ if (PNG_FOUND)
 else()
 	if(ARM)
 		set(PNG_ARM_INCLUDES
-            ext/native/ext/libpng17/arm/arm_init.c
-            ext/native/ext/libpng17/arm/filter_neon.S
-            ext/native/ext/libpng17/arm/filter_neon_intrinsics.c
+            ext/native/ext/libpng16/arm/arm_init.c
+            ext/native/ext/libpng16/arm/filter_neon.S
+            ext/native/ext/libpng16/arm/filter_neon_intrinsics.c
         )
 	endif()
-	add_library(png17 STATIC
-		ext/native/ext/libpng17/pngconf.h
-		ext/native/ext/libpng17/pngdebug.h
-		ext/native/ext/libpng17/png.c
-		ext/native/ext/libpng17/png.h
-		ext/native/ext/libpng17/pngerror.c
-		ext/native/ext/libpng17/pngget.c
-		ext/native/ext/libpng17/pnginfo.h
-		ext/native/ext/libpng17/pnglibconf.h
-		ext/native/ext/libpng17/pngmem.c
-		ext/native/ext/libpng17/pngpread.c
-		ext/native/ext/libpng17/pngpriv.h
-		ext/native/ext/libpng17/pngread.c
-		ext/native/ext/libpng17/pngrio.c
-		ext/native/ext/libpng17/pngrtran.c
-		ext/native/ext/libpng17/pngrutil.c
-		ext/native/ext/libpng17/pngset.c
-		ext/native/ext/libpng17/pngstruct.h
-		ext/native/ext/libpng17/pngtest.c
-		ext/native/ext/libpng17/pngtrans.c
-		ext/native/ext/libpng17/pngwio.c
-		ext/native/ext/libpng17/pngwrite.c
-		ext/native/ext/libpng17/pngwtran.c
-		ext/native/ext/libpng17/pngwutil.c
+	add_library(png16 STATIC
+		ext/native/ext/libpng16/pngconf.h
+		ext/native/ext/libpng16/pngdebug.h
+		ext/native/ext/libpng16/png.c
+		ext/native/ext/libpng16/png.h
+		ext/native/ext/libpng16/pngerror.c
+		ext/native/ext/libpng16/pngget.c
+		ext/native/ext/libpng16/pnginfo.h
+		ext/native/ext/libpng16/pnglibconf.h
+		ext/native/ext/libpng16/pngmem.c
+		ext/native/ext/libpng16/pngpread.c
+		ext/native/ext/libpng16/pngpriv.h
+		ext/native/ext/libpng16/pngread.c
+		ext/native/ext/libpng16/pngrio.c
+		ext/native/ext/libpng16/pngrtran.c
+		ext/native/ext/libpng16/pngrutil.c
+		ext/native/ext/libpng16/pngset.c
+		ext/native/ext/libpng16/pngstruct.h
+		ext/native/ext/libpng16/pngtest.c
+		ext/native/ext/libpng16/pngtrans.c
+		ext/native/ext/libpng16/pngwio.c
+		ext/native/ext/libpng16/pngwrite.c
+		ext/native/ext/libpng16/pngwtran.c
+		ext/native/ext/libpng16/pngwutil.c
 		${PNG_ARM_INCLUDES} )
-	set(PNG_LIBRARY png17)
+	set(PNG_LIBRARY png16)
 	include_directories(ext/native/ext)
 endif()
 
@@ -1099,7 +1104,7 @@ if(ARMV7)
 	set(CORE_NEON Core/Util/AudioFormatNEON.cpp Core/Util/AudioFormatNEON.h)
 endif()
 
-if(ARMV7)
+if(ARM_NEON)
 	set(GPU_NEON GPU/Common/TextureDecoderNEON.cpp)
 endif()
 set(GPU_SOURCES
