uClibc considers ntp_* functions deprecated and only enabled via
UCLIBC_NTP_LEGACY which isn't the default or in BR configs so switch
to adjtimex which is basically the same.

Signed-off-by: Gustavo Zacarias <gustavo@zacarias.com.ar>

diff -Nura openntpd-5.7p1.orig/compat/adjfreq_linux.c openntpd-5.7p1/compat/adjfreq_linux.c
--- openntpd-5.7p1.orig/compat/adjfreq_linux.c	2015-01-08 19:45:15.482915628 -0300
+++ openntpd-5.7p1/compat/adjfreq_linux.c	2015-01-08 19:45:50.972864070 -0300
@@ -37,20 +37,20 @@
 		txc.modes = ADJ_FREQUENCY;
 		txc.freq = *freq / 1e3 / (1LL << 16);
 
-		if ((ntp_adjtime(&txc)) == -1)
-			log_warn("ntp_adjtime (2) failed");
+		if ((adjtimex(&txc)) == -1)
+			log_warn("adjtimex (2) failed");
 
-		log_debug("ntp_adjtime adjusted frequency by %fppm",
+		log_debug("adjtimex adjusted frequency by %fppm",
 			  ((txc.freq * 1e3) *  (1LL<<16) / 1e3 / (1LL << 32)));
 	}
 	if (oldfreq != NULL) {
 		txc.modes = 0;
-		if ((ntp_adjtime(&txc)) == -1) {
-			log_warn("ntp_adjtime (1) failed");
+		if ((adjtimex(&txc)) == -1) {
+			log_warn("adjtimex (1) failed");
 			return -1;
 		}
 		newfreq = (txc.freq * 1e3) *  (1LL<<16);
-		log_debug("ntp_adjtime returns frequency of %fppm",
+		log_debug("adjtimex returns frequency of %fppm",
 			  newfreq / 1e3 / (1LL << 32));
 		*oldfreq = newfreq;
 	}
