From 1a8fc696111d01a14b64f0f2ac5524568d4ea5a3 Mon Sep 17 00:00:00 2001
From: Martin Blumenstingl <martin.blumenstingl@googlemail.com>
Date: Tue, 22 Dec 2020 14:36:09 +0100
Subject: [PATCH 023/122] pinctrl: meson: meson8: move GPIO_BSD_EN to the CBUS
 GPIO controller

Configuring the GPIO_BSD_EN pin is done using different registers:
- output high/low is in CBUS PREG_PAD_GPIO0_O[31]
- pull-up/down is in CBUS PAD_PULL_UP_REG2[0]
- output enable is in CBUS PREG_PAD_GPIO0_O[30]
- unknown purpose: CBUS PREG_PAD_GPIO0_O[29] has to be cleared
- unknown purpose: SECBUS2 AO_SECURE_REG0[0] has to be set

This means five out of six bits needed to configure this pin are in the
CBUS region. Additionally one bit has to be configured which is in the
SECBUS2 region (instead of AOBUS region as the other AOBUS pins).

Move the GPIO_BSD_EN pin to the CBUS group and configure the output
high/low, pull-up/down and output enable bits. The two unknown ones will
be hooked up in the future.

Signed-off-by: Martin Blumenstingl <martin.blumenstingl@googlemail.com>
---
 drivers/pinctrl/meson/pinctrl-meson8.c  | 16 +++++++++++++---
 drivers/pinctrl/meson/pinctrl-meson8b.c |  9 ++++++++-
 include/dt-bindings/gpio/meson8-gpio.h  |  4 ++--
 3 files changed, 23 insertions(+), 6 deletions(-)

diff --git a/drivers/pinctrl/meson/pinctrl-meson8.c b/drivers/pinctrl/meson/pinctrl-meson8.c
index dd17100efdcf..37b76ed112cc 100644
--- a/drivers/pinctrl/meson/pinctrl-meson8.c
+++ b/drivers/pinctrl/meson/pinctrl-meson8.c
@@ -130,6 +130,7 @@ static const struct pinctrl_pin_desc meson8_cbus_pins[] = {
 	MESON_PIN(BOOT_16),
 	MESON_PIN(BOOT_17),
 	MESON_PIN(BOOT_18),
+	MESON_PIN(GPIO_BSD_EN),
 };
 
 static const struct pinctrl_pin_desc meson8_aobus_pins[] = {
@@ -147,7 +148,6 @@ static const struct pinctrl_pin_desc meson8_aobus_pins[] = {
 	MESON_PIN(GPIOAO_11),
 	MESON_PIN(GPIOAO_12),
 	MESON_PIN(GPIOAO_13),
-	MESON_PIN(GPIO_BSD_EN),
 	MESON_PIN(GPIO_TEST_N),
 };
 
@@ -526,6 +526,7 @@ static struct meson_pmx_group meson8_cbus_groups[] = {
 	GPIO_GROUP(BOOT_16),
 	GPIO_GROUP(BOOT_17),
 	GPIO_GROUP(BOOT_18),
+	GPIO_GROUP(GPIO_BSD_EN),
 
 	/* bank X */
 	GROUP(sd_d0_a,		8,	5),
@@ -760,7 +761,6 @@ static struct meson_pmx_group meson8_aobus_groups[] = {
 	GPIO_GROUP(GPIOAO_11),
 	GPIO_GROUP(GPIOAO_12),
 	GPIO_GROUP(GPIOAO_13),
-	GPIO_GROUP(GPIO_BSD_EN),
 	GPIO_GROUP(GPIO_TEST_N),
 
 	/* bank AO */
@@ -827,13 +827,15 @@ static const char * const gpio_periphs_groups[] = {
 	"BOOT_5", "BOOT_6", "BOOT_7", "BOOT_8", "BOOT_9",
 	"BOOT_10", "BOOT_11", "BOOT_12", "BOOT_13", "BOOT_14",
 	"BOOT_15", "BOOT_16", "BOOT_17", "BOOT_18",
+
+	"GPIO_BSD_EN",
 };
 
 static const char * const gpio_aobus_groups[] = {
 	"GPIOAO_0", "GPIOAO_1", "GPIOAO_2", "GPIOAO_3",
 	"GPIOAO_4", "GPIOAO_5", "GPIOAO_6", "GPIOAO_7",
 	"GPIOAO_8", "GPIOAO_9", "GPIOAO_10", "GPIOAO_11",
-	"GPIOAO_12", "GPIOAO_13", "GPIO_BSD_EN", "GPIO_TEST_N"
+	"GPIOAO_12", "GPIOAO_13", "GPIO_TEST_N"
 };
 
 static const char * const sd_a_groups[] = {
@@ -1072,6 +1074,14 @@ static struct meson_bank meson8_cbus_banks[] = {
 	BANK("Z",    GPIOZ_0,  GPIOZ_14,    14,   28, 1,  0,  1,  0,  3, 17,  4, 17,  5, 17),
 	BANK("CARD", CARD_0,   CARD_6,      58,   64, 2, 20,  2, 20,  0, 22,  1, 22,  2, 22),
 	BANK("BOOT", BOOT_0,   BOOT_18,     39,   57, 2,  0,  2,  0,  9,  0, 10,  0, 11,  0),
+
+	/*
+	 * BSD_EN may need some extra gpio_chip.request handling as the vendor kernel:
+	 * - clears CBUS PREG_PAD_GPIO0_O[29]
+	 * - sets SECBUS2 AO_SECURE_REG0[0]
+	 */
+	BANK("BSD_EN", GPIO_BSD_EN, GPIO_BSD_EN,
+					    -1,   -1, 0, -1,  2, 31,  1, 30,  1, 31,  0, -1),
 };
 
 static struct meson_bank meson8_aobus_banks[] = {
diff --git a/drivers/pinctrl/meson/pinctrl-meson8b.c b/drivers/pinctrl/meson/pinctrl-meson8b.c
index 6cd4b3ec1b40..39bb0c4b21ed 100644
--- a/drivers/pinctrl/meson/pinctrl-meson8b.c
+++ b/drivers/pinctrl/meson/pinctrl-meson8b.c
@@ -931,11 +931,18 @@ static struct meson_bank meson8b_cbus_banks[] = {
 	BANK("BOOT",	 BOOT_0,	BOOT_18,    24,  42,  2,  0,   2,  0,   9,  0,  10,  0,  11,  0),
 
 	/*
-	 * The following bank is not mentionned in the public datasheet
+	 * The following banks is not mentionned in the public datasheet
 	 * There is no information whether it can be used with the gpio
 	 * interrupt controller
 	 */
 	BANK("DIF",	 DIF_0_P,	DIF_4_N,    -1,  -1,  5,  8,   5,  8,  12, 12,  13, 12,  14, 12),
+
+	/*
+	 * BSD_EN may need some extra gpio_chip.request handling as the vendor kernel:
+	 * - clears CBUS PREG_PAD_GPIO0_O[29]
+	 * - sets SECBUS2 AO_SECURE_REG0[0]
+	 */
+	BANK("BSD_EN",	 GPIO_BSD_EN,	GPIO_BSD_EN,-1, -1,  0, -1,   2, 31,   1, 30,  1, 31,    0, -1),
 };
 
 static struct meson_bank meson8b_aobus_banks[] = {
diff --git a/include/dt-bindings/gpio/meson8-gpio.h b/include/dt-bindings/gpio/meson8-gpio.h
index e2d083104dfd..6ea78baf5b1c 100644
--- a/include/dt-bindings/gpio/meson8-gpio.h
+++ b/include/dt-bindings/gpio/meson8-gpio.h
@@ -129,6 +129,7 @@
 #define BOOT_16		117
 #define BOOT_17		118
 #define BOOT_18		119
+#define GPIO_BSD_EN	120
 
 /* Second GPIO chip */
 #define GPIOAO_0	0
@@ -145,7 +146,6 @@
 #define GPIOAO_11	11
 #define GPIOAO_12	12
 #define GPIOAO_13	13
-#define GPIO_BSD_EN	14
-#define GPIO_TEST_N	15
+#define GPIO_TEST_N	14
 
 #endif /* _DT_BINDINGS_MESON8_GPIO_H */
-- 
2.25.1

