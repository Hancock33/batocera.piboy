--- a/drivers/amlogic/drm/meson_hdmi.c	2023-07-18 16:14:53.099868337 +0200
+++ b/drivers/amlogic/drm/meson_hdmi.c	2023-07-18 16:15:27.736704869 +0200
@@ -820,8 +820,6 @@
 	struct am_hdmitx_connector_state *new_hdmitx_state, *old_hdmitx_state;
 	struct drm_crtc_state *new_crtc_state = NULL;
 	struct am_hdmi_tx *am_hdmitx = connector_to_am_hdmi(connector);
-	unsigned int hdmitx_content_type =
-		am_hdmitx->hdmitx_dev->get_content_types();
 
 	if (!state) {
 		DRM_ERROR("state is NULL.\n");
@@ -838,16 +836,6 @@
 		return -EINVAL;
 	}
 
-	/*check content type.*/
-	if (((1 << new_hdmitx_state->base.content_type) &
-		hdmitx_content_type) == 0) {
-		DRM_ERROR("[%s] check contentype[%d-%u] fail\n",
-			__func__,
-			new_hdmitx_state->base.content_type,
-			hdmitx_content_type);
-		return -EINVAL;
-	}
-
 	if (new_hdmitx_state->base.crtc)
 		new_crtc_state = drm_atomic_get_new_crtc_state(state,
 			new_hdmitx_state->base.crtc);
--- a/drivers/amlogic/drm/meson_hdmi.c	2023-07-18 16:21:04.740714898 +0200
+++ b/drivers/amlogic/drm/meson_hdmi.c	2023-07-18 16:21:26.605228321 +0200
@@ -819,7 +819,6 @@
 {
 	struct am_hdmitx_connector_state *new_hdmitx_state, *old_hdmitx_state;
 	struct drm_crtc_state *new_crtc_state = NULL;
-	struct am_hdmi_tx *am_hdmitx = connector_to_am_hdmi(connector);
 
 	if (!state) {
 		DRM_ERROR("state is NULL.\n");
--- a/arch/arm64/boot/dts/amlogic/kvim4.dts	2023-07-18 16:16:58.874892229 +0200
+++ b/arch/arm64/boot/dts/amlogic/kvim4.dts	2023-07-18 16:17:06.259068657 +0200
@@ -1750,7 +1750,7 @@
 	status = "okay";
 	enc_idx = <2>;
 	/* hdcp ctrl 0: sysctrl, 1: drv, 2: linux app */
-	hdcp_ctl_lvl = <1>;
+	hdcp_ctl_lvl = <2>;
 };
 
 /*if you want to use vdin just modify status to "ok"*/
