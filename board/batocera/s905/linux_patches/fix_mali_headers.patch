diff --git a/drivers/gator/gator_events_mali_4xx.c b/drivers/gator/gator_events_mali_4xx.c
index 9cf43fe..6607745 100644
--- a/drivers/gator/gator_events_mali_4xx.c
+++ b/drivers/gator/gator_events_mali_4xx.c
@@ -12,8 +12,6 @@
 #include <linux/time.h>
 #include <linux/math64.h>
 
-#include "linux/mali_linux_trace.h"
-
 #include "gator_events_mali_common.h"
 #include "gator_events_mali_4xx.h"
 
@@ -112,24 +110,6 @@ static inline int is_hw_counter(unsigned int event_id)
 	return (event_id >= FIRST_HW_COUNTER && event_id <= LAST_HW_COUNTER);
 }
 
-/* Probe for hardware counter events */
-GATOR_DEFINE_PROBE(mali_hw_counter, TP_PROTO(unsigned int event_id, unsigned int value))
-{
-	if (is_hw_counter(event_id))
-		counter_data[event_id] = value;
-}
-
-GATOR_DEFINE_PROBE(mali_sw_counters, TP_PROTO(pid_t pid, pid_t tid, void *surface_id, unsigned int *counters))
-{
-	u32 i;
-
-	/* Copy over the values for those counters which are enabled. */
-	for (i = FIRST_SW_COUNTER; i <= LAST_SW_COUNTER; i++) {
-		if (counter_enabled[i])
-			counter_data[i] = (u32)(counters[i - FIRST_SW_COUNTER]);
-	}
-}
-
 /**
  * Create a single filesystem entry for a specified event.
  * @param sb the superblock
@@ -439,18 +419,6 @@ static void mali_counter_deinitialize(void)
 
 static int start(void)
 {
-	/* register tracepoints */
-	if (GATOR_REGISTER_TRACE(mali_hw_counter)) {
-		pr_err("gator: mali_hw_counter tracepoint failed to activate\n");
-		return -1;
-	}
-
-	/* For Mali drivers with built-in support. */
-	if (GATOR_REGISTER_TRACE(mali_sw_counters)) {
-		pr_err("gator: mali_sw_counters tracepoint failed to activate\n");
-		return -1;
-	}
-
 	trace_registered = 1;
 
 	mali_counter_initialize();
@@ -464,11 +432,6 @@ static void stop(void)
 	pr_debug("gator: mali stop\n");
 
 	if (trace_registered) {
-		GATOR_UNREGISTER_TRACE(mali_hw_counter);
-
-		/* For Mali drivers with built-in support. */
-		GATOR_UNREGISTER_TRACE(mali_sw_counters);
-
 		pr_debug("gator: mali timeline tracepoint deactivated\n");
 
 		trace_registered = 0;
diff --git a/drivers/gator/gator_main.c b/drivers/gator/gator_main.c
index 30bf60d..caaf9e1 100644
--- a/drivers/gator/gator_main.c
+++ b/drivers/gator/gator_main.c
@@ -1407,15 +1407,12 @@ static void gator_op_create_files(struct super_block *sb, struct dentry *root)
 	GATOR_HANDLE_TRACEPOINT(cpu_migrate_current); \
 	GATOR_HANDLE_TRACEPOINT(cpu_migrate_finish); \
 	GATOR_HANDLE_TRACEPOINT(irq_handler_exit); \
-	GATOR_HANDLE_TRACEPOINT(mali_hw_counter); \
 	GATOR_HANDLE_TRACEPOINT(mali_job_slots_event); \
 	GATOR_HANDLE_TRACEPOINT(mali_mmu_as_in_use); \
 	GATOR_HANDLE_TRACEPOINT(mali_mmu_as_released); \
 	GATOR_HANDLE_TRACEPOINT(mali_page_fault_insert_pages); \
 	GATOR_HANDLE_TRACEPOINT(mali_pm_status); \
 	GATOR_HANDLE_TRACEPOINT(mali_sw_counter); \
-	GATOR_HANDLE_TRACEPOINT(mali_sw_counters); \
-	GATOR_HANDLE_TRACEPOINT(mali_timeline_event); \
 	GATOR_HANDLE_TRACEPOINT(mali_total_alloc_pages_change); \
 	GATOR_HANDLE_TRACEPOINT(mm_page_alloc); \
 	GATOR_HANDLE_TRACEPOINT(mm_page_free); \
diff --git a/drivers/gator/gator_trace_gpu.c b/drivers/gator/gator_trace_gpu.c
index 5de9152..eea0253 100644
--- a/drivers/gator/gator_trace_gpu.c
+++ b/drivers/gator/gator_trace_gpu.c
@@ -16,10 +16,8 @@
 #ifdef MALI_SUPPORT
 #ifdef MALI_DIR_MIDGARD
 /* New DDK Directory structure with kernel/drivers/gpu/arm/midgard*/
-#include "mali_linux_trace.h"
 #else
 /* Old DDK Directory structure with kernel/drivers/gpu/arm/t6xx*/
-#include "linux/mali_linux_trace.h"
 #endif
 #endif
 
@@ -184,50 +182,6 @@ enum {
 
 struct mali_counter mali_activity[2];
 
-GATOR_DEFINE_PROBE(mali_timeline_event, TP_PROTO(unsigned int event_id, unsigned int d0, unsigned int d1, unsigned int d2, unsigned int d3, unsigned int d4))
-{
-	unsigned int component, state;
-
-	/* do as much work as possible before disabling interrupts */
-	component = (event_id >> 16) & 0xFF;	/* component is an 8-bit field */
-	state = (event_id >> 24) & 0xF;	/* state is a 4-bit field */
-
-	switch (state) {
-	case EVENT_TYPE_START:
-		if (component == EVENT_CHANNEL_VP0) {
-			/* tgid = d0; pid = d1; */
-			if (mali_activity[1].enabled)
-				mali_activity_enqueue(0, mali_activity[1].key, 1, d1);
-		} else if (component >= EVENT_CHANNEL_FP0 && component <= EVENT_CHANNEL_FP7) {
-			/* tgid = d0; pid = d1; */
-			if (mali_activity[0].enabled)
-				mali_activity_enqueue(component - EVENT_CHANNEL_FP0, mali_activity[0].key, 1, d1);
-		}
-		break;
-
-	case EVENT_TYPE_STOP:
-		if (component == EVENT_CHANNEL_VP0) {
-			if (mali_activity[1].enabled)
-				mali_activity_stop(0, mali_activity[1].key);
-		} else if (component >= EVENT_CHANNEL_FP0 && component <= EVENT_CHANNEL_FP7) {
-			if (mali_activity[0].enabled)
-				mali_activity_stop(component - EVENT_CHANNEL_FP0, mali_activity[0].key);
-		}
-		break;
-
-	case EVENT_TYPE_SINGLE:
-		if (component == EVENT_CHANNEL_GPU) {
-			unsigned int reason = (event_id & 0xffff);
-
-			if (reason == EVENT_REASON_SINGLE_GPU_FREQ_VOLT_CHANGE)
-				gator_events_mali_log_dvfs_event(d0, d1);
-		}
-		break;
-
-	default:
-		break;
-	}
-}
 #endif
 
 #if defined(MALI_SUPPORT) && (MALI_SUPPORT == MALI_MIDGARD)
@@ -292,8 +246,6 @@ static int gator_trace_gpu_start(void)
 
 #if defined(MALI_SUPPORT) && (MALI_SUPPORT != MALI_MIDGARD)
 	mali_activity_clear(mali_activity, ARRAY_SIZE(mali_activity));
-	if (!GATOR_REGISTER_TRACE(mali_timeline_event))
-		mali_timeline_trace_registered = 1;
 #endif
 
 #if defined(MALI_SUPPORT) && (MALI_SUPPORT == MALI_MIDGARD)
@@ -308,8 +260,6 @@ static int gator_trace_gpu_start(void)
 static void gator_trace_gpu_stop(void)
 {
 #if defined(MALI_SUPPORT) && (MALI_SUPPORT != MALI_MIDGARD)
-	if (mali_timeline_trace_registered)
-		GATOR_UNREGISTER_TRACE(mali_timeline_event);
 #endif
 
 #if defined(MALI_SUPPORT) && (MALI_SUPPORT == MALI_MIDGARD)
