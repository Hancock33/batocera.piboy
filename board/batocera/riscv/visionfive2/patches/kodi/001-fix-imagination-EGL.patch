diff --git a/xbmc/windowing/gbm/WinSystemGbmEGLContext.cpp b/xbmc/windowing/gbm/WinSystemGbmEGLContext.cpp
index 83a59413f7..2a434b87a4 100644
--- a/xbmc/windowing/gbm/WinSystemGbmEGLContext.cpp
+++ b/xbmc/windowing/gbm/WinSystemGbmEGLContext.cpp
@@ -110,7 +110,7 @@ bool CWinSystemGbmEGLContext::CreateNewWindow(const std::string& name,
 
   if (!m_eglContext.CreatePlatformSurface(
           m_GBM->GetDevice().GetSurface().Get(),
-          reinterpret_cast<khronos_uintptr_t>(m_GBM->GetDevice().GetSurface().Get())))
+          reinterpret_cast<EGLNativeWindowType>(m_GBM->GetDevice().GetSurface().Get())))
   {
     return false;
   }
diff --git a/xbmc/windowing/wayland/WinSystemWaylandEGLContext.cpp b/xbmc/windowing/wayland/WinSystemWaylandEGLContext.cpp
index a32cd1484f..fbff321848 100644
--- a/xbmc/windowing/wayland/WinSystemWaylandEGLContext.cpp
+++ b/xbmc/windowing/wayland/WinSystemWaylandEGLContext.cpp
@@ -70,7 +70,7 @@ bool CWinSystemWaylandEGLContext::CreateNewWindow(const std::string& name,
   // to the resolution that should be used for the initial surface size
   // - the compositor might want something other than the resolution given
   if (!m_eglContext.CreatePlatformSurface(
-          m_nativeWindow.c_ptr(), reinterpret_cast<khronos_uintptr_t>(m_nativeWindow.c_ptr())))
+          m_nativeWindow.c_ptr(), reinterpret_cast<EGLNativeWindowType>(m_nativeWindow.c_ptr())))
   {
     return false;
   }
