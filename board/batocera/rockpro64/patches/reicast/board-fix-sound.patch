diff --git a/core/oslib/audiobackend_alsa.cpp b/core/oslib/audiobackend_alsa.cpp
index 25fa113..37fa913 100644
--- a/core/oslib/audiobackend_alsa.cpp
+++ b/core/oslib/audiobackend_alsa.cpp
@@ -5,6 +5,18 @@
 
 snd_pcm_t *handle;
 
+static bool find_float_format(snd_pcm_t *pcm, void *data)
+{
+   snd_pcm_hw_params_t *params = (snd_pcm_hw_params_t*)data;
+
+   if (snd_pcm_hw_params_test_format(pcm, params, SND_PCM_FORMAT_FLOAT) == 0)
+   {
+      return true;
+   }
+
+   return false;
+}
+
 // We're making these functions static - there's no need to pollute the global namespace
 static void alsa_init()
 {
@@ -56,6 +68,8 @@ static void alsa_init()
 	/* Allocate a hardware parameters object. */
 	snd_pcm_hw_params_alloca(&params);
 
+	snd_pcm_format_t format = find_float_format(handle, params) ? SND_PCM_FORMAT_FLOAT : SND_PCM_FORMAT_S16_LE;
+
 	/* Fill it in with default values. */
 	rc=snd_pcm_hw_params_any(handle, params);
 	if (rc < 0)
@@ -75,7 +89,7 @@ static void alsa_init()
 	}
 
 	/* Signed 16-bit little-endian format */
-	rc=snd_pcm_hw_params_set_format(handle, params, SND_PCM_FORMAT_S16_LE);
+	rc=snd_pcm_hw_params_set_format(handle, params, format);
 	if (rc < 0)
 	{
 		fprintf(stderr, "Error:snd_pcm_hw_params_set_format %s\n", snd_strerror(rc));
