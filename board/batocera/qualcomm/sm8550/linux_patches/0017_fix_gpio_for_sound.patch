diff --git a/sound/soc/codecs/aw88166.c b/sound/soc/codecs/aw88166.c
index 2511d6bf75..e2636bde62 100644
--- a/sound/soc/codecs/aw88166.c
+++ b/sound/soc/codecs/aw88166.c
@@ -123,12 +123,14 @@ static int aw_dev_dsp_read(struct aw_device *aw_dev,
 	case AW88166_DSP_16_DATA:
 		ret = aw_dev_dsp_read_16bit(aw_dev, dsp_addr, dsp_data);
 		if (ret)
-			dev_err(aw_dev->dev, "read dsp_addr[0x%x] 16-bit failed", (u32)dsp_addr);
+			dev_err(aw_dev->dev, "read dsp_addr[0x%x] 16-bit dsp_data[0x%x] failed",
+					(u32)dsp_addr, *dsp_data);
 		break;
 	case AW88166_DSP_32_DATA:
 		ret = aw_dev_dsp_read_32bit(aw_dev, dsp_addr, dsp_data);
 		if (ret)
-			dev_err(aw_dev->dev, "read dsp_addr[0x%x] 32-bit failed", (u32)dsp_addr);
+			dev_err(aw_dev->dev, "read dsp_addr[0x%x] 32r-bit dsp_data[0x%x] failed",
+					(u32)dsp_addr, *dsp_data);
 		break;
 	default:
 		dev_err(aw_dev->dev, "data type[%d] unsupported", data_type);
@@ -1646,6 +1648,8 @@ static void aw88166_hw_reset(struct aw88166 *aw88166)
 		usleep_range(AW88166_1000_US, AW88166_1000_US + 10);
 		gpiod_set_value_cansleep(aw88166->reset_gpio, 0);
 		usleep_range(AW88166_1000_US, AW88166_1000_US + 10);
+		gpiod_set_value_cansleep(aw88166->reset_gpio, 1);
+		usleep_range(AW88166_1000_US, AW88166_1000_US + 10);
 	}
 }
 
