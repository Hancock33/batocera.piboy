diff --git a/drivers/hid/hid-playstation.c b/drivers/hid/hid-playstation.c
index 1468fb11e3..41e4885aa3 100644
--- a/drivers/hid/hid-playstation.c
+++ b/drivers/hid/hid-playstation.c
@@ -368,6 +368,7 @@ struct dualshock4 {
 	struct input_dev *gamepad;
 	struct input_dev *sensors;
 	struct input_dev *touchpad;
+	bool has_broken_crc;
 
 	/* Calibration data for accelerometer and gyroscope. */
 	struct ps_calibration_data accel_calib_data[3];
@@ -2247,7 +2248,7 @@ static int dualshock4_parse_report(struct ps_device *ps_dev, struct hid_report *
 		uint32_t report_crc = get_unaligned_le32(&bt->crc32);
 
 		/* Last 4 bytes of input report contains CRC. */
-		if (!ps_check_crc32(PS_INPUT_CRC32_SEED, data, size - 4, report_crc)) {
+		if (!ds4->has_broken_crc && !ps_check_crc32(PS_INPUT_CRC32_SEED, data, size - 4, report_crc)) {
 			hid_err(hdev, "DualShock4 input CRC's check failed\n");
 			return -EILSEQ;
 		}
@@ -2623,6 +2624,10 @@ static struct ps_device *dualshock4_create(struct hid_device *hdev)
 	if (ret) {
 		hid_warn(hdev, "Failed to get calibration data from DualShock4\n");
 		hid_warn(hdev, "Gyroscope and accelerometer will be inaccurate.\n");
+		if (hdev->bus == BUS_BLUETOOTH) {
+			hid_info(hdev, "Assuming clone controller due to calibration failure; disabling CRC check.\n");
+			ds4->has_broken_crc = true;
+		}
 	}
 
 	ds4->gamepad = ps_gamepad_create(hdev, dualshock4_play_effect);
