diff --git a/os_dep/linux/ioctl_cfg80211.c b/os_dep/linux/ioctl_cfg80211.c
index e0f0e3d6df..bef049b8ff
--- a/os_dep/linux/ioctl_cfg80211.c
+++ b/os_dep/linux/ioctl_cfg80211.c
@@ -6879,49 +6879,65 @@ static void rtw_get_chbwoff_from_cfg80211_chan_def(
 }
 #endif /* (LINUX_VERSION_CODE >= KERNEL_VERSION(3, 8, 0)) */
 
-static int cfg80211_rtw_set_monitor_channel(struct wiphy *wiphy
-#if (LINUX_VERSION_CODE >= KERNEL_VERSION(3, 8, 0))
-	, struct cfg80211_chan_def *chandef
+static int cfg80211_rtw_set_monitor_channel(struct wiphy *wiphy,
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 13, 0))
+                                            struct net_device *dev,
+                                            struct cfg80211_chan_def *chandef
+#elif (LINUX_VERSION_CODE >= KERNEL_VERSION(3, 8, 0))
+                                            struct cfg80211_chan_def *chandef
 #else
-	, struct ieee80211_channel *chan
-	, enum nl80211_channel_type channel_type
+                                            struct ieee80211_channel *chan,
+                                            enum nl80211_channel_type channel_type
 #endif
-	)
-{
-	_adapter *padapter = wiphy_to_adapter(wiphy);
-	u8 target_channal, target_offset, target_width, ht_option;
+) {
+    _adapter *padapter = wiphy_to_adapter(wiphy);
+    u8 target_channal, target_offset, target_width, ht_option;
 
-#if (LINUX_VERSION_CODE >= KERNEL_VERSION(3, 8, 0))
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 13, 0))
+    (void)dev; // Suppress unused parameter warning
 #ifdef CONFIG_DEBUG_CFG80211
-	RTW_INFO("center_freq %u Mhz ch %u width %u freq1 %u freq2 %u\n"
-		, chandef->chan->center_freq
-		, chandef->chan->hw_value
-		, chandef->width
-		, chandef->center_freq1
-		, chandef->center_freq2);
+    RTW_INFO("center_freq %u MHz ch %u width %u freq1 %u freq2 %u\n",
+             chandef->chan->center_freq,
+             chandef->chan->hw_value,
+             chandef->width,
+             chandef->center_freq1,
+             chandef->center_freq2);
 #endif /* CONFIG_DEBUG_CFG80211 */
 
-	rtw_get_chbwoff_from_cfg80211_chan_def(chandef,
-		&ht_option, &target_channal, &target_width, &target_offset);
+    rtw_get_chbwoff_from_cfg80211_chan_def(chandef,
+                                           &ht_option, &target_channal, &target_width, &target_offset);
+#elif (LINUX_VERSION_CODE >= KERNEL_VERSION(3, 8, 0))
+#ifdef CONFIG_DEBUG_CFG80211
+    RTW_INFO("center_freq %u MHz ch %u width %u freq1 %u freq2 %u\n",
+             chandef->chan->center_freq,
+             chandef->chan->hw_value,
+             chandef->width,
+             chandef->center_freq1,
+             chandef->center_freq2);
+#endif /* CONFIG_DEBUG_CFG80211 */
+
+    rtw_get_chbwoff_from_cfg80211_chan_def(chandef,
+                                           &ht_option, &target_channal, &target_width, &target_offset);
 #else
 #ifdef CONFIG_DEBUG_CFG80211
-	RTW_INFO("center_freq %u Mhz ch %u channel_type %u\n"
-		, chan->center_freq
-		, chan->hw_value
-		, channel_type);
+    RTW_INFO("center_freq %u MHz ch %u channel_type %u\n",
+             chan->center_freq,
+             chan->hw_value,
+             channel_type);
 #endif /* CONFIG_DEBUG_CFG80211 */
 
-	rtw_get_chbw_from_nl80211_channel_type(chan, channel_type,
-		&ht_option, &target_channal, &target_width, &target_offset);
+    rtw_get_chbw_from_nl80211_channel_type(chan, channel_type,
+                                           &ht_option, &target_channal, &target_width, &target_offset);
 #endif
-	RTW_INFO(FUNC_ADPT_FMT" ch:%d bw:%d, offset:%d\n",
-		FUNC_ADPT_ARG(padapter), target_channal,
-		target_width, target_offset);
 
-	rtw_set_chbw_cmd(padapter, target_channal, target_width,
-		target_offset, RTW_CMDF_WAIT_ACK);
+    RTW_INFO(FUNC_ADPT_FMT " ch:%d bw:%d, offset:%d\n",
+             FUNC_ADPT_ARG(padapter), target_channal,
+             target_width, target_offset);
 
-	return 0;
+    rtw_set_chbw_cmd(padapter, target_channal, target_width,
+                     target_offset, RTW_CMDF_WAIT_ACK);
+
+    return 0;
 }
 
 void rtw_cfg80211_external_auth_request(_adapter *padapter, union recv_frame *rframe)
