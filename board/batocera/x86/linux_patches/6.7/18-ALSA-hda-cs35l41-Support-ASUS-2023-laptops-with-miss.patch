diff --git a/sound/pci/hda/cs35l41_hda_property.c b/sound/pci/hda/cs35l41_hda_property.c
index c83328971728..7aa90359f03e 100644
--- a/sound/pci/hda/cs35l41_hda_property.c
+++ b/sound/pci/hda/cs35l41_hda_property.c
@@ -81,6 +81,49 @@ static int hp_vision_acpi_fix(struct cs35l41_hda *cs35l41, struct device *physde
 	return 0;
 }
 
+static int asus_rog_2023_i2c_no_acpi(struct cs35l41_hda *cs35l41, struct device *physdev, int id,
+				const char *hid)
+{
+	struct cs35l41_hw_cfg *hw_cfg = &cs35l41->hw_cfg;
+
+	/* check I2C address to assign the index */
+	cs35l41->index = id == 0x40 ? 0 : 1;
+	cs35l41->channel_index = 0;
+	cs35l41->reset_gpio = gpiod_get_index(physdev, NULL, 0, GPIOD_OUT_HIGH);
+	cs35l41->speaker_id = cs35l41_get_speaker_id(physdev, 0, 0, 2);
+	hw_cfg->spk_pos = cs35l41->index;
+	hw_cfg->gpio2.func = CS35L41_INTERRUPT;
+	hw_cfg->gpio2.valid = true;
+	hw_cfg->bst_type = CS35L41_EXT_BOOST_NO_VSPK_SWITCH;
+	hw_cfg->valid = true;
+
+	return 0;
+}
+
+/*
+ * Some SPI connected versions may be missing a chip select GPIO and require a DSD table patch.
+ */
+static int asus_rog_2023_spi_no_acpi(struct cs35l41_hda *cs35l41, struct device *physdev, int id,
+				const char *hid)
+{
+	struct cs35l41_hw_cfg *hw_cfg = &cs35l41->hw_cfg;
+
+	/* check SPI address to assign the index */
+	cs35l41->index = id == 0 ? 0 : 1;
+	cs35l41->channel_index = 0;
+	cs35l41->reset_gpio = gpiod_get_index(physdev, NULL, 0, GPIOD_OUT_HIGH);
+	cs35l41->speaker_id = cs35l41_get_speaker_id(physdev, 0, 0, 2);
+	hw_cfg->spk_pos = cs35l41->index;
+	hw_cfg->bst_type = CS35L41_EXT_BOOST;
+	hw_cfg->gpio1.func = CS35l41_VSPK_SWITCH;
+	hw_cfg->gpio1.valid = true;
+	hw_cfg->gpio2.func = CS35L41_INTERRUPT;
+	hw_cfg->gpio2.valid = true;
+	hw_cfg->valid = true;
+
+	return 0;
+}
+
 struct cs35l41_prop_model {
 	const char *hid;
 	const char *ssid;
@@ -92,6 +135,17 @@ static const struct cs35l41_prop_model cs35l41_prop_model_table[] = {
 	{ "CLSA0100", NULL, lenovo_legion_no_acpi },
 	{ "CLSA0101", NULL, lenovo_legion_no_acpi },
 	{ "CSC3551", "103C89C6", hp_vision_acpi_fix },
+	{ "CSC3551", "10431433", asus_rog_2023_i2c_no_acpi }, // ASUS GS650P
+	{ "CSC3551", "10431463", asus_rog_2023_i2c_no_acpi }, // ASUS GA402X
+	{ "CSC3551", "10431473", asus_rog_2023_spi_no_acpi }, // ASUS GU604V
+	{ "CSC3551", "10431483", asus_rog_2023_spi_no_acpi }, // ASUS GU603V
+	{ "CSC3551", "10431493", asus_rog_2023_spi_no_acpi }, // ASUS GV601V
+	{ "CSC3551", "10431573", asus_rog_2023_spi_no_acpi }, // ASUS GZ301V
+	{ "CSC3551", "104317F3", asus_rog_2023_i2c_no_acpi }, // ASUS ROG ALLY
+	{ "CSC3551", "10431B93", asus_rog_2023_spi_no_acpi }, // ASUS G614J
+	{ "CSC3551", "10431CAF", asus_rog_2023_spi_no_acpi }, // ASUS G634J
+	{ "CSC3551", "10431C9F", asus_rog_2023_spi_no_acpi }, // ASUS G614JI
+	{ "CSC3551", "10431D1F", asus_rog_2023_i2c_no_acpi }, // ASUS G713P
 	{}
 };
 
