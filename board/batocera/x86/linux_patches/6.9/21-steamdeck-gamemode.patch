diff --git a/drivers/hid/hid-steam.c b/drivers/hid/hid-steam.c
index b08a5ab58528..3b1adacda930 100644
--- a/drivers/hid/hid-steam.c
+++ b/drivers/hid/hid-steam.c
@@ -876,7 +876,9 @@ static int steam_register(struct steam_device *steam)
 
 		hid_info(steam->hdev, "Steam Controller '%s' connected",
 				steam->serial_no);
-
+		/* start in gamepad mode */
+		steam->gamepad_mode = true;
+		steam_set_lizard_mode(steam, false);
 		/* ignore battery errors, we can live without it */
 		if (steam->quirks & STEAM_QUIRK_WIRELESS)
 			steam_battery_register(steam);
@@ -1217,6 +1219,7 @@ static void steam_do_connect_event(struct steam_device *steam, bool connected)
 	steam->connected = connected;
 	spin_unlock_irqrestore(&steam->lock, flags);
 
+
 	if (changed && schedule_work(&steam->work_connect) == 0)
 		dbg_hid("%s: connected=%d event already queued\n",
 				__func__, connected);
@@ -1480,10 +1483,10 @@ static void steam_do_deck_input_event(struct steam_device *steam,
 	b13 = data[13];
 	b14 = data[14];
 
-	if (!(b9 & BIT(6)) && steam->did_mode_switch) {
+	if (!(b9 & BIT(5)) && !(b14 & BIT(2)) && steam->did_mode_switch) {
 		steam->did_mode_switch = false;
 		cancel_delayed_work_sync(&steam->mode_switch);
-	} else if (!steam->client_opened && (b9 & BIT(6)) && !steam->did_mode_switch) {
+	} else if (!steam->client_opened && (b9 & BIT(5)) && (b14 & BIT(2)) && !steam->did_mode_switch) {
 		steam->did_mode_switch = true;
 		schedule_delayed_work(&steam->mode_switch, 45 * HZ / 100);
 	}
