diff --git a/xbmc/windowing/gbm/drm/DRMUtils.cpp b/xbmc/windowing/gbm/drm/DRMUtils.cpp
index 3dd4ee9783..262e63a23f 100644
--- a/xbmc/windowing/gbm/drm/DRMUtils.cpp
+++ b/xbmc/windowing/gbm/drm/DRMUtils.cpp
@@ -353,8 +353,24 @@ bool CDRMUtils::OpenDrm(bool needConnector)
       if (!resources)
         continue;
 
+      // batocera
+      int drmConn = 0;
+      {
+	FILE* fdDrmConn;
+	int drmConnRead;
+	if((fdDrmConn = fopen("/var/run/drmConn", "r")) != NULL) {
+	  if(fscanf(fdDrmConn, "%i", &drmConnRead) == 1) {
+	    if(drmConnRead>=0 && drmConn<resources->count_connectors) {
+	      drmConn = drmConnRead;
+	    }
+	  }
+	}
+      }
+      //
+
       m_connectors.clear();
       for (int i = 0; i < resources->count_connectors; i++)
+        if(i == drmConn)
         m_connectors.emplace_back(std::make_unique<CDRMConnector>(m_fd, resources->connectors[i]));
 
       drmModeFreeResources(resources);
@@ -429,7 +445,24 @@ bool CDRMUtils::InitDrm()
   }
 
   m_connectors.clear();
+
+  // batocera
+  int drmConn = 0;
+  {
+    FILE* fdDrmConn;
+    int drmConnRead;
+    if((fdDrmConn = fopen("/var/run/drmConn", "r")) != NULL) {
+      if(fscanf(fdDrmConn, "%i", &drmConnRead) == 1) {
+	if(drmConnRead>=0 && drmConn<resources->count_connectors) {
+	  drmConn = drmConnRead;
+	}
+      }
+    }
+  }
+  //
+
   for (int i = 0; i < resources->count_connectors; i++)
+    if(i == drmConn)
     m_connectors.emplace_back(std::make_unique<CDRMConnector>(m_fd, resources->connectors[i]));
 
   m_encoders.clear();
