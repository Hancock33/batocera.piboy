diff --git a/configure b/configure
index e0f164f9e..c5b016712 100755
--- a/configure
+++ b/configure
@@ -928,6 +928,7 @@ enable_render_metal
 enable_video_directfb
 enable_directfb_shared
 enable_video_kmsdrm
+enable_video_mali
 enable_kmsdrm_shared
 enable_video_dummy
 enable_video_offscreen
@@ -25585,6 +25586,10 @@ fi
 
         video_kmsdrm=no
 
+    if  test x$enable_video_mali = xyes; then
+$as_echo "#define SDL_VIDEO_DRIVER_MALI 1" >>confdefs.h
+            SUMMARY_video="${SUMMARY_video} mali"
+    fi
 
 pkg_failed=no
 { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for libdrm >= 1.4.82" >&5
diff --git a/configure.ac b/configure.ac
index 907d1d082..edd22b682 100644
--- a/configure.ac
+++ b/configure.ac
@@ -2413,6 +2413,15 @@ CheckKMSDRM()
             video_kmsdrm=yes
         fi
 
+        AC_ARG_ENABLE(video-mali,
+        [AS_HELP_STRING([--enable-video-mali], 
+	       [use Mali video driver [default=no]])],
+	      , enable_video_mali=yes)
+        if test x$enable_video = xyes && x$enable_video_mali = xyes; then
+            AC_DEFINE(SDL_VIDEO_DRIVER_MALI, 1, [ ])
+            SUMMARY_video="${SUMMARY_video} mali"
+        fi
+
         if test x$video_kmsdrm = xyes; then
             AC_ARG_ENABLE(kmsdrm-shared,
 [AS_HELP_STRING([--enable-kmsdrm-shared], [dynamically load kmsdrm support [default=yes]])],
@@ -2519,7 +2528,9 @@ CheckGLX()
         AC_MSG_RESULT($video_opengl_glx)
         if test x$video_opengl_glx = xyes; then
             AC_DEFINE(SDL_VIDEO_OPENGL, 1, [ ])
-            AC_DEFINE(SDL_VIDEO_OPENGL_GLX, 1, [ ])
+#
+# Disable GLX on MALI platform to make sure SDL loads OpenGLES2 with HW acceleration
+#            AC_DEFINE(SDL_VIDEO_OPENGL_GLX, 1, [ ])
         fi
     fi
 }
diff --git a/include/SDL_config.h.in b/include/SDL_config.h.in
index f5dd166ff..16b25d521 100644
--- a/include/SDL_config.h.in
+++ b/include/SDL_config.h.in
@@ -385,6 +385,7 @@
 #undef SDL_VIDEO_DRIVER_WAYLAND_DYNAMIC_LIBDECOR
 #undef SDL_VIDEO_DRIVER_X11
 #undef SDL_VIDEO_DRIVER_RPI
+#undef SDL_VIDEO_DRIVER_MALI
 #undef SDL_VIDEO_DRIVER_KMSDRM
 #undef SDL_VIDEO_DRIVER_KMSDRM_DYNAMIC
 #undef SDL_VIDEO_DRIVER_KMSDRM_DYNAMIC_GBM
diff --git a/src/video/SDL_egl.c b/src/video/SDL_egl.c
index a89c0e812..4e7a9cd18 100644
--- a/src/video/SDL_egl.c
+++ b/src/video/SDL_egl.c
@@ -516,6 +516,22 @@ int SDL_EGL_LoadLibrary(_THIS, const char *egl_path, NativeDisplayType native_di
          * Therefore SDL_EGL_GetVersion() shouldn't work with uninitialized display.
          * - it actually doesn't work on Android that has 1.5 egl client
          * - it works on desktop X11 (using SDL_VIDEO_X11_FORCE_EGL=1) */
+#if defined(SDL_VIDEO_DRIVER_MALI)
+	if (SDL_EGL_HasExtension(_this, SDL_EGL_CLIENT_EXTENSION, "EGL_EXT_platform_base")) {
+	    _this->egl_data->eglGetPlatformDisplayEXT = SDL_EGL_GetProcAddress(_this, "eglGetPlatformDisplayEXT");
+	     if (_this->egl_data->eglGetPlatformDisplayEXT) {
+		 _this->egl_data->egl_display = _this->egl_data->eglGetPlatformDisplayEXT(platform, native_display, NULL);
+	     } else {
+		 if (_this->egl_data->eglGetPlatformDisplay) {
+		     _this->egl_data->egl_display = _this->egl_data->eglGetPlatformDisplay(platform, native_display, NULL);
+		  }
+	     }
+	} else {
+	     if (_this->egl_data->eglGetPlatformDisplay) {
+		 _this->egl_data->egl_display = _this->egl_data->eglGetPlatformDisplay(platform, native_display, NULL);
+	     }
+	}
+#else
         SDL_EGL_GetVersion(_this);
 
         if (_this->egl_data->egl_version_major == 1 && _this->egl_data->egl_version_minor == 5) {
@@ -532,6 +548,8 @@ int SDL_EGL_LoadLibrary(_THIS, const char *egl_path, NativeDisplayType native_di
                 }
             }
         }
+
+#endif
     }
 #endif
     /* Try the implementation-specific eglGetDisplay even if eglGetPlatformDisplay fails */
diff --git a/src/video/kmsdrm/SDL_kmsdrmopengles.c b/src/video/kmsdrm/SDL_kmsdrmopengles.c
index 9b34d6896..e2af1b2cb 100644
--- a/src/video/kmsdrm/SDL_kmsdrmopengles.c
+++ b/src/video/kmsdrm/SDL_kmsdrmopengles.c
@@ -41,7 +41,7 @@ void KMSDRM_GLES_DefaultProfileConfig(_THIS, int *mask, int *major, int *minor)
 {
     /* if SDL was _also_ built with the Raspberry Pi driver (so we're
        definitely a Pi device), default to GLES2. */
-#ifdef SDL_VIDEO_DRIVER_RPI
+#if defined(SDL_VIDEO_DRIVER_RPI) || defined(SDL_VIDEO_DRIVER_MALI)
     *mask = SDL_GL_CONTEXT_PROFILE_ES;
     *major = 2;
     *minor = 0;
