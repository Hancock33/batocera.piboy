diff --git a/es-core/src/renderers/Renderer_GLES20.cpp b/es-core/src/renderers/Renderer_GLES20.cpp
index 3d3cabb..99de1db 100644
--- a/es-core/src/renderers/Renderer_GLES20.cpp
+++ b/es-core/src/renderers/Renderer_GLES20.cpp
@@ -803,21 +803,27 @@ namespace Renderer
 		useProgram(&shaderProgramColorNoTexture);
 
 		glEnable(GL_STENCIL_TEST);
-		glColorMask(GL_FALSE, GL_FALSE, GL_FALSE, GL_FALSE);
-		glDepthMask(GL_FALSE);
-		glStencilFunc(GL_NEVER, 1, 0xFF);
-		glStencilOp(GL_REPLACE, GL_KEEP, GL_KEEP);
-		glStencilMask(0xFF);
-		glClear(GL_STENCIL_BUFFER_BIT);
-		
-		glBufferData(GL_ARRAY_BUFFER, sizeof(Vertex) * _numVertices, _vertices, GL_DYNAMIC_DRAW);
-		glDrawArrays(GL_TRIANGLE_FAN, 0, _numVertices);
-
-		glColorMask(GL_TRUE, GL_TRUE, GL_TRUE, GL_TRUE);
-		glDepthMask(GL_TRUE);
-		glStencilMask(0x00);
-		glStencilFunc(GL_EQUAL, 0, 0xFF);
-		glStencilFunc(GL_EQUAL, 1, 0xFF);
+
+        glClearStencil(0);
+        glClear(GL_DEPTH_BUFFER_BIT|GL_STENCIL_BUFFER_BIT);
+
+        glColorMask(GL_FALSE, GL_FALSE, GL_FALSE, GL_FALSE);
+        glDepthMask(GL_FALSE);
+
+        glStencilFunc(GL_ALWAYS, 1, ~0);
+        glStencilOp(GL_KEEP, GL_KEEP, GL_REPLACE);
+
+        glEnable(GL_BLEND);
+        glBlendFunc(convertBlendFactor(Blend::SRC_ALPHA), convertBlendFactor(Blend::ONE_MINUS_SRC_ALPHA));
+        glBufferData(GL_ARRAY_BUFFER, sizeof(Vertex) * _numVertices, _vertices, GL_DYNAMIC_DRAW);
+        glDrawArrays(GL_TRIANGLE_FAN, 0, _numVertices);
+        glDisable(GL_BLEND);
+
+        glColorMask(GL_TRUE, GL_TRUE, GL_TRUE, GL_TRUE);
+        glDepthMask(GL_TRUE);
+
+        glStencilFunc(GL_EQUAL, 1, ~0);
+        glStencilOp(GL_KEEP, GL_KEEP, GL_KEEP);
 	}
 
 	void GLES20Renderer::disableStencil()
